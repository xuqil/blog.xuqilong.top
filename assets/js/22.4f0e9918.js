(window.webpackJsonp=window.webpackJsonp||[]).push([[22],{403:function(t,a,e){"use strict";e.r(a);var s=e(11),n=Object(s.a)({},(function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"序列化器字段"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#序列化器字段"}},[t._v("#")]),t._v(" "),e("a",{attrs:{href:"https://www.django-rest-framework.org/api-guide/fields/#serializer-fields",target:"_blank",rel:"noopener noreferrer"}},[t._v("序列化器字段"),e("OutboundLink")],1)]),t._v(" "),e("blockquote",[e("p",[t._v("Form类中的每个字段不仅负责验证数据，还负责“清理”数据-将其标准化为一致的格式。")]),t._v(" "),e("p",[t._v("— "),e("a",{attrs:{href:"https://docs.djangoproject.com/en/stable/ref/forms/api/#django.forms.Form.cleaned_data",target:"_blank",rel:"noopener noreferrer"}},[t._v("Django文档"),e("OutboundLink")],1)])]),t._v(" "),e("p",[t._v("序列化器字段处理原始值和内部数据类型之间的转换。它们还处理验证输入值，以及从其父对象检索和设置值。")]),t._v(" "),e("hr"),t._v(" "),e("p",[t._v("**注意：**序列化器字段是在中声明的"),e("code",[t._v("fields.py")]),t._v("，但是按照惯例，您应该使用导入它们，"),e("code",[t._v("from rest_framework import serializers")]),t._v("并将字段称为"),e("code",[t._v("serializers.")]),t._v("。")]),t._v(" "),e("hr"),t._v(" "),e("h2",{attrs:{id:"核心参数"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#核心参数"}},[t._v("#")]),t._v(" "),e("a",{attrs:{href:"https://www.django-rest-framework.org/api-guide/fields/#core-arguments",target:"_blank",rel:"noopener noreferrer"}},[t._v("核心参数"),e("OutboundLink")],1)]),t._v(" "),e("p",[t._v("每个序列化程序字段类构造函数都至少接受这些参数。某些Field类采用其他特定于字段的参数，但应始终接受以下内容：")]),t._v(" "),e("h3",{attrs:{id:"read-only"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#read-only"}},[t._v("#")]),t._v(" "),e("a",{attrs:{href:"https://www.django-rest-framework.org/api-guide/fields/#read_only",target:"_blank",rel:"noopener noreferrer"}},[e("code",[t._v("read_only")]),e("OutboundLink")],1)]),t._v(" "),e("p",[t._v("只读字段包含在API输出中，但在创建或更新操作期间不应包含在输入中。错误地包含在串行器输入中的所有“ read_only”字段都将被忽略。")]),t._v(" "),e("p",[t._v("进行设置"),e("code",[t._v("True")]),t._v("以确保序列化表示形式时使用该字段，而在反序列化期间创建或更新实例时不使用该字段。")]),t._v(" "),e("p",[t._v("默认为 "),e("code",[t._v("False")])]),t._v(" "),e("h3",{attrs:{id:"write-only"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#write-only"}},[t._v("#")]),t._v(" "),e("a",{attrs:{href:"https://www.django-rest-framework.org/api-guide/fields/#write_only",target:"_blank",rel:"noopener noreferrer"}},[e("code",[t._v("write_only")]),e("OutboundLink")],1)]),t._v(" "),e("p",[t._v("进行设置"),e("code",[t._v("True")]),t._v("以确保在更新或创建实例时可以使用该字段，但在序列化表示形式时不包括该字段。")]),t._v(" "),e("p",[t._v("默认为 "),e("code",[t._v("False")])]),t._v(" "),e("h3",{attrs:{id:"required"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#required"}},[t._v("#")]),t._v(" "),e("a",{attrs:{href:"https://www.django-rest-framework.org/api-guide/fields/#required",target:"_blank",rel:"noopener noreferrer"}},[e("code",[t._v("required")]),e("OutboundLink")],1)]),t._v(" "),e("p",[t._v("通常，如果在反序列化期间未提供字段，则会引发错误。如果反序列化期间不需要此字段，则设置为"),e("code",[t._v("false")]),t._v("。")]),t._v(" "),e("p",[t._v("将此设置为"),e("code",[t._v("False")]),t._v("还允许在序列化实例时从输出中省略对象属性或字典键。如果键不存在，它就不会包含在输出表示中。")]),t._v(" "),e("p",[t._v("默认为"),e("code",[t._v("True")]),t._v("。")]),t._v(" "),e("h3",{attrs:{id:"default"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#default"}},[t._v("#")]),t._v(" "),e("a",{attrs:{href:"https://www.django-rest-framework.org/api-guide/fields/#default",target:"_blank",rel:"noopener noreferrer"}},[e("code",[t._v("default")]),e("OutboundLink")],1)]),t._v(" "),e("p",[t._v("如果设置了，这将提供默认值，如果未提供输入值，则该值将用于字段。如果未设置，则默认行为是根本不填充属性。")]),t._v(" "),e("p",[t._v("在部分更新操作期间不应用默认值"),e("code",[t._v("default")]),t._v("。在部分更新的情况下，只有传入数据中提供的字段将返回验证值。")]),t._v(" "),e("p",[t._v("可以设置为函数或其他可调用的，在这种情况下，每次使用该值时都将对其求值。调用时，它将不接收任何参数。如果可调用对象具有"),e("code",[t._v("requires_context = True")]),t._v("属性，则序列化器字段将作为参数传递。")]),t._v(" "),e("p",[t._v("例如：")]),t._v(" "),e("div",{staticClass:"language-python extra-class"},[e("pre",{pre:!0,attrs:{class:"language-python"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("CurrentUserDefault")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token triple-quoted-string string"}},[t._v('"""\n    May be applied as a `default=...` value on a serializer field.\n    Returns the current user.\n    """')]),t._v("\n    requires_context "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("True")]),t._v("\n\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("__call__")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" serializer_field"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" serializer_field"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("context"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'request'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("user\n")])])]),e("p",[t._v("序列化实例时，如果实例中不存在对象属性或字典键，则将使用默认值。")]),t._v(" "),e("p",[t._v("请注意，"),e("strong",[t._v("设置"),e("code",[t._v("default")]),t._v("值意味着该字段不是必需的。同时包含"),e("code",[t._v("default")]),t._v("和"),e("code",[t._v("required")]),t._v("关键字参数都是无效的")]),t._v("，并且会引发错误。")]),t._v(" "),e("h3",{attrs:{id:"allow-null"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#allow-null"}},[t._v("#")]),t._v(" "),e("a",{attrs:{href:"https://www.django-rest-framework.org/api-guide/fields/#allow_null",target:"_blank",rel:"noopener noreferrer"}},[e("code",[t._v("allow_null")]),e("OutboundLink")],1)]),t._v(" "),e("p",[t._v("如果"),e("code",[t._v("None")]),t._v("传递给序列化器字段，通常会引发错误。将此关键字参数设置为"),e("code",[t._v("True")]),t._v("if "),e("code",[t._v("None")]),t._v("应该被视为有效值。")]),t._v(" "),e("p",[t._v("请注意，如果没有explicit "),e("code",[t._v("default")]),t._v("，将此参数设置为"),e("code",[t._v("True")]),t._v("会隐含序列化输出的"),e("code",[t._v("default")]),t._v("值"),e("code",[t._v("null")]),t._v("，但并不隐含输入反序列化的默认值。")]),t._v(" "),e("p",[t._v("默认为 "),e("code",[t._v("False")])]),t._v(" "),e("h3",{attrs:{id:"source"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#source"}},[t._v("#")]),t._v(" "),e("a",{attrs:{href:"https://www.django-rest-framework.org/api-guide/fields/#source",target:"_blank",rel:"noopener noreferrer"}},[e("code",[t._v("source")]),e("OutboundLink")],1)]),t._v(" "),e("p",[t._v("将用于填充字段的属性的名称。可能是只接受"),e("code",[t._v("self")]),t._v("变量的方法，例如"),e("code",[t._v("URLField（source='get_absolute_url'）")]),t._v("，也可能使用点符号遍历属性，例如"),e("code",[t._v("EmailField（source='user.email'）")]),t._v("。使用点符号序列化字段时，如果在属性遍历期间没有任何对象或对象为空，则可能需要提供默认值"),e("code",[t._v("default")]),t._v("。")]),t._v(" "),e("p",[t._v("值"),e("code",[t._v("source='*'")]),t._v("具有特殊含义，用于指示整个对象应传递给字段。这对于创建嵌套表示或需要访问完整对象以确定输出表示的字段非常有用。")]),t._v(" "),e("p",[t._v("默认为字段的名称。")]),t._v(" "),e("h3",{attrs:{id:"validators"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#validators"}},[t._v("#")]),t._v(" "),e("a",{attrs:{href:"https://www.django-rest-framework.org/api-guide/fields/#validators",target:"_blank",rel:"noopener noreferrer"}},[e("code",[t._v("validators")]),e("OutboundLink")],1)]),t._v(" "),e("p",[t._v("验证器功能列表，应将其应用于输入字段输入，并引发验证错误或简单地返回。验证器函数通常应该提高"),e("code",[t._v("serializers.ValidationError")]),t._v("，但是"),e("code",[t._v("ValidationError")]),t._v("还支持Django的内置函数，以便与Django代码库或第三方Django软件包中定义的验证器兼容。")]),t._v(" "),e("h3",{attrs:{id:"error-messages"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#error-messages"}},[t._v("#")]),t._v(" "),e("a",{attrs:{href:"https://www.django-rest-framework.org/api-guide/fields/#error_messages",target:"_blank",rel:"noopener noreferrer"}},[e("code",[t._v("error_messages")]),e("OutboundLink")],1)]),t._v(" "),e("p",[t._v("错误代码到错误消息的字典。")]),t._v(" "),e("h3",{attrs:{id:"label"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#label"}},[t._v("#")]),t._v(" "),e("a",{attrs:{href:"https://www.django-rest-framework.org/api-guide/fields/#label",target:"_blank",rel:"noopener noreferrer"}},[e("code",[t._v("label")]),e("OutboundLink")],1)]),t._v(" "),e("p",[t._v("一个简短的文本字符串，可用作HTML表单字段或其他描述性元素中的字段名称。")]),t._v(" "),e("h3",{attrs:{id:"help-text"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#help-text"}},[t._v("#")]),t._v(" "),e("a",{attrs:{href:"https://www.django-rest-framework.org/api-guide/fields/#help_text",target:"_blank",rel:"noopener noreferrer"}},[e("code",[t._v("help_text")]),e("OutboundLink")],1)]),t._v(" "),e("p",[t._v("可用作在HTML表单字段或其他描述性元素中对该字段进行描述的文本字符串。")]),t._v(" "),e("h3",{attrs:{id:"initial"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#initial"}},[t._v("#")]),t._v(" "),e("a",{attrs:{href:"https://www.django-rest-framework.org/api-guide/fields/#initial",target:"_blank",rel:"noopener noreferrer"}},[e("code",[t._v("initial")]),e("OutboundLink")],1)]),t._v(" "),e("p",[t._v("该值应用于预先填充HTML表单字段的值。您可以将callable传递给它，就像处理任何常规Django一样"),e("code",[t._v("Field")]),t._v("：")]),t._v(" "),e("div",{staticClass:"language-python extra-class"},[e("pre",{pre:!0,attrs:{class:"language-python"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" datetime\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" rest_framework "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" serializers\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ExampleSerializer")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("serializers"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Serializer"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    day "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" serializers"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("DateField"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("initial"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("datetime"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("date"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("today"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),e("h3",{attrs:{id:"style"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#style"}},[t._v("#")]),t._v(" "),e("a",{attrs:{href:"https://www.django-rest-framework.org/api-guide/fields/#style",target:"_blank",rel:"noopener noreferrer"}},[e("code",[t._v("style")]),e("OutboundLink")],1)]),t._v(" "),e("p",[t._v("键值对字典，可用于控制渲染器应如何渲染字段。")]),t._v(" "),e("p",[t._v("这里的两个例子是"),e("code",[t._v("'input_type'")]),t._v("和"),e("code",[t._v("'base_template'")]),t._v("：")]),t._v(" "),e("div",{staticClass:"language-python extra-class"},[e("pre",{pre:!0,attrs:{class:"language-python"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v('# Use <input type="password"> for the input.')]),t._v("\npassword "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" serializers"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("CharField"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    style"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'input_type'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'password'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Use a radio input instead of a select input.")]),t._v("\ncolor_channel "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" serializers"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ChoiceField"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    choices"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'red'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'green'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'blue'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    style"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'base_template'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'radio.html'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),e("p",[t._v("有关更多详细信息，请参见"),e("a",{attrs:{href:"https://www.django-rest-framework.org/topics/html-and-forms/",target:"_blank",rel:"noopener noreferrer"}},[t._v("HTML＆Forms"),e("OutboundLink")],1),t._v("文档。")]),t._v(" "),e("hr"),t._v(" "),e("h1",{attrs:{id:"布尔字段"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#布尔字段"}},[t._v("#")]),t._v(" "),e("a",{attrs:{href:"https://www.django-rest-framework.org/api-guide/fields/#boolean-fields",target:"_blank",rel:"noopener noreferrer"}},[t._v("布尔字段"),e("OutboundLink")],1)]),t._v(" "),e("h2",{attrs:{id:"booleanfield"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#booleanfield"}},[t._v("#")]),t._v(" "),e("a",{attrs:{href:"https://www.django-rest-framework.org/api-guide/fields/#booleanfield",target:"_blank",rel:"noopener noreferrer"}},[t._v("BooleanField"),e("OutboundLink")],1)]),t._v(" "),e("p",[t._v("布尔表示。")]),t._v(" "),e("p",[t._v("使用HTML编码的表单输入时，请注意，即使省略了值，也将始终将其设置为"),e("code",[t._v("False")]),t._v("，即使该字段"),e("code",[t._v("default=True")]),t._v("指定了选项。这是因为HTML复选框输入通过忽略该值来表示未选中状态，因此REST框架将忽略视为其为空复选框输入。")]),t._v(" "),e("p",[t._v("请注意，Django 2.1从"),e("code",[t._v("models.BooleanField")]),t._v("中删除了"),e("code",[t._v("blank")]),t._v("kwarg 。在Django 2.1之前，"),e("code",[t._v("models.BooleanField")]),t._v("字段始终为"),e("code",[t._v("blank=True")]),t._v("。因此，由于"),e("code",[t._v("serializers.BooleanField")]),t._v("将在不使用"),e("code",[t._v("required")]),t._v("kwarg的情况下生成Django 2.1默认实例（即等效于"),e("code",[t._v("required=True")]),t._v("），而在Django 的早期版本中，"),e("code",[t._v("BooleanField")]),t._v("将使用"),e("code",[t._v("required=False")]),t._v("选项生成默认实例。如果要手动控制此行为，请"),e("code",[t._v("BooleanField")]),t._v("在序列化程序类上显式声明，或使用 "),e("code",[t._v("extra_kwargs")]),t._v("选项设置"),e("code",[t._v("required")]),t._v("标志。")]),t._v(" "),e("p",[t._v("对应于"),e("code",[t._v("django.db.models.fields.BooleanField")]),t._v("。")]),t._v(" "),e("p",[e("strong",[t._v("签名：")]),t._v(" "),e("code",[t._v("BooleanField()")])]),t._v(" "),e("h2",{attrs:{id:"nullbooleanfield"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#nullbooleanfield"}},[t._v("#")]),t._v(" "),e("a",{attrs:{href:"https://www.django-rest-framework.org/api-guide/fields/#nullbooleanfield",target:"_blank",rel:"noopener noreferrer"}},[t._v("NullBooleanField"),e("OutboundLink")],1)]),t._v(" "),e("p",[t._v("布尔表示形式，也接受"),e("code",[t._v("None")]),t._v("为有效值。")]),t._v(" "),e("p",[t._v("对应于"),e("code",[t._v("django.db.models.fields.NullBooleanField")]),t._v("。")]),t._v(" "),e("p",[e("strong",[t._v("签名：")]),t._v(" "),e("code",[t._v("NullBooleanField()")])]),t._v(" "),e("hr"),t._v(" "),e("h1",{attrs:{id:"字符串字段"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#字符串字段"}},[t._v("#")]),t._v(" "),e("a",{attrs:{href:"https://www.django-rest-framework.org/api-guide/fields/#string-fields",target:"_blank",rel:"noopener noreferrer"}},[t._v("字符串字段"),e("OutboundLink")],1)]),t._v(" "),e("h2",{attrs:{id:"charfield"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#charfield"}},[t._v("#")]),t._v(" "),e("a",{attrs:{href:"https://www.django-rest-framework.org/api-guide/fields/#charfield",target:"_blank",rel:"noopener noreferrer"}},[t._v("CharField"),e("OutboundLink")],1)]),t._v(" "),e("p",[t._v("文本表示形式。（可选）验证文本是否短于"),e("code",[t._v("max_length")]),t._v("和长于"),e("code",[t._v("min_length")]),t._v("。")]),t._v(" "),e("p",[t._v("对应于"),e("code",[t._v("django.db.models.fields.CharField")]),t._v("或"),e("code",[t._v("django.db.models.fields.TextField")]),t._v("。")]),t._v(" "),e("p",[e("strong",[t._v("签名：")]),t._v(" "),e("code",[t._v("CharField(max_length=None, min_length=None, allow_blank=False, trim_whitespace=True)")])]),t._v(" "),e("ul",[e("li",[e("code",[t._v("max_length")]),t._v(" -验证输入的字符数不超过此数量。")]),t._v(" "),e("li",[e("code",[t._v("min_length")]),t._v(" -验证输入的字符数不少于此。")]),t._v(" "),e("li",[e("code",[t._v("allow_blank")]),t._v("-如果设置为"),e("code",[t._v("True")]),t._v("，则应将空字符串视为有效值。如果设置为"),e("code",[t._v("False")]),t._v("，则认为空字符串无效，并将引发验证错误。默认为"),e("code",[t._v("False")]),t._v("。")]),t._v(" "),e("li",[e("code",[t._v("trim_whitespace")]),t._v("-如果设置为"),e("code",[t._v("True")]),t._v("，则修剪前后的空白。默认为"),e("code",[t._v("True")]),t._v("。")])]),t._v(" "),e("p",[t._v("该"),e("code",[t._v("allow_null")]),t._v("选项也可用于字符串字段，尽管不建议使用"),e("code",[t._v("allow_blank")]),t._v("。设置"),e("code",[t._v("allow_blank=True")]),t._v("和"),e("code",[t._v("allow_null=True")]),t._v("都是有效的，但是这样做意味着对于字符串表示而言，将存在两种不同类型的空值，这可能导致数据不一致和细微的应用程序错误。")]),t._v(" "),e("h2",{attrs:{id:"emailfield"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#emailfield"}},[t._v("#")]),t._v(" "),e("a",{attrs:{href:"https://www.django-rest-framework.org/api-guide/fields/#emailfield",target:"_blank",rel:"noopener noreferrer"}},[t._v("EmailField"),e("OutboundLink")],1)]),t._v(" "),e("p",[t._v("文本表示形式，将文本验证为有效的电子邮件地址。")]),t._v(" "),e("p",[t._v("对应于 "),e("code",[t._v("django.db.models.fields.EmailField")])]),t._v(" "),e("p",[e("strong",[t._v("签名：")]),t._v(" "),e("code",[t._v("EmailField(max_length=None, min_length=None, allow_blank=False)")])]),t._v(" "),e("h2",{attrs:{id:"regexfield"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#regexfield"}},[t._v("#")]),t._v(" "),e("a",{attrs:{href:"https://www.django-rest-framework.org/api-guide/fields/#regexfield",target:"_blank",rel:"noopener noreferrer"}},[t._v("RegexField"),e("OutboundLink")],1)]),t._v(" "),e("p",[t._v("文本表示形式，用于验证给定值是否与某个正则表达式匹配。")]),t._v(" "),e("p",[t._v("对应于"),e("code",[t._v("django.forms.fields.RegexField")]),t._v("。")]),t._v(" "),e("p",[e("strong",[t._v("签名：")]),t._v(" "),e("code",[t._v("RegexField(regex, max_length=None, min_length=None, allow_blank=False)")])]),t._v(" "),e("p",[t._v("强制"),e("code",[t._v("regex")]),t._v("参数可以是字符串，也可以是已编译的python正则表达式对象。")]),t._v(" "),e("p",[t._v("使用Django "),e("code",[t._v("django.core.validators.RegexValidator")]),t._v("进行验证。")]),t._v(" "),e("h2",{attrs:{id:"slugfield"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#slugfield"}},[t._v("#")]),t._v(" "),e("a",{attrs:{href:"https://www.django-rest-framework.org/api-guide/fields/#slugfield",target:"_blank",rel:"noopener noreferrer"}},[t._v("SlugField"),e("OutboundLink")],1)]),t._v(" "),e("p",[t._v("根据模式"),e("code",[t._v("[A-zA-Z0-9'-]+")]),t._v("验证输入的"),e("code",[t._v("RegexField")]),t._v("。")]),t._v(" "),e("p",[t._v("对应于"),e("code",[t._v("django.db.models.fields.SlugField")]),t._v("。")]),t._v(" "),e("p",[e("strong",[t._v("签名：")]),t._v(" "),e("code",[t._v("SlugField(max_length=50, min_length=None, allow_blank=False)")])]),t._v(" "),e("h2",{attrs:{id:"urlfield"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#urlfield"}},[t._v("#")]),t._v(" "),e("a",{attrs:{href:"https://www.django-rest-framework.org/api-guide/fields/#urlfield",target:"_blank",rel:"noopener noreferrer"}},[t._v("URLField"),e("OutboundLink")],1)]),t._v(" "),e("p",[t._v("根据URL匹配模式验证输入的"),e("code",[t._v("RegexField")]),t._v("。要求使用以下格式"),e("code",[t._v("http://<host>/<path>")]),t._v("的完全限定网址。")]),t._v(" "),e("p",[t._v("对应于"),e("code",[t._v("django.db.models.fields.URLField")]),t._v("。使用Django "),e("code",[t._v("django.core.validators.URLValidator")]),t._v("进行验证。")]),t._v(" "),e("p",[e("strong",[t._v("签名：")]),t._v(" "),e("code",[t._v("URLField(max_length=200, min_length=None, allow_blank=False)")])]),t._v(" "),e("h2",{attrs:{id:"uuidfield"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#uuidfield"}},[t._v("#")]),t._v(" "),e("a",{attrs:{href:"https://www.django-rest-framework.org/api-guide/fields/#uuidfield",target:"_blank",rel:"noopener noreferrer"}},[t._v("UUIDField"),e("OutboundLink")],1)]),t._v(" "),e("p",[t._v("确保输入为有效UUID字符串的字段。该"),e("code",[t._v("to_internal_value")]),t._v("方法将返回一个"),e("code",[t._v("uuid.UUID")]),t._v("实例。在输出时，该字段将返回标准连字符格式的字符串，例如：")]),t._v(" "),e("div",{staticClass:"language-python extra-class"},[e("pre",{pre:!0,attrs:{class:"language-python"}},[e("code",[e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"de305d54-75b4-431b-adb2-eb6b9e546013"')]),t._v("\n")])])]),e("p",[e("strong",[t._v("签名：")]),t._v(" "),e("code",[t._v("UUIDField(format='hex_verbose')")])]),t._v(" "),e("ul",[e("li",[e("code",[t._v("format")]),t._v("：确定uuid值的表示格式\n"),e("ul",[e("li",[e("code",[t._v("'hex_verbose'")]),t._v(" -规范的十六进制表示形式，包括连字符： "),e("code",[t._v('"5ce0e9a5-5ffa-654b-cee0-1238041fb31a"')])]),t._v(" "),e("li",[e("code",[t._v("'hex'")]),t._v(" -UUID的紧凑十六进制表示形式，不包括连字符： "),e("code",[t._v('"5ce0e9a55ffa654bcee01238041fb31a"')])])])]),t._v(" "),e("li",[e("code",[t._v("'int'")]),t._v(" -UUID的128位整数表示： "),e("code",[t._v('"123456789012312313134124512351145145114"')]),t._v(" "),e("ul",[e("li",[e("code",[t._v("'urn'")]),t._v("-UUID的RFC 4122 URN表示形式："),e("code",[t._v('"urn:uuid:5ce0e9a5-5ffa-654b-cee0-1238041fb31a"')]),t._v(" 更改"),e("code",[t._v("format")]),t._v("参数仅影响表示形式值。所有格式均被接受"),e("code",[t._v("to_internal_value")])])])])]),t._v(" "),e("h2",{attrs:{id:"filepathfield"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#filepathfield"}},[t._v("#")]),t._v(" "),e("a",{attrs:{href:"https://www.django-rest-framework.org/api-guide/fields/#filepathfield",target:"_blank",rel:"noopener noreferrer"}},[t._v("FilePathField"),e("OutboundLink")],1)]),t._v(" "),e("p",[t._v("一个字段，其选择仅限于文件系统上某个目录中的文件名")]),t._v(" "),e("p",[t._v("对应于"),e("code",[t._v("django.forms.fields.FilePathField")]),t._v("。")]),t._v(" "),e("p",[e("strong",[t._v("签名：")]),t._v(" "),e("code",[t._v("FilePathField(path, match=None, recursive=False, allow_files=True, allow_folders=False, required=None, **kwargs)")])]),t._v(" "),e("ul",[e("li",[e("code",[t._v("path")]),t._v(" -目录的绝对文件系统路径，应从中选择此FilePathField。")]),t._v(" "),e("li",[e("code",[t._v("match")]),t._v(" -FilePathField将用于过滤文件名的正则表达式（作为字符串）。")]),t._v(" "),e("li",[e("code",[t._v("recursive")]),t._v("-指定是否应包含路径的所有子目录。默认值为"),e("code",[t._v("False")]),t._v("。")]),t._v(" "),e("li",[e("code",[t._v("allow_files")]),t._v("-指定是否应包含指定位置的文件。默认值为"),e("code",[t._v("True")]),t._v("。要么"),e("code",[t._v("allow_folders")]),t._v("必须是要么"),e("code",[t._v("True")]),t._v("。")]),t._v(" "),e("li",[e("code",[t._v("allow_folders")]),t._v("-指定是否应包含指定位置的文件夹。默认值为"),e("code",[t._v("False")]),t._v("。要么"),e("code",[t._v("allow_files")]),t._v("必须是要么"),e("code",[t._v("True")]),t._v("。")])]),t._v(" "),e("h2",{attrs:{id:"ipaddressfield"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#ipaddressfield"}},[t._v("#")]),t._v(" "),e("a",{attrs:{href:"https://www.django-rest-framework.org/api-guide/fields/#ipaddressfield",target:"_blank",rel:"noopener noreferrer"}},[t._v("IPAddressField"),e("OutboundLink")],1)]),t._v(" "),e("p",[t._v("确保输入为有效IPv4或IPv6字符串的字段。")]),t._v(" "),e("p",[t._v("对应于"),e("code",[t._v("django.forms.fields.IPAddressField")]),t._v("和"),e("code",[t._v("django.forms.fields.GenericIPAddressField")]),t._v("。")]),t._v(" "),e("p",[e("strong",[t._v("签名")]),t._v("："),e("code",[t._v("IPAddressField(protocol='both', unpack_ipv4=False, **options)")])]),t._v(" "),e("ul",[e("li",[e("code",[t._v("protocol")]),t._v("将有效输入限制为指定的协议。接受的值是“两个”（默认），“ IPv4”或“ IPv6”。匹配不区分大小写。")]),t._v(" "),e("li",[e("code",[t._v("unpack_ipv4")]),t._v("解压缩IPv4映射的地址，如:: ffff：192.0.2.1。如果启用此选项，则该地址将解压缩为192.0.2.1。默认设置为禁用。只能在协议设置为“ both”和“ both”时使用。")])]),t._v(" "),e("hr"),t._v(" "),e("h1",{attrs:{id:"数字字段"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#数字字段"}},[t._v("#")]),t._v(" "),e("a",{attrs:{href:"https://www.django-rest-framework.org/api-guide/fields/#numeric-fields",target:"_blank",rel:"noopener noreferrer"}},[t._v("数字字段"),e("OutboundLink")],1)]),t._v(" "),e("h2",{attrs:{id:"integerfield"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#integerfield"}},[t._v("#")]),t._v(" "),e("a",{attrs:{href:"https://www.django-rest-framework.org/api-guide/fields/#integerfield",target:"_blank",rel:"noopener noreferrer"}},[t._v("IntegerField"),e("OutboundLink")],1)]),t._v(" "),e("p",[t._v("整数表示。")]),t._v(" "),e("p",[t._v("对应于"),e("code",[t._v("django.db.models.fields.IntegerField")]),t._v("，"),e("code",[t._v("django.db.models.fields.SmallIntegerField")]),t._v("，"),e("code",[t._v("django.db.models.fields.PositiveIntegerField")]),t._v("和"),e("code",[t._v("django.db.models.fields.PositiveSmallIntegerField")]),t._v("。")]),t._v(" "),e("p",[e("strong",[t._v("签名")]),t._v("："),e("code",[t._v("IntegerField(max_value=None, min_value=None)")])]),t._v(" "),e("ul",[e("li",[e("code",[t._v("max_value")]),t._v(" 验证提供的数字不大于此值。")]),t._v(" "),e("li",[e("code",[t._v("min_value")]),t._v(" 验证提供的数字不小于此值。")])]),t._v(" "),e("h2",{attrs:{id:"floatfield"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#floatfield"}},[t._v("#")]),t._v(" "),e("a",{attrs:{href:"https://www.django-rest-framework.org/api-guide/fields/#floatfield",target:"_blank",rel:"noopener noreferrer"}},[t._v("FloatField"),e("OutboundLink")],1)]),t._v(" "),e("p",[t._v("浮点表示。")]),t._v(" "),e("p",[t._v("对应于"),e("code",[t._v("django.db.models.fields.FloatField")]),t._v("。")]),t._v(" "),e("p",[e("strong",[t._v("签名")]),t._v("："),e("code",[t._v("FloatField(max_value=None, min_value=None)")])]),t._v(" "),e("ul",[e("li",[e("code",[t._v("max_value")]),t._v(" 验证提供的数字不大于此值。")]),t._v(" "),e("li",[e("code",[t._v("min_value")]),t._v(" 验证提供的数字不小于此值。")])]),t._v(" "),e("h2",{attrs:{id:"decimalfield"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#decimalfield"}},[t._v("#")]),t._v(" "),e("a",{attrs:{href:"https://www.django-rest-framework.org/api-guide/fields/#decimalfield",target:"_blank",rel:"noopener noreferrer"}},[t._v("DecimalField"),e("OutboundLink")],1)]),t._v(" "),e("p",[t._v("十进制表示形式，在Python中由"),e("code",[t._v("Decimal")]),t._v("实例表示。")]),t._v(" "),e("p",[t._v("对应于"),e("code",[t._v("django.db.models.fields.DecimalField")]),t._v("。")]),t._v(" "),e("p",[e("strong",[t._v("签名")]),t._v("："),e("code",[t._v("DecimalField(max_digits, decimal_places, coerce_to_string=None, max_value=None, min_value=None)")])]),t._v(" "),e("ul",[e("li",[e("code",[t._v("max_digits")]),t._v("数字中允许的最大位数。它必须是"),e("code",[t._v("None")]),t._v("或大于或等于的整数"),e("code",[t._v("decimal_places")]),t._v("。")]),t._v(" "),e("li",[e("code",[t._v("decimal_places")]),t._v(" 与数字一起存储的小数位数。")]),t._v(" "),e("li",[e("code",[t._v("coerce_to_string")]),t._v("设置为"),e("code",[t._v("True")]),t._v("是否应该为表示形式返回字符串值，或者"),e("code",[t._v("False")]),t._v("是否"),e("code",[t._v("Decimal")]),t._v("应该返回对象。默认值为与"),e("code",[t._v("COERCE_DECIMAL_TO_STRING")]),t._v("设置键相同的值，"),e("code",[t._v("True")]),t._v("除非覆盖，否则为默认值。如果"),e("code",[t._v("Decimal")]),t._v("对象由序列化程序返回，则最终输出格式将由渲染器确定。请注意，设置"),e("code",[t._v("localize")]),t._v("会将值强制设为"),e("code",[t._v("True")]),t._v("。")]),t._v(" "),e("li",[e("code",[t._v("max_value")]),t._v(" 验证提供的数字不大于此值。")]),t._v(" "),e("li",[e("code",[t._v("min_value")]),t._v(" 验证提供的数字不小于此值。")]),t._v(" "),e("li",[e("code",[t._v("localize")]),t._v("设置为"),e("code",[t._v("True")]),t._v("启用以基于当前语言环境本地化输入和输出。这也将迫使"),e("code",[t._v("coerce_to_string")]),t._v("到"),e("code",[t._v("True")]),t._v("。默认为"),e("code",[t._v("False")]),t._v("。请注意，如果您"),e("code",[t._v("USE_L10N=True")]),t._v("在设置文件中进行了设置，则会启用数据格式设置。")]),t._v(" "),e("li",[e("code",[t._v("rounding")]),t._v("将量化时使用的舍入模式设置为配置的精度。有效值为"),e("a",{attrs:{href:"https://docs.python.org/3/library/decimal.html#rounding-modes",target:"_blank",rel:"noopener noreferrer"}},[e("code",[t._v("decimal")]),t._v("模块舍入模式"),e("OutboundLink")],1),t._v("。默认为"),e("code",[t._v("None")]),t._v("。")])]),t._v(" "),e("h4",{attrs:{id:"用法示例"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#用法示例"}},[t._v("#")]),t._v(" "),e("a",{attrs:{href:"https://www.django-rest-framework.org/api-guide/fields/#example-usage",target:"_blank",rel:"noopener noreferrer"}},[t._v("用法示例"),e("OutboundLink")],1)]),t._v(" "),e("p",[t._v("要验证最大为999且分辨率为2位小数的数字，请使用：")]),t._v(" "),e("div",{staticClass:"language-python extra-class"},[e("pre",{pre:!0,attrs:{class:"language-python"}},[e("code",[t._v("serializers"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("DecimalField"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("max_digits"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" decimal_places"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),e("p",[t._v("并使用十进制小数位数来验证小于十亿的数字：")]),t._v(" "),e("div",{staticClass:"language-python extra-class"},[e("pre",{pre:!0,attrs:{class:"language-python"}},[e("code",[t._v("serializers"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("DecimalField"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("max_digits"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("19")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" decimal_places"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),e("p",[t._v("该字段还带有一个可选参数"),e("code",[t._v("coerce_to_string")]),t._v("。如果设置"),e("code",[t._v("True")]),t._v("为该表示，则将作为字符串输出。如果设置为"),e("code",[t._v("False")]),t._v("，表示将作为"),e("code",[t._v("Decimal")]),t._v("实例保留，最终表示将由渲染器确定。")]),t._v(" "),e("p",[t._v("如果未设置，则默认为与"),e("code",[t._v("COERCE_DECIMAL_TO_STRING")]),t._v("设置相同的值"),e("code",[t._v("True")]),t._v("，除非另行设置。")]),t._v(" "),e("hr"),t._v(" "),e("h1",{attrs:{id:"日期和时间字段"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#日期和时间字段"}},[t._v("#")]),t._v(" "),e("a",{attrs:{href:"https://www.django-rest-framework.org/api-guide/fields/#date-and-time-fields",target:"_blank",rel:"noopener noreferrer"}},[t._v("日期和时间字段"),e("OutboundLink")],1)]),t._v(" "),e("h2",{attrs:{id:"datetimefield"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#datetimefield"}},[t._v("#")]),t._v(" "),e("a",{attrs:{href:"https://www.django-rest-framework.org/api-guide/fields/#datetimefield",target:"_blank",rel:"noopener noreferrer"}},[t._v("DateTimeField"),e("OutboundLink")],1)]),t._v(" "),e("p",[t._v("日期和时间表示。")]),t._v(" "),e("p",[t._v("对应于"),e("code",[t._v("django.db.models.fields.DateTimeField")]),t._v("。")]),t._v(" "),e("p",[e("strong",[t._v("签名：")]),t._v(" "),e("code",[t._v("DateTimeField(format=api_settings.DATETIME_FORMAT, input_formats=None, default_timezone=None)")])]),t._v(" "),e("ul",[e("li",[e("code",[t._v("format")]),t._v("-代表输出格式的字符串。如果未指定，则默认为与"),e("code",[t._v("DATETIME_FORMAT")]),t._v("设置键相同的值，除非设置，否则为默认值"),e("code",[t._v("'iso-8601'")]),t._v("。设置为格式字符串表示"),e("code",[t._v("to_representation")]),t._v("应将返回值强制为字符串输出。格式字符串如下所述。将此值设置为"),e("code",[t._v("None")]),t._v("表示Python "),e("code",[t._v("datetime")]),t._v("对象应由"),e("code",[t._v("to_representation")]),t._v("。在这种情况下，日期时间编码将由渲染器确定。")]),t._v(" "),e("li",[e("code",[t._v("input_formats")]),t._v("-表示可用于解析日期的输入格式的字符串列表。如果未指定，则将使用"),e("code",[t._v("DATETIME_INPUT_FORMATS")]),t._v("设置，默认为"),e("code",[t._v("['iso-8601']")]),t._v("。")]),t._v(" "),e("li",[e("code",[t._v("default_timezone")]),t._v("- "),e("code",[t._v("pytz.timezone")]),t._v("代表时区。如果未指定并且"),e("code",[t._v("USE_TZ")]),t._v("已启用设置，则默认为"),e("a",{attrs:{href:"https://docs.djangoproject.com/en/stable/topics/i18n/timezones/#default-time-zone-and-current-time-zone",target:"_blank",rel:"noopener noreferrer"}},[t._v("当前时区"),e("OutboundLink")],1),t._v("。如果"),e("code",[t._v("USE_TZ")]),t._v("被禁用，则日期时间对象将是幼稚的。")])]),t._v(" "),e("h4",{attrs:{id:"datetimefield-格式化字符串。"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#datetimefield-格式化字符串。"}},[t._v("#")]),t._v(" "),e("a",{attrs:{href:"https://www.django-rest-framework.org/api-guide/fields/#datetimefield-format-strings",target:"_blank",rel:"noopener noreferrer"}},[e("code",[t._v("DateTimeField")]),t._v(" 格式化字符串。"),e("OutboundLink")],1)]),t._v(" "),e("p",[t._v("格式字符串可以是显式指定格式的"),e("a",{attrs:{href:"https://docs.python.org/3/library/datetime.html#strftime-and-strptime-behavior",target:"_blank",rel:"noopener noreferrer"}},[t._v("Python strftime格式"),e("OutboundLink")],1),t._v("，也可以是特殊字符串"),e("code",[t._v("'iso-8601'")]),t._v("，它指示应使用"),e("a",{attrs:{href:"https://www.w3.org/TR/NOTE-datetime",target:"_blank",rel:"noopener noreferrer"}},[t._v("ISO 8601"),e("OutboundLink")],1),t._v("样式的日期时间。（例如"),e("code",[t._v("'2013-01-29T12:34:56.000000Z'")]),t._v("）")]),t._v(" "),e("p",[t._v("当将值"),e("code",[t._v("None")]),t._v("用于格式时，"),e("code",[t._v("datetime")]),t._v("将返回对象，"),e("code",[t._v("to_representation")]),t._v("并且最终输出表示形式将由renderer类确定。")]),t._v(" "),e("h4",{attrs:{id:"auto-now和auto-now-add模型字段。"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#auto-now和auto-now-add模型字段。"}},[t._v("#")]),t._v(" "),e("a",{attrs:{href:"https://www.django-rest-framework.org/api-guide/fields/#auto_now-and-auto_now_add-model-fields",target:"_blank",rel:"noopener noreferrer"}},[e("code",[t._v("auto_now")]),t._v("和"),e("code",[t._v("auto_now_add")]),t._v("模型字段。"),e("OutboundLink")],1)]),t._v(" "),e("p",[t._v("使用"),e("code",[t._v("ModelSerializer")]),t._v("或时"),e("code",[t._v("HyperlinkedModelSerializer")]),t._v("，请注意，带有"),e("code",[t._v("auto_now=True")]),t._v("或"),e("code",[t._v("auto_now_add=True")]),t._v("的任何模型字段都将使用"),e("code",[t._v("read_only=True")]),t._v("默认情况下的序列化器字段。")]),t._v(" "),e("p",[t._v("如果要覆盖此行为，则需要"),e("code",[t._v("DateTimeField")]),t._v("在序列化程序上显式声明。例如：")]),t._v(" "),e("div",{staticClass:"language-python extra-class"},[e("pre",{pre:!0,attrs:{class:"language-python"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("CommentSerializer")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("serializers"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ModelSerializer"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    created "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" serializers"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("DateTimeField"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Meta")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        model "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Comment\n")])])]),e("h2",{attrs:{id:"datefield"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#datefield"}},[t._v("#")]),t._v(" "),e("a",{attrs:{href:"https://www.django-rest-framework.org/api-guide/fields/#datefield",target:"_blank",rel:"noopener noreferrer"}},[t._v("DateField"),e("OutboundLink")],1)]),t._v(" "),e("p",[t._v("日期表示。")]),t._v(" "),e("p",[t._v("对应于 "),e("code",[t._v("django.db.models.fields.DateField")])]),t._v(" "),e("p",[e("strong",[t._v("签名：")]),t._v(" "),e("code",[t._v("DateField(format=api_settings.DATE_FORMAT, input_formats=None)")])]),t._v(" "),e("ul",[e("li",[e("code",[t._v("format")]),t._v("-代表输出格式的字符串。如果未指定，则默认为与"),e("code",[t._v("DATE_FORMAT")]),t._v("设置键相同的值，除非设置，否则为默认值"),e("code",[t._v("'iso-8601'")]),t._v("。设置为格式字符串表示"),e("code",[t._v("to_representation")]),t._v("应将返回值强制为字符串输出。格式字符串如下所述。将此值设置为"),e("code",[t._v("None")]),t._v("表示Python "),e("code",[t._v("date")]),t._v("对象应由"),e("code",[t._v("to_representation")]),t._v("。在这种情况下，日期编码将由渲染器确定。")]),t._v(" "),e("li",[e("code",[t._v("input_formats")]),t._v("-表示可用于解析日期的输入格式的字符串列表。如果未指定，将使用"),e("code",[t._v("DATE_INPUT_FORMATS")]),t._v("设置，默认为"),e("code",[t._v("['iso-8601']")]),t._v("。")])]),t._v(" "),e("h4",{attrs:{id:"datefield-格式化字符串"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#datefield-格式化字符串"}},[t._v("#")]),t._v(" "),e("a",{attrs:{href:"https://www.django-rest-framework.org/api-guide/fields/#datefield-format-strings",target:"_blank",rel:"noopener noreferrer"}},[e("code",[t._v("DateField")]),t._v(" 格式化字符串"),e("OutboundLink")],1)]),t._v(" "),e("p",[t._v("格式字符串可以是显式指定格式的"),e("a",{attrs:{href:"https://docs.python.org/3/library/datetime.html#strftime-and-strptime-behavior",target:"_blank",rel:"noopener noreferrer"}},[t._v("Python strftime格式"),e("OutboundLink")],1),t._v("，也可以是特殊字符串"),e("code",[t._v("'iso-8601'")]),t._v("，它指示应使用"),e("a",{attrs:{href:"https://www.w3.org/TR/NOTE-datetime",target:"_blank",rel:"noopener noreferrer"}},[t._v("ISO 8601"),e("OutboundLink")],1),t._v("样式日期。（例如"),e("code",[t._v("'2013-01-29'")]),t._v("）")]),t._v(" "),e("h2",{attrs:{id:"timefield"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#timefield"}},[t._v("#")]),t._v(" "),e("a",{attrs:{href:"https://www.django-rest-framework.org/api-guide/fields/#timefield",target:"_blank",rel:"noopener noreferrer"}},[t._v("TimeField"),e("OutboundLink")],1)]),t._v(" "),e("p",[t._v("时间表示。")]),t._v(" "),e("p",[t._v("对应于 "),e("code",[t._v("django.db.models.fields.TimeField")])]),t._v(" "),e("p",[e("strong",[t._v("签名：")]),t._v(" "),e("code",[t._v("TimeField(format=api_settings.TIME_FORMAT, input_formats=None)")])]),t._v(" "),e("ul",[e("li",[e("code",[t._v("format")]),t._v("-代表输出格式的字符串。如果未指定，则默认为与"),e("code",[t._v("TIME_FORMAT")]),t._v("设置键相同的值，除非设置，否则为默认值"),e("code",[t._v("'iso-8601'")]),t._v("。设置为格式字符串表示"),e("code",[t._v("to_representation")]),t._v("应将返回值强制为字符串输出。格式字符串如下所述。将此值设置为"),e("code",[t._v("None")]),t._v("表示Python "),e("code",[t._v("time")]),t._v("对象应由"),e("code",[t._v("to_representation")]),t._v("。在这种情况下，时间编码将由渲染器确定。")]),t._v(" "),e("li",[e("code",[t._v("input_formats")]),t._v("-表示可用于解析日期的输入格式的字符串列表。如果未指定，将使用"),e("code",[t._v("TIME_INPUT_FORMATS")]),t._v("设置，该设置默认为"),e("code",[t._v("['iso-8601']")]),t._v("。")])]),t._v(" "),e("h4",{attrs:{id:"timefield-格式化字符串"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#timefield-格式化字符串"}},[t._v("#")]),t._v(" "),e("a",{attrs:{href:"https://www.django-rest-framework.org/api-guide/fields/#timefield-format-strings",target:"_blank",rel:"noopener noreferrer"}},[e("code",[t._v("TimeField")]),t._v(" 格式化字符串"),e("OutboundLink")],1)]),t._v(" "),e("p",[t._v("格式字符串可以是显式指定格式的"),e("a",{attrs:{href:"https://docs.python.org/3/library/datetime.html#strftime-and-strptime-behavior",target:"_blank",rel:"noopener noreferrer"}},[t._v("Python strftime格式"),e("OutboundLink")],1),t._v("，也可以是特殊字符串"),e("code",[t._v("'iso-8601'")]),t._v("，它指示应使用"),e("a",{attrs:{href:"https://www.w3.org/TR/NOTE-datetime",target:"_blank",rel:"noopener noreferrer"}},[t._v("ISO 8601"),e("OutboundLink")],1),t._v("样式时间。（例如"),e("code",[t._v("'12:34:56.000000'")]),t._v("）")]),t._v(" "),e("h2",{attrs:{id:"durationfield"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#durationfield"}},[t._v("#")]),t._v(" "),e("a",{attrs:{href:"https://www.django-rest-framework.org/api-guide/fields/#durationfield",target:"_blank",rel:"noopener noreferrer"}},[t._v("DurationField"),e("OutboundLink")],1)]),t._v(" "),e("p",[t._v("持续时间表示。对应于"),e("code",[t._v("django.db.models.fields.DurationField")])]),t._v(" "),e("p",[t._v("在"),e("code",[t._v("validated_data")]),t._v("这些字段将包含一个"),e("code",[t._v("datetime.timedelta")]),t._v("实例。该表示形式是遵循此格式的字符串"),e("code",[t._v("'[DD] [HH:[MM:]]ss[.uuuuuu]'")]),t._v("。")]),t._v(" "),e("p",[e("strong",[t._v("签名：")]),t._v(" "),e("code",[t._v("DurationField(max_value=None, min_value=None)")])]),t._v(" "),e("ul",[e("li",[e("code",[t._v("max_value")]),t._v(" 验证提供的持续时间不大于此值。")]),t._v(" "),e("li",[e("code",[t._v("min_value")]),t._v(" 验证提供的持续时间不小于此值。")])]),t._v(" "),e("hr"),t._v(" "),e("h1",{attrs:{id:"choice选择字段"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#choice选择字段"}},[t._v("#")]),t._v(" "),e("a",{attrs:{href:"https://www.django-rest-framework.org/api-guide/fields/#choice-selection-fields",target:"_blank",rel:"noopener noreferrer"}},[t._v("Choice选择字段"),e("OutboundLink")],1)]),t._v(" "),e("h2",{attrs:{id:"choicefield"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#choicefield"}},[t._v("#")]),t._v(" "),e("a",{attrs:{href:"https://www.django-rest-framework.org/api-guide/fields/#choicefield",target:"_blank",rel:"noopener noreferrer"}},[t._v("ChoiceField"),e("OutboundLink")],1)]),t._v(" "),e("p",[t._v("可以接受有限选择集中的值的字段。")]),t._v(" "),e("p",[e("code",[t._v("ModelSerializer")]),t._v("如果相应的模型字段包含"),e("code",[t._v("choices=…")]),t._v("参数，则用于自动生成字段。")]),t._v(" "),e("p",[e("strong",[t._v("签名：")]),t._v(" "),e("code",[t._v("ChoiceField(choices)")])]),t._v(" "),e("ul",[e("li",[e("code",[t._v("choices")]),t._v("-有效值列表或"),e("code",[t._v("(key, display_name)")]),e("strong",[t._v("元组列表")]),t._v("。")]),t._v(" "),e("li",[e("code",[t._v("allow_blank")]),t._v("-如果设置为"),e("code",[t._v("True")]),t._v("，则应将空字符串视为有效值。如果设置为，"),e("code",[t._v("False")]),t._v("则认为空字符串无效，并将引发验证错误。默认为"),e("code",[t._v("False")]),t._v("。")]),t._v(" "),e("li",[e("code",[t._v("html_cutoff")]),t._v("-如果设置，则将是HTML select下拉列表将显示的最大选择数。可以用来确保自动生成的ChoiceFields具有非常大的选择范围，不会阻止模板的呈现。默认为"),e("code",[t._v("None")]),t._v("。")]),t._v(" "),e("li",[e("code",[t._v("html_cutoff_text")]),t._v("-如果设置了此选项，则如果在HTML选择下拉列表中已截断最大数量的项目，则它将显示文本指示器。默认为"),e("code",[t._v('"More than {count} items…"')])])]),t._v(" "),e("p",[t._v("无论是"),e("code",[t._v("allow_blank")]),t._v("与"),e("code",[t._v("allow_null")]),t._v("上有效的选项"),e("code",[t._v("ChoiceField")]),t._v("，但我们强烈建议您只使用一个，而不是两个。"),e("code",[t._v("allow_blank")]),t._v("应该首选用于文本选择，并且"),e("code",[t._v("allow_null")]),t._v("应该首选用于数字或其他非文本选择。")]),t._v(" "),e("h2",{attrs:{id:"multiplechoicefield"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#multiplechoicefield"}},[t._v("#")]),t._v(" "),e("a",{attrs:{href:"https://www.django-rest-framework.org/api-guide/fields/#multiplechoicefield",target:"_blank",rel:"noopener noreferrer"}},[t._v("MultipleChoiceField"),e("OutboundLink")],1)]),t._v(" "),e("p",[t._v("一个可以接受一组零，一个或多个值的字段，这些值是从一组有限的选择中选择的。接受一个强制性参数。"),e("code",[t._v("to_internal_value")]),t._v("返回"),e("code",[t._v("set")]),t._v("包含所选值的。")]),t._v(" "),e("p",[e("strong",[t._v("签名：")]),t._v(" "),e("code",[t._v("MultipleChoiceField(choices)")])]),t._v(" "),e("ul",[e("li",[e("code",[t._v("choices")]),t._v("-有效值列表或"),e("code",[t._v("(key, display_name)")]),t._v("元组列表。")]),t._v(" "),e("li",[e("code",[t._v("allow_blank")]),t._v("-如果设置为"),e("code",[t._v("True")]),t._v("，则应将空字符串视为有效值。如果设置为，"),e("code",[t._v("False")]),t._v("则认为空字符串无效，并将引发验证错误。默认为"),e("code",[t._v("False")]),t._v("。")]),t._v(" "),e("li",[e("code",[t._v("html_cutoff")]),t._v("-如果设置，则将是HTML select下拉列表将显示的最大选择数。可以用来确保自动生成的ChoiceFields具有非常大的选择范围，不会阻止模板的呈现。默认为"),e("code",[t._v("None")]),t._v("。")]),t._v(" "),e("li",[e("code",[t._v("html_cutoff_text")]),t._v("-如果设置了此选项，则如果在HTML选择下拉列表中已截断最大数量的项目，则它将显示文本指示器。默认为"),e("code",[t._v('"More than {count} items…"')])])]),t._v(" "),e("p",[t._v("与一样"),e("code",[t._v("ChoiceField")]),t._v("，"),e("code",[t._v("allow_blank")]),t._v("和"),e("code",[t._v("allow_null")]),t._v("选项都有效，尽管强烈建议您仅使用一个，而不要同时使用。"),e("code",[t._v("allow_blank")]),t._v("应该首选用于文本选择，并且"),e("code",[t._v("allow_null")]),t._v("应该首选用于数字或其他非文本选择。")]),t._v(" "),e("hr"),t._v(" "),e("h1",{attrs:{id:"文件上传字段"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#文件上传字段"}},[t._v("#")]),t._v(" "),e("a",{attrs:{href:"https://www.django-rest-framework.org/api-guide/fields/#file-upload-fields",target:"_blank",rel:"noopener noreferrer"}},[t._v("文件上传字段"),e("OutboundLink")],1)]),t._v(" "),e("h4",{attrs:{id:"解析器和文件上传。"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#解析器和文件上传。"}},[t._v("#")]),t._v(" "),e("a",{attrs:{href:"https://www.django-rest-framework.org/api-guide/fields/#parsers-and-file-uploads",target:"_blank",rel:"noopener noreferrer"}},[t._v("解析器和文件上传。"),e("OutboundLink")],1)]),t._v(" "),e("p",[t._v("的"),e("code",[t._v("FileField")]),t._v("和"),e("code",[t._v("ImageField")]),t._v("类是仅适用于使用"),e("code",[t._v("MultiPartParser")]),t._v("或"),e("code",[t._v("FileUploadParser")]),t._v("。大多数解析器（例如JSON）不支持文件上传。Django的常规"),e("a",{attrs:{href:"https://docs.djangoproject.com/en/stable/ref/settings/#std:setting-FILE_UPLOAD_HANDLERS",target:"_blank",rel:"noopener noreferrer"}},[t._v("FILE_UPLOAD_HANDLERS"),e("OutboundLink")],1),t._v("用于处理上传的文件。")]),t._v(" "),e("h2",{attrs:{id:"filefield"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#filefield"}},[t._v("#")]),t._v(" "),e("a",{attrs:{href:"https://www.django-rest-framework.org/api-guide/fields/#filefield",target:"_blank",rel:"noopener noreferrer"}},[t._v("FileField"),e("OutboundLink")],1)]),t._v(" "),e("p",[t._v("文件表示。执行Django的标准FileField验证。")]),t._v(" "),e("p",[t._v("对应于"),e("code",[t._v("django.forms.fields.FileField")]),t._v("。")]),t._v(" "),e("p",[e("strong",[t._v("签名：")]),t._v(" "),e("code",[t._v("FileField(max_length=None, allow_empty_file=False, use_url=UPLOADED_FILES_USE_URL)")])]),t._v(" "),e("ul",[e("li",[e("code",[t._v("max_length")]),t._v(" -指定文件名的最大长度。")]),t._v(" "),e("li",[e("code",[t._v("allow_empty_file")]),t._v(" -指定是否允许空文件。")]),t._v(" "),e("li",[e("code",[t._v("use_url")]),t._v("-如果设置为，"),e("code",[t._v("True")]),t._v("则URL字符串值将用于输出表示。如果设置为，"),e("code",[t._v("False")]),t._v("则文件名字符串值将用于输出表示。默认为"),e("code",[t._v("UPLOADED_FILES_USE_URL")]),t._v("设置键的值，"),e("code",[t._v("True")]),t._v("除非另有设置，否则为默认值。")])]),t._v(" "),e("h2",{attrs:{id:"imagefield"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#imagefield"}},[t._v("#")]),t._v(" "),e("a",{attrs:{href:"https://www.django-rest-framework.org/api-guide/fields/#imagefield",target:"_blank",rel:"noopener noreferrer"}},[t._v("ImageField"),e("OutboundLink")],1)]),t._v(" "),e("p",[t._v("图像表示。验证上传的文件内容是否与已知图像格式匹配。")]),t._v(" "),e("p",[t._v("对应于"),e("code",[t._v("django.forms.fields.ImageField")]),t._v("。")]),t._v(" "),e("p",[e("strong",[t._v("签名：")]),t._v(" "),e("code",[t._v("ImageField(max_length=None, allow_empty_file=False, use_url=UPLOADED_FILES_USE_URL)")])]),t._v(" "),e("ul",[e("li",[e("code",[t._v("max_length")]),t._v(" -指定文件名的最大长度。")]),t._v(" "),e("li",[e("code",[t._v("allow_empty_file")]),t._v(" -指定是否允许空文件。")]),t._v(" "),e("li",[e("code",[t._v("use_url")]),t._v("-如果设置为，"),e("code",[t._v("True")]),t._v("则URL字符串值将用于输出表示。如果设置为，"),e("code",[t._v("False")]),t._v("则文件名字符串值将用于输出表示。默认为"),e("code",[t._v("UPLOADED_FILES_USE_URL")]),t._v("设置键的值，"),e("code",[t._v("True")]),t._v("除非另有设置，否则为默认值。")])]),t._v(" "),e("p",[t._v("需要"),e("code",[t._v("Pillow")]),t._v("包装或"),e("code",[t._v("PIL")]),t._v("包装。"),e("code",[t._v("Pillow")]),t._v("推荐该软件包，因为"),e("code",[t._v("PIL")]),t._v("不再积极维护该软件包。")]),t._v(" "),e("hr"),t._v(" "),e("h1",{attrs:{id:"复合字段"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#复合字段"}},[t._v("#")]),t._v(" "),e("a",{attrs:{href:"https://www.django-rest-framework.org/api-guide/fields/#composite-fields",target:"_blank",rel:"noopener noreferrer"}},[t._v("复合字段"),e("OutboundLink")],1)]),t._v(" "),e("h2",{attrs:{id:"listfield"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#listfield"}},[t._v("#")]),t._v(" "),e("a",{attrs:{href:"https://www.django-rest-framework.org/api-guide/fields/#listfield",target:"_blank",rel:"noopener noreferrer"}},[t._v("ListField"),e("OutboundLink")],1)]),t._v(" "),e("p",[t._v("验证对象列表的字段类。")]),t._v(" "),e("p",[e("strong",[t._v("签名")]),t._v("："),e("code",[t._v("ListField(child=, allow_empty=True, min_length=None, max_length=None)")])]),t._v(" "),e("ul",[e("li",[e("code",[t._v("child")]),t._v("-应该用于验证列表中对象的字段实例。如果未提供此参数，则将不验证列表中的对象。")]),t._v(" "),e("li",[e("code",[t._v("allow_empty")]),t._v(" -指定是否允许空列表。")]),t._v(" "),e("li",[e("code",[t._v("min_length")]),t._v(" -验证列表中包含的元素不少于此数量。")]),t._v(" "),e("li",[e("code",[t._v("max_length")]),t._v(" -验证列表中所包含的元素数量不超过此数量。")])]),t._v(" "),e("p",[t._v("例如，要验证整数列表，可以使用如下所示的内容：")]),t._v(" "),e("div",{staticClass:"language-python extra-class"},[e("pre",{pre:!0,attrs:{class:"language-python"}},[e("code",[t._v("scores "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" serializers"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ListField"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n   child"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("serializers"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("IntegerField"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("min_value"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" max_value"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),e("p",[t._v("该"),e("code",[t._v("ListField")]),t._v("班还支持声明的风格，使您可以编写可重用列表字段类。")]),t._v(" "),e("div",{staticClass:"language-python extra-class"},[e("pre",{pre:!0,attrs:{class:"language-python"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("StringListField")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("serializers"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ListField"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    child "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" serializers"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("CharField"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),e("p",[t._v("现在，我们可以"),e("code",[t._v("StringListField")]),t._v("在整个应用程序中重用自定义类，而不必为其提供"),e("code",[t._v("child")]),t._v("参数。")]),t._v(" "),e("h2",{attrs:{id:"dictfield"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#dictfield"}},[t._v("#")]),t._v(" "),e("a",{attrs:{href:"https://www.django-rest-framework.org/api-guide/fields/#dictfield",target:"_blank",rel:"noopener noreferrer"}},[t._v("DictField"),e("OutboundLink")],1)]),t._v(" "),e("p",[t._v("验证对象字典的字段类。钥匙放在"),e("code",[t._v("DictField")]),t._v("总是假定为字符串值。")]),t._v(" "),e("p",[e("strong",[t._v("签名")]),t._v("："),e("code",[t._v("DictField(child=, allow_empty=True)")])]),t._v(" "),e("ul",[e("li",[e("code",[t._v("child")]),t._v("-应该用于验证字典中值的字段实例。如果未提供此参数，则将不验证映射中的值。")]),t._v(" "),e("li",[e("code",[t._v("allow_empty")]),t._v(" -指定是否允许使用空字典。")])]),t._v(" "),e("p",[t._v("例如，要创建一个验证字符串到字符串映射的字段，您可以编写如下代码：")]),t._v(" "),e("div",{staticClass:"language-python extra-class"},[e("pre",{pre:!0,attrs:{class:"language-python"}},[e("code",[t._v("document "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" DictField"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("child"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("CharField"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),e("p",[t._v("您也可以像使用一样使用声明式样式"),e("code",[t._v("ListField")]),t._v("。例如：")]),t._v(" "),e("div",{staticClass:"language-python extra-class"},[e("pre",{pre:!0,attrs:{class:"language-python"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("DocumentField")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("DictField"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    child "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" CharField"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),e("h2",{attrs:{id:"hstorefield"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#hstorefield"}},[t._v("#")]),t._v(" "),e("a",{attrs:{href:"https://www.django-rest-framework.org/api-guide/fields/#hstorefield",target:"_blank",rel:"noopener noreferrer"}},[t._v("HStoreField"),e("OutboundLink")],1)]),t._v(" "),e("p",[e("code",[t._v("DictField")]),t._v("与Django的postgres兼容的预配置"),e("code",[t._v("HStoreField")]),t._v("。")]),t._v(" "),e("p",[e("strong",[t._v("签名")]),t._v("："),e("code",[t._v("HStoreField(child=, allow_empty=True)")])]),t._v(" "),e("ul",[e("li",[e("code",[t._v("child")]),t._v("-用于验证字典中值的字段实例。默认的子字段接受空字符串和空值。")]),t._v(" "),e("li",[e("code",[t._v("allow_empty")]),t._v(" -指定是否允许使用空字典。")])]),t._v(" "),e("p",[t._v("请注意，子字段"),e("strong",[t._v("必须")]),t._v("是的实例"),e("code",[t._v("CharField")]),t._v("，因为hstore扩展将值存储为字符串。")]),t._v(" "),e("h2",{attrs:{id:"jsonfield"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#jsonfield"}},[t._v("#")]),t._v(" "),e("a",{attrs:{href:"https://www.django-rest-framework.org/api-guide/fields/#jsonfield",target:"_blank",rel:"noopener noreferrer"}},[t._v("JSONField"),e("OutboundLink")],1)]),t._v(" "),e("p",[t._v("一个字段类，用于验证传入的数据结构是否包含有效的JSON原语。在其备用二进制模式下，它将表示并验证JSON编码的二进制字符串。")]),t._v(" "),e("p",[e("strong",[t._v("签名")]),t._v("："),e("code",[t._v("JSONField(binary, encoder)")])]),t._v(" "),e("ul",[e("li",[e("code",[t._v("binary")]),t._v("-如果设置为，"),e("code",[t._v("True")]),t._v("则该字段将输出并验证JSON编码的字符串，而不是原始数据结构。默认为"),e("code",[t._v("False")]),t._v("。")]),t._v(" "),e("li",[e("code",[t._v("encoder")]),t._v("-使用此JSON编码器序列化输入对象。默认为"),e("code",[t._v("None")]),t._v("。")])]),t._v(" "),e("hr"),t._v(" "),e("h1",{attrs:{id:"其他字段"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#其他字段"}},[t._v("#")]),t._v(" "),e("a",{attrs:{href:"https://www.django-rest-framework.org/api-guide/fields/#miscellaneous-fields",target:"_blank",rel:"noopener noreferrer"}},[t._v("其他字段"),e("OutboundLink")],1)]),t._v(" "),e("h2",{attrs:{id:"readonlyfield"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#readonlyfield"}},[t._v("#")]),t._v(" "),e("a",{attrs:{href:"https://www.django-rest-framework.org/api-guide/fields/#readonlyfield",target:"_blank",rel:"noopener noreferrer"}},[t._v("ReadOnlyField"),e("OutboundLink")],1)]),t._v(" "),e("p",[t._v("一个字段类，仅返回该字段的值而无需修改。")]),t._v(" "),e("p",[e("code",[t._v("ModelSerializer")]),t._v("当包含与属性而不是模型字段相关的字段名称时，默认情况下使用此字段。")]),t._v(" "),e("p",[e("strong",[t._v("签名")]),t._v("："),e("code",[t._v("ReadOnlyField()")])]),t._v(" "),e("p",[t._v("例如，如果"),e("code",[t._v("has_expired")]),t._v("是"),e("code",[t._v("Account")]),t._v("模型的属性，则以下序列化器将自动将其生成为"),e("code",[t._v("ReadOnlyField")]),t._v("：")]),t._v(" "),e("div",{staticClass:"language-python extra-class"},[e("pre",{pre:!0,attrs:{class:"language-python"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("AccountSerializer")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("serializers"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ModelSerializer"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Meta")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        model "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Account\n        fields "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'id'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'account_name'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'has_expired'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])])]),e("h2",{attrs:{id:"hiddenfield"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#hiddenfield"}},[t._v("#")]),t._v(" "),e("a",{attrs:{href:"https://www.django-rest-framework.org/api-guide/fields/#hiddenfield",target:"_blank",rel:"noopener noreferrer"}},[t._v("HiddenField"),e("OutboundLink")],1)]),t._v(" "),e("p",[t._v("一个字段类，它不基于用户输入获取值，而是从默认值或可调用对象获取其值。")]),t._v(" "),e("p",[e("strong",[t._v("签名")]),t._v("："),e("code",[t._v("HiddenField()")])]),t._v(" "),e("p",[t._v("例如，要包括一个始终提供当前时间的字段作为序列化程序验证数据的一部分，则可以使用以下内容：")]),t._v(" "),e("div",{staticClass:"language-python extra-class"},[e("pre",{pre:!0,attrs:{class:"language-python"}},[e("code",[t._v("modified "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" serializers"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("HiddenField"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("default"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("timezone"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("now"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),e("p",[e("code",[t._v("HiddenField")]),t._v("通常只有在您需要基于某些预先提供的字段值来运行某些验证，而又不想将所有这些字段公开给最终用户时，才需要使用该类。")]),t._v(" "),e("p",[t._v("有关更多示例，"),e("code",[t._v("HiddenField")]),t._v("请参见"),e("a",{attrs:{href:"https://www.django-rest-framework.org/api-guide/validators/",target:"_blank",rel:"noopener noreferrer"}},[t._v("验证程序"),e("OutboundLink")],1),t._v("文档。")]),t._v(" "),e("h2",{attrs:{id:"modelfield"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#modelfield"}},[t._v("#")]),t._v(" "),e("a",{attrs:{href:"https://www.django-rest-framework.org/api-guide/fields/#modelfield",target:"_blank",rel:"noopener noreferrer"}},[t._v("ModelField"),e("OutboundLink")],1)]),t._v(" "),e("p",[t._v("可以绑定到任意模型字段的通用字段。该"),e("code",[t._v("ModelField")]),t._v("级代表序列化/反序列化到其相关的模型领域的任务。此字段可用于为自定义模型字段创建序列化程序字段，而不必创建新的自定义序列化程序字段。")]),t._v(" "),e("p",[t._v("该字段用于"),e("code",[t._v("ModelSerializer")]),t._v("对应于自定义模型字段类。")]),t._v(" "),e("p",[e("strong",[t._v("签名：")]),t._v(" "),e("code",[t._v("ModelField(model_field=)")])]),t._v(" "),e("p",[t._v("该"),e("code",[t._v("ModelField")]),t._v("级一般用于内部使用，但如果需要的话可以通过您的API使用。为了正确地实例化"),e("code",[t._v("ModelField")]),t._v("，必须传递一个附加到实例化模型的字段。例如："),e("code",[t._v("ModelField(model_field=MyModel()._meta.get_field('custom_field'))")])]),t._v(" "),e("h2",{attrs:{id:"serializermethodfield"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#serializermethodfield"}},[t._v("#")]),t._v(" "),e("a",{attrs:{href:"https://www.django-rest-framework.org/api-guide/fields/#serializermethodfield",target:"_blank",rel:"noopener noreferrer"}},[t._v("SerializerMethodField"),e("OutboundLink")],1)]),t._v(" "),e("p",[t._v("这是一个只读字段。它通过在附加的序列化器类上调用一个方法来获取其值。它可以用于将任何类型的数据添加到对象的序列化表示中。")]),t._v(" "),e("p",[e("strong",[t._v("签名")]),t._v("："),e("code",[t._v("SerializerMethodField(method_name=None)")])]),t._v(" "),e("ul",[e("li",[e("code",[t._v("method_name")]),t._v("-要调用的序列化程序上的方法的名称。如果未包括，则默认为"),e("code",[t._v("get_")]),t._v("。")])]),t._v(" "),e("p",[e("code",[t._v("method_name")]),t._v("参数引用的序列化程序方法应接受单个参数（除了之外"),e("code",[t._v("self")]),t._v("），该参数是要序列化的对象。它应该返回要包含在对象的序列化表示中的任何内容。例如：")]),t._v(" "),e("div",{staticClass:"language-python extra-class"},[e("pre",{pre:!0,attrs:{class:"language-python"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" django"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("contrib"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("auth"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("models "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" User\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" django"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("utils"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("timezone "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" now\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" rest_framework "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" serializers\n\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("UserSerializer")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("serializers"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ModelSerializer"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    days_since_joined "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" serializers"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("SerializerMethodField"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Meta")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        model "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" User\n\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("get_days_since_joined")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" obj"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("now"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" obj"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("date_joined"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("days\n")])])]),e("hr"),t._v(" "),e("h1",{attrs:{id:"自定义字段"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#自定义字段"}},[t._v("#")]),t._v(" "),e("a",{attrs:{href:"https://www.django-rest-framework.org/api-guide/fields/#custom-fields",target:"_blank",rel:"noopener noreferrer"}},[t._v("自定义字段"),e("OutboundLink")],1)]),t._v(" "),e("p",[t._v("如果要创建自定义字段，则需要子类化"),e("code",[t._v("Field")]),t._v("，然后覆盖"),e("code",[t._v(".to_representation()")]),t._v("和"),e("code",[t._v(".to_internal_value()")]),t._v("方法之一或二者。这两种方法用于在初始数据类型和原始的可序列化数据类型之间进行转换。基本数据类型通常是任何数字，字符串，布尔，"),e("code",[t._v("date")]),t._v("/ "),e("code",[t._v("time")]),t._v("/ "),e("code",[t._v("datetime")]),t._v("或"),e("code",[t._v("None")]),t._v("。它们也可以是仅包含其他原始对象的任何列表或字典之类的对象。根据您使用的渲染器，可能支持其他类型。")]),t._v(" "),e("p",[e("code",[t._v(".to_representation()")]),t._v("调用该方法可将初始数据类型转换为原始的可序列化数据类型。")]),t._v(" "),e("p",[e("code",[t._v("to_internal_value()")]),t._v("调用该方法可将原始数据类型恢复为其内部python表示形式。"),e("code",[t._v("serializers.ValidationError")]),t._v("如果数据无效，则此方法应引发一个异常。")]),t._v(" "),e("p",[t._v("请注意，"),e("code",[t._v("WritableField")]),t._v("版本2.x中存在的类不再存在。如果该字段支持数据输入，则应继承"),e("code",[t._v("Field")]),t._v("并重写"),e("code",[t._v("to_internal_value()")]),t._v("。")]),t._v(" "),e("h2",{attrs:{id:"例子"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#例子"}},[t._v("#")]),t._v(" "),e("a",{attrs:{href:"https://www.django-rest-framework.org/api-guide/fields/#examples",target:"_blank",rel:"noopener noreferrer"}},[t._v("例子"),e("OutboundLink")],1)]),t._v(" "),e("h3",{attrs:{id:"基本的自定义字段"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#基本的自定义字段"}},[t._v("#")]),t._v(" "),e("a",{attrs:{href:"https://www.django-rest-framework.org/api-guide/fields/#a-basic-custom-field",target:"_blank",rel:"noopener noreferrer"}},[t._v("基本的自定义字段"),e("OutboundLink")],1)]),t._v(" "),e("p",[t._v("让我们看一个序列化代表RGB颜色值的类的示例：")]),t._v(" "),e("div",{staticClass:"language-python extra-class"},[e("pre",{pre:!0,attrs:{class:"language-python"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Color")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("object")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token triple-quoted-string string"}},[t._v('"""\n    A color represented in the RGB colorspace.\n    """')]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("__init__")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" red"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" green"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" blue"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("assert")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("red "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("and")]),t._v(" green "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("and")]),t._v(" blue "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("assert")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("red "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("256")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("and")]),t._v(" green "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("256")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("and")]),t._v(" blue "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("256")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        self"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("red"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" self"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("green"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" self"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("blue "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" red"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" green"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" blue\n\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ColorField")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("serializers"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Field"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token triple-quoted-string string"}},[t._v('"""\n    Color objects are serialized into \'rgb(#, #, #)\' notation.\n    """')]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("to_representation")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" value"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"rgb(%d, %d, %d)"')]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("%")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("value"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("red"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" value"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("green"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" value"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("blue"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("to_internal_value")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" data"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        data "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" data"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("strip"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'rgb('")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("rstrip"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("')'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        red"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" green"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" blue "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("col"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" col "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" data"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("split"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("','")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" Color"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("red"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" green"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" blue"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),e("p",[t._v("默认情况下，字段值被视为映射到对象上的属性。如果需要自定义如何访问和设置字段值，则需要覆盖"),e("code",[t._v(".get_attribute()")]),t._v("和/或"),e("code",[t._v(".get_value()")]),t._v("。")]),t._v(" "),e("p",[t._v("例如，让我们创建一个字段，该字段可用来表示要序列化的对象的类名：")]),t._v(" "),e("div",{staticClass:"language-python extra-class"},[e("pre",{pre:!0,attrs:{class:"language-python"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ClassNameField")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("serializers"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Field"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("get_attribute")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" instance"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# We pass the object instance onto `to_representation`,")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# not just the field attribute.")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" instance\n\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("to_representation")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" value"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token triple-quoted-string string"}},[t._v('"""\n        Serialize the value\'s class name.\n        """')]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" value"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("__class__"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("__name__\n")])])]),e("h3",{attrs:{id:"引发验证错误"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#引发验证错误"}},[t._v("#")]),t._v(" "),e("a",{attrs:{href:"https://www.django-rest-framework.org/api-guide/fields/#raising-validation-errors",target:"_blank",rel:"noopener noreferrer"}},[t._v("引发验证错误"),e("OutboundLink")],1)]),t._v(" "),e("p",[t._v("我们"),e("code",[t._v("ColorField")]),t._v("上面目前类不执行任何数据验证。为了指示无效数据，我们应该引发"),e("code",[t._v("serializers.ValidationError")]),t._v("，如下所示：")]),t._v(" "),e("div",{staticClass:"language-python extra-class"},[e("pre",{pre:!0,attrs:{class:"language-python"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("to_internal_value")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" data"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("not")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("isinstance")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("data"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("str")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        msg "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Incorrect type. Expected a string, but got %s'")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("raise")]),t._v(" ValidationError"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("msg "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("%")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("type")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("data"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("__name__"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("not")]),t._v(" re"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("match"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("r'^rgb\\([0-9]+,[0-9]+,[0-9]+\\)$'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" data"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("raise")]),t._v(" ValidationError"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Incorrect format. Expected `rgb(#,#,#)`.'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n    data "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" data"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("strip"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'rgb('")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("rstrip"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("')'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    red"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" green"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" blue "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("col"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" col "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" data"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("split"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("','")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("any")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("col "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("255")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("or")]),t._v(" col "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" col "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("red"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" green"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" blue"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("raise")]),t._v(" ValidationError"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Value out of range. Must be between 0 and 255.'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" Color"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("red"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" green"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" blue"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),e("p",[t._v("该"),e("code",[t._v(".fail()")]),t._v("方法是引发的快捷方式"),e("code",[t._v("ValidationError")]),t._v("，它从"),e("code",[t._v("error_messages")]),t._v("字典中获取消息字符串。例如：")]),t._v(" "),e("div",{staticClass:"language-python extra-class"},[e("pre",{pre:!0,attrs:{class:"language-python"}},[e("code",[t._v("default_error_messages "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'incorrect_type'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Incorrect type. Expected a string, but got {input_type}'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'incorrect_format'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Incorrect format. Expected `rgb(#,#,#)`.'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'out_of_range'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Value out of range. Must be between 0 and 255.'")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("to_internal_value")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" data"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("not")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("isinstance")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("data"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("str")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        self"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("fail"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'incorrect_type'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" input_type"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("type")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("data"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("__name__"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("not")]),t._v(" re"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("match"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("r'^rgb\\([0-9]+,[0-9]+,[0-9]+\\)$'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" data"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        self"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("fail"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'incorrect_format'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n    data "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" data"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("strip"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'rgb('")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("rstrip"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("')'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    red"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" green"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" blue "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("col"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" col "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" data"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("split"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("','")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("any")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("col "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("255")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("or")]),t._v(" col "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" col "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("red"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" green"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" blue"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        self"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("fail"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'out_of_range'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" Color"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("red"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" green"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" blue"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),e("p",[t._v("这种样式使您的错误消息更清晰，与代码更分离，因此应首选。")]),t._v(" "),e("h3",{attrs:{id:"使用-source"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#使用-source"}},[t._v("#")]),t._v(" "),e("a",{attrs:{href:"https://www.django-rest-framework.org/api-guide/fields/#using-source",target:"_blank",rel:"noopener noreferrer"}},[t._v("使用 "),e("code",[t._v("source='*'")]),e("OutboundLink")],1)]),t._v(" "),e("p",[t._v("在这里，我们将以带有和属性的"),e("em",[t._v("平面")]),t._v(" "),e("code",[t._v("DataPoint")]),t._v("模型为例。"),e("code",[t._v("x_coordinate``y_coordinate")])]),t._v(" "),e("div",{staticClass:"language-python extra-class"},[e("pre",{pre:!0,attrs:{class:"language-python"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("DataPoint")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("models"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Model"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    label "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" models"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("CharField"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("max_length"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("50")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    x_coordinate "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" models"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("SmallIntegerField"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    y_coordinate "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" models"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("SmallIntegerField"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),e("p",[t._v("使用自定义字段，"),e("code",[t._v("source='*'")]),t._v("我们可以提供坐标对的嵌套表示：")]),t._v(" "),e("div",{staticClass:"language-python extra-class"},[e("pre",{pre:!0,attrs:{class:"language-python"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("CoordinateField")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("serializers"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Field"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("to_representation")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" value"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        ret "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"x"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" value"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("x_coordinate"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"y"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" value"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("y_coordinate\n        "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" ret\n\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("to_internal_value")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" data"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        ret "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"x_coordinate"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" data"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"x"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"y_coordinate"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" data"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"y"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" ret\n\n\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("DataPointSerializer")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("serializers"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ModelSerializer"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    coordinates "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" CoordinateField"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("source"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'*'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Meta")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        model "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" DataPoint\n        fields "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'label'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'coordinates'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])])]),e("p",[t._v("请注意，此示例不处理验证。出于这个原因，部分原因是，在实际项目中，使用嵌套的序列化程序使用会更好地处理坐标嵌套，该序列化程序使用"),e("code",[t._v("source='*'")]),t._v("，并带有两个"),e("code",[t._v("IntegerField")]),t._v("实例，每个实例都各自"),e("code",[t._v("source")]),t._v(" 指向相关字段。")]),t._v(" "),e("p",[t._v("但是，该示例的关键点是：")]),t._v(" "),e("ul",[e("li",[e("p",[e("code",[t._v("to_representation")]),t._v("将传递整个"),e("code",[t._v("DataPoint")]),t._v("对象，并且必须从该对象映射到所需的输出。")]),t._v(" "),e("div",{staticClass:"language-python extra-class"},[e("pre",{pre:!0,attrs:{class:"language-python"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" instance "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" DataPoint"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("label"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Example'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" x_coordinate"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" y_coordinate"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" out_serializer "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" DataPointSerializer"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("instance"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" out_serializer"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("data\nReturnDict"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'label'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Example'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'coordinates'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'x'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'y'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])]),t._v(" "),e("li",[e("p",[t._v("除非我们的字段是只读的，"),e("code",[t._v("to_internal_value")]),t._v("否则必须映射回适合更新我们目标对象的字典。使用"),e("code",[t._v("source='*'")]),t._v("，return from "),e("code",[t._v("to_internal_value")]),t._v("将更新经过验证的根数据字典，而不是单个密钥。")]),t._v(" "),e("div",{staticClass:"language-python extra-class"},[e("pre",{pre:!0,attrs:{class:"language-python"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" data "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("     "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"label"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Second Example"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("     "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"coordinates"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("         "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"x"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("         "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"y"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("     "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" in_serializer "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" DataPointSerializer"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("data"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("data"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" in_serializer"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("is_valid"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("True")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" in_serializer"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("validated_data\nOrderedDict"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'label'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Second Example'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n             "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'y_coordinate'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n             "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'x_coordinate'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])])]),t._v(" "),e("p",[t._v("为了完整起见，让我们再次做同样的事情，但是要使用上面建议的嵌套序列化方法：")]),t._v(" "),e("div",{staticClass:"language-python extra-class"},[e("pre",{pre:!0,attrs:{class:"language-python"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("NestedCoordinateSerializer")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("serializers"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Serializer"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    x "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" serializers"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("IntegerField"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("source"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'x_coordinate'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    y "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" serializers"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("IntegerField"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("source"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'y_coordinate'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("DataPointSerializer")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("serializers"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ModelSerializer"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    coordinates "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" NestedCoordinateSerializer"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("source"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'*'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Meta")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        model "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" DataPoint\n        fields "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'label'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'coordinates'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])])]),e("p",[t._v("在这里，目标属性和源属性对（"),e("code",[t._v("x")]),t._v("和 "),e("code",[t._v("x_coordinate")]),t._v("，"),e("code",[t._v("y")]),t._v("和"),e("code",[t._v("y_coordinate")]),t._v("）之间的映射在"),e("code",[t._v("IntegerField")]),t._v(" 声明中进行处理。这是我们"),e("code",[t._v("NestedCoordinateSerializer")]),t._v("需要的"),e("code",[t._v("source='*'")]),t._v("。")]),t._v(" "),e("p",[t._v("我们的新产品"),e("code",[t._v("DataPointSerializer")]),t._v("表现出与自定义现场方法相同的行为。")]),t._v(" "),e("p",[t._v("序列化：")]),t._v(" "),e("div",{staticClass:"language-python extra-class"},[e("pre",{pre:!0,attrs:{class:"language-python"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" out_serializer "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" DataPointSerializer"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("instance"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" out_serializer"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("data\nReturnDict"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'label'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'testing'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'coordinates'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" OrderedDict"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'x'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'y'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),e("p",[t._v("反序列化：")]),t._v(" "),e("div",{staticClass:"language-python extra-class"},[e("pre",{pre:!0,attrs:{class:"language-python"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" in_serializer "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" DataPointSerializer"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("data"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("data"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" in_serializer"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("is_valid"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("True")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" in_serializer"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("validated_data\nOrderedDict"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'label'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'still testing'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n             "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'x_coordinate'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n             "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'y_coordinate'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),e("p",[t._v("但是我们也免费获得内置验证：")]),t._v(" "),e("div",{staticClass:"language-python extra-class"},[e("pre",{pre:!0,attrs:{class:"language-python"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" invalid_data "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("     "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"label"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"still testing"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("     "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"coordinates"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("         "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"x"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'a'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("         "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"y"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'b'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("     "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" invalid_serializer "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" DataPointSerializer"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("data"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("invalid_data"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" invalid_serializer"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("is_valid"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("False")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" invalid_serializer"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("errors\nReturnDict"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'coordinates'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n             "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'x'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'A valid integer is required.'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n              "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'y'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'A valid integer is required.'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),e("p",[t._v("因此，嵌套串行器方法将是第一个尝试的方法。当嵌套的序列化程序变得不可行或过于复杂时，您将使用自定义字段方法。")]),t._v(" "),e("h1",{attrs:{id:"第三方软件包"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#第三方软件包"}},[t._v("#")]),t._v(" "),e("a",{attrs:{href:"https://www.django-rest-framework.org/api-guide/fields/#third-party-packages",target:"_blank",rel:"noopener noreferrer"}},[t._v("第三方软件包"),e("OutboundLink")],1)]),t._v(" "),e("p",[t._v("以下第三方软件包也可用。")]),t._v(" "),e("h2",{attrs:{id:"drf-compound-fields"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#drf-compound-fields"}},[t._v("#")]),t._v(" "),e("a",{attrs:{href:"https://www.django-rest-framework.org/api-guide/fields/#drf-compound-fields",target:"_blank",rel:"noopener noreferrer"}},[t._v("DRF Compound Fields"),e("OutboundLink")],1)]),t._v(" "),e("p",[t._v("的"),e("a",{attrs:{href:"https://drf-compound-fields.readthedocs.io/",target:"_blank",rel:"noopener noreferrer"}},[t._v("drf-compound-fields"),e("OutboundLink")],1),t._v(" 包提供“化合物”串行器领域，如简单的值的列表，其可以由其它字段，而不是与该串行器进行说明"),e("code",[t._v("many=True")]),t._v("的选项。还提供了用于键入字典和值的字段，这些字段可以是特定类型，也可以是该类型的项目的列表。")]),t._v(" "),e("h2",{attrs:{id:"drf-extra-fields"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#drf-extra-fields"}},[t._v("#")]),t._v(" "),e("a",{attrs:{href:"https://www.django-rest-framework.org/api-guide/fields/#drf-extra-fields",target:"_blank",rel:"noopener noreferrer"}},[t._v("DRF Extra Fields"),e("OutboundLink")],1)]),t._v(" "),e("p",[t._v("该"),e("a",{attrs:{href:"https://github.com/Hipo/drf-extra-fields",target:"_blank",rel:"noopener noreferrer"}},[t._v("drf-extra-fields"),e("OutboundLink")],1),t._v("软件包提供REST框架额外的串行领域，包括"),e("code",[t._v("Base64ImageField")]),t._v("和"),e("code",[t._v("PointField")]),t._v("类。")]),t._v(" "),e("h2",{attrs:{id:"djangorestframework-recursive"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#djangorestframework-recursive"}},[t._v("#")]),t._v(" "),e("a",{attrs:{href:"https://www.django-rest-framework.org/api-guide/fields/#djangorestframework-recursive",target:"_blank",rel:"noopener noreferrer"}},[t._v("djangorestframework-recursive"),e("OutboundLink")],1)]),t._v(" "),e("p",[t._v("所述 "),e("a",{attrs:{href:"https://github.com/heywbj/django-rest-framework-recursive",target:"_blank",rel:"noopener noreferrer"}},[t._v("djangorestframework-recursive"),e("OutboundLink")],1),t._v(" 包提供了一个"),e("code",[t._v("RecursiveField")]),t._v("用于序列化和反序列化递归结构")]),t._v(" "),e("h2",{attrs:{id:"django-rest-framework-gis"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#django-rest-framework-gis"}},[t._v("#")]),t._v(" "),e("a",{attrs:{href:"https://www.django-rest-framework.org/api-guide/fields/#django-rest-framework-gis",target:"_blank",rel:"noopener noreferrer"}},[t._v("django-rest-framework-gis"),e("OutboundLink")],1)]),t._v(" "),e("p",[e("a",{attrs:{href:"https://github.com/djangonauts/django-rest-framework-gis",target:"_blank",rel:"noopener noreferrer"}},[t._v("django-rest-framework-gis"),e("OutboundLink")],1),t._v("包提供地理插件为像一个Django其余框架 "),e("code",[t._v("GeometryField")]),t._v("字段和GeoJSON的序列化器。")]),t._v(" "),e("h2",{attrs:{id:"django-rest-framework-hstore"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#django-rest-framework-hstore"}},[t._v("#")]),t._v(" "),e("a",{attrs:{href:"https://www.django-rest-framework.org/api-guide/fields/#django-rest-framework-hstore",target:"_blank",rel:"noopener noreferrer"}},[t._v("django-rest-framework-hstore"),e("OutboundLink")],1)]),t._v(" "),e("p",[e("a",{attrs:{href:"https://github.com/djangonauts/django-rest-framework-hstore",target:"_blank",rel:"noopener noreferrer"}},[t._v("django-rest-framework-hstore"),e("OutboundLink")],1),t._v(" 包提供了一种"),e("code",[t._v("HStoreField")]),t._v("支持"),e("a",{attrs:{href:"https://github.com/djangonauts/django-hstore",target:"_blank",rel:"noopener noreferrer"}},[t._v("django-hstore"),e("OutboundLink")],1),t._v(" "),e("code",[t._v("DictionaryField")]),t._v("模型字段。")])])}),[],!1,null,null,null);a.default=n.exports}}]);