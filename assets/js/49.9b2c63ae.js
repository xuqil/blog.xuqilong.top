(window.webpackJsonp=window.webpackJsonp||[]).push([[49],{434:function(t,a,s){"use strict";s.r(a);var e=s(11),n=Object(e.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"serializers"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#serializers"}},[t._v("#")]),t._v(" "),s("a",{attrs:{href:"https://www.django-rest-framework.org/api-guide/serializers/#serializers",target:"_blank",rel:"noopener noreferrer"}},[t._v("Serializers"),s("OutboundLink")],1)]),t._v(" "),s("blockquote",[s("p",[t._v("我们想解决扩展串行器的作用。但是，这不是一个小问题，需要进行认真的设计工作。")]),t._v(" "),s("p",[t._v("— "),s("a",{attrs:{href:"https://groups.google.com/d/topic/django-users/sVFaOfQi4wY/discussion",target:"_blank",rel:"noopener noreferrer"}},[t._v("Django用户组"),s("OutboundLink")],1),t._v(" Russell Keith-Magee")])]),t._v(" "),s("p",[t._v("序列化器允许诸如查询集和模型实例复杂的数据转换为原生的Python数据类型，然后可以很容易地呈现为"),s("code",[t._v("JSON")]),t._v("，"),s("code",[t._v("XML")]),t._v("或其他内容类型。序列化器还提供反序列化功能，允许在首先验证输入数据之后将解析的数据转换回复杂类型。")]),t._v(" "),s("p",[t._v("REST框架中的序列化器的工作方式与Django "),s("code",[t._v("Form")]),t._v("和"),s("code",[t._v("ModelForm")]),t._v("类非常相似。我们提供了一个"),s("code",[t._v("Serializer")]),t._v("类，该类为您提供了一种强大的通用方法来控制响应的输出，还"),s("code",[t._v("ModelSerializer")]),t._v("提供了一个类，该类为创建用于处理模型实例和查询集的序列化器提供了有用的快捷方式。")]),t._v(" "),s("h2",{attrs:{id:"声明序列化器"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#声明序列化器"}},[t._v("#")]),t._v(" "),s("a",{attrs:{href:"https://www.django-rest-framework.org/api-guide/serializers/#declaring-serializers",target:"_blank",rel:"noopener noreferrer"}},[t._v("声明序列化器"),s("OutboundLink")],1)]),t._v(" "),s("p",[t._v("让我们从创建一个简单的对象开始，我们可以将其用于示例目的：")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" datetime "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" datetime\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Comment")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("object")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("__init__")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" email"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" content"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" created"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("None")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("email "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" email\n        self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("content "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" content\n        self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("created "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" created "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("or")]),t._v(" datetime"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("now"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\ncomment "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Comment"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("email"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'leila@example.com'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" content"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'foo bar'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("p",[t._v("我们将声明一个序列化器，可用于序列化和反序列化与"),s("code",[t._v("Comment")]),t._v("对象相对应的数据。")]),t._v(" "),s("p",[t._v("声明序列化器看起来与声明表单非常相似：")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" rest_framework "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" serializers\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("CommentSerializer")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("serializers"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Serializer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    email "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" serializers"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("EmailField"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    content "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" serializers"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("CharField"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("max_length"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("200")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    created "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" serializers"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("DateTimeField"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("h2",{attrs:{id:"序列化对象"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#序列化对象"}},[t._v("#")]),t._v(" "),s("a",{attrs:{href:"https://www.django-rest-framework.org/api-guide/serializers/#serializing-objects",target:"_blank",rel:"noopener noreferrer"}},[t._v("序列化对象"),s("OutboundLink")],1)]),t._v(" "),s("p",[t._v("现在，我们可以使用"),s("code",[t._v("CommentSerializer")]),t._v("序列化评论或评论列表。同样，使用"),s("code",[t._v("Serializer")]),t._v("类看起来很像使用"),s("code",[t._v("Form")]),t._v("类。")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[t._v("serializer "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" CommentSerializer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("comment"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nserializer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("data\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# {'email': 'leila@example.com', 'content': 'foo bar', 'created': '2016-01-27T15:17:10.375877'}")]),t._v("\n")])])]),s("p",[t._v("至此，我们已经将模型实例转换为Python本机数据类型。为了完成序列化过程，我们将数据渲染到中"),s("code",[t._v("json")]),t._v("。")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" rest_framework"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("renderers "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" JSONRenderer\n\njson "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" JSONRenderer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("render"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("serializer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("data"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\njson\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('# b\'{"email":"leila@example.com","content":"foo bar","created":"2016-01-27T15:17:10.375877"}\'')]),t._v("\n")])])]),s("h2",{attrs:{id:"反序列化对象"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#反序列化对象"}},[t._v("#")]),t._v(" "),s("a",{attrs:{href:"https://www.django-rest-framework.org/api-guide/serializers/#deserializing-objects",target:"_blank",rel:"noopener noreferrer"}},[t._v("反序列化对象"),s("OutboundLink")],1)]),t._v(" "),s("p",[t._v("反序列化是相似的。首先，我们将流解析为Python本机数据类型。")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" io\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" rest_framework"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("parsers "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" JSONParser\n\nstream "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" io"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("BytesIO"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("json"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\ndata "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" JSONParser"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("parse"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("stream"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("p",[t._v("...然后我们将这些本机数据类型还原为经过验证的数据字典。")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[t._v("serializer "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" CommentSerializer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("data"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("data"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nserializer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("is_valid"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# True")]),t._v("\nserializer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("validated_data\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# {'content': 'foo bar', 'email': 'leila@example.com', 'created': datetime.datetime(2012, 08, 22, 16, 20, 09, 822243)}")]),t._v("\n")])])]),s("h2",{attrs:{id:"保存实例"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#保存实例"}},[t._v("#")]),t._v(" "),s("a",{attrs:{href:"https://www.django-rest-framework.org/api-guide/serializers/#saving-instances",target:"_blank",rel:"noopener noreferrer"}},[t._v("保存实例"),s("OutboundLink")],1)]),t._v(" "),s("p",[t._v("如果我们希望能够基于经过验证的数据返回完整的对象实例，则需要实现"),s("code",[t._v(".create()")]),t._v("和"),s("code",[t._v(".update()")]),t._v("方法之一或两者。例如：")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("CommentSerializer")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("serializers"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Serializer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    email "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" serializers"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("EmailField"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    content "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" serializers"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("CharField"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("max_length"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("200")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    created "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" serializers"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("DateTimeField"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("create")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" validated_data"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" Comment"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("**")]),t._v("validated_data"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("update")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" instance"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" validated_data"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        instance"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("email "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" validated_data"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("get"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'email'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" instance"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("email"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        instance"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("content "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" validated_data"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("get"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'content'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" instance"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("content"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        instance"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("created "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" validated_data"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("get"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'created'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" instance"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("created"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" instance\n")])])]),s("p",[t._v("如果您的对象实例与Django模型相对应，则还需要确保这些方法将对象保存到数据库中。例如，如果"),s("code",[t._v("Comment")]),t._v("是Django模型，则方法可能如下所示：")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[t._v("    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("create")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" validated_data"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" Comment"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("objects"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("create"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("**")]),t._v("validated_data"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("update")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" instance"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" validated_data"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        instance"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("email "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" validated_data"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("get"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'email'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" instance"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("email"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        instance"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("content "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" validated_data"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("get"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'content'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" instance"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("content"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        instance"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("created "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" validated_data"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("get"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'created'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" instance"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("created"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        instance"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("save"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" instance\n")])])]),s("p",[t._v("现在，在对数据进行反序列化时，我们可以"),s("code",[t._v(".save()")]),t._v("基于已验证的数据调用以返回对象实例。")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[t._v("comment "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" serializer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("save"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("p",[t._v("调用"),s("code",[t._v(".save()")]),t._v("将创建一个新实例，或更新一个现有实例，具体取决于在实例化序列化程序类时是否传递了一个现有实例：")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# .save() will create a new instance.")]),t._v("\nserializer "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" CommentSerializer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("data"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("data"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# .save() will update the existing `comment` instance.")]),t._v("\nserializer "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" CommentSerializer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("comment"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" data"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("data"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("p",[t._v("无论是"),s("code",[t._v(".create()")]),t._v("和"),s("code",[t._v(".update()")]),t._v("方法是可选的。根据序列化程序类的用例，您既可以实现它们之一，也可以两者都不实现。")]),t._v(" "),s("h4",{attrs:{id:"将其他属性传递给-save"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#将其他属性传递给-save"}},[t._v("#")]),t._v(" "),s("a",{attrs:{href:"https://www.django-rest-framework.org/api-guide/serializers/#passing-additional-attributes-to-save",target:"_blank",rel:"noopener noreferrer"}},[t._v("将其他属性传递给 "),s("code",[t._v(".save()")]),s("OutboundLink")],1)]),t._v(" "),s("p",[t._v("有时，您希望视图代码能够在保存实例时注入其他数据。这些附加数据可能包括诸如当前用户，当前时间或不属于请求数据一部分的任何其他信息。")]),t._v(" "),s("p",[t._v("您可以通过在调用时包含其他关键字参数来实现"),s("code",[t._v(".save()")]),t._v("。例如：")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[t._v("serializer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("save"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("owner"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("request"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("user"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("p",[t._v("调用"),s("code",[t._v(".create（）")]),t._v("或"),s("code",[t._v(".update（）")]),t._v("时，任何其他关键字参数都将包含在已验证的数据参数中。")]),t._v(" "),s("h4",{attrs:{id:"直接重写-save"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#直接重写-save"}},[t._v("#")]),t._v(" "),s("a",{attrs:{href:"https://www.django-rest-framework.org/api-guide/serializers/#overriding-save-directly",target:"_blank",rel:"noopener noreferrer"}},[t._v("直接重写"),s("code",[t._v(".save()")]),s("OutboundLink")],1)]),t._v(" "),s("p",[t._v("在某些情况下，"),s("code",[t._v(".create()")]),t._v("和"),s("code",[t._v(".update()")]),t._v("方法名称可能没有意义。例如，在联系表格中，我们可能没有创建新实例，而是发送了电子邮件或其他消息。")]),t._v(" "),s("p",[t._v("在这些情况下，您可能会选择"),s("code",[t._v(".save()")]),t._v("直接重写，因为它更具可读性和意义。")]),t._v(" "),s("p",[t._v("例如：")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ContactForm")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("serializers"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Serializer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    email "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" serializers"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("EmailField"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    message "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" serializers"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("CharField"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("save")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        email "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("validated_data"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'email'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n        message "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("validated_data"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'message'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n        send_email"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("email"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" message"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("message"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("p",[t._v("请注意，在上述情况下，我们现在必须"),s("code",[t._v(".validated_data")]),t._v("直接访问"),s("code",[t._v("serializer")]),t._v(" 属性。")]),t._v(" "),s("h2",{attrs:{id:"验证方式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#验证方式"}},[t._v("#")]),t._v(" "),s("a",{attrs:{href:"https://www.django-rest-framework.org/api-guide/serializers/#validation",target:"_blank",rel:"noopener noreferrer"}},[t._v("验证方式"),s("OutboundLink")],1)]),t._v(" "),s("p",[t._v("反序列化数据时，您始终需要先调用，"),s("code",[t._v("is_valid()")]),t._v("然后再尝试访问经过验证的数据或保存对象实例。如果发生任何验证错误，则该"),s("code",[t._v(".errors")]),t._v("属性将包含一个字典，代表产生的错误消息。例如：")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[t._v("serializer "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" CommentSerializer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("data"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'email'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'foobar'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'content'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'baz'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nserializer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("is_valid"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# False")]),t._v("\nserializer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("errors\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# {'email': ['Enter a valid e-mail address.'], 'created': ['This field is required.']}")]),t._v("\n")])])]),s("p",[t._v("词典中的每个键将是字段名称，值将是与该字段相对应的任何错误消息的字符串列表。该"),s("code",[t._v("non_field_errors")]),t._v("（非字段错误）密钥也可能存在，并将列出所有常规验证错误。"),s("code",[t._v("non_field_errors")]),t._v("（非字段错误）密钥的名称可以使用"),s("code",[t._v("NON_FIELD_ERRORS_KEY")]),t._v("REST框架设置进行自定义。")]),t._v(" "),s("p",[t._v("对项目列表进行反序列化时，将以代表每个反序列化项目的字典列表的形式返回错误。")]),t._v(" "),s("h4",{attrs:{id:"在无效数据上引发异常"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#在无效数据上引发异常"}},[t._v("#")]),t._v(" "),s("a",{attrs:{href:"https://www.django-rest-framework.org/api-guide/serializers/#raising-an-exception-on-invalid-data",target:"_blank",rel:"noopener noreferrer"}},[t._v("在无效数据上引发异常"),s("OutboundLink")],1)]),t._v(" "),s("p",[t._v("该"),s("code",[t._v(".is_valid()")]),t._v("方法带有一个可选"),s("code",[t._v("raise_exception")]),t._v("标志，"),s("code",[t._v("serializers.ValidationError")]),t._v("如果存在验证错误，它将导致引发异常。")]),t._v(" "),s("p",[t._v("这些异常由REST框架提供的默认异常处理程序自动处理，并且将"),s("code",[t._v("HTTP 400 Bad Request")]),t._v("默认返回响应。")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Return a 400 response if the data was invalid.")]),t._v("\nserializer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("is_valid"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("raise_exception"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("True")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("h4",{attrs:{id:"field-level验证"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#field-level验证"}},[t._v("#")]),t._v(" "),s("a",{attrs:{href:"https://www.django-rest-framework.org/api-guide/serializers/#field-level-validation",target:"_blank",rel:"noopener noreferrer"}},[t._v("Field-level验证"),s("OutboundLink")],1)]),t._v(" "),s("p",[t._v("您可以通过向子类中添加"),s("code",[t._v(".validate_")]),t._v("方法来指定自定义字段级验证"),s("code",[t._v("Serializer")]),t._v("。这些类似于"),s("code",[t._v(".clean_")]),t._v("在Django表单上的方法。")]),t._v(" "),s("p",[t._v("这些方法采用单个参数，该参数是需要验证的字段值。")]),t._v(" "),s("p",[t._v("您的"),s("code",[t._v("validate_")]),t._v("方法应返回经过验证的值或引发"),s("code",[t._v("serializers.ValidationError")]),t._v("。例如：")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" rest_framework "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" serializers\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("BlogPostSerializer")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("serializers"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Serializer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    title "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" serializers"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("CharField"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("max_length"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    content "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" serializers"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("CharField"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("validate_title")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" value"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token triple-quoted-string string"}},[t._v('"""\n        Check that the blog post is about Django.\n        """')]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'django'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("not")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" value"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("lower"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("raise")]),t._v(" serializers"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ValidationError"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Blog post is not about Django"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" value\n")])])]),s("hr"),t._v(" "),s("p",[t._v("**注意：**如果您的"),s("code",[t._v("<field_name>")]),t._v("是在序列化程序上用参数"),s("code",[t._v("required=False")]),t._v("声明的，那么如果不包含该字段，则不会执行此验证步骤。")]),t._v(" "),s("hr"),t._v(" "),s("h4",{attrs:{id:"object-level验证"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#object-level验证"}},[t._v("#")]),t._v(" "),s("a",{attrs:{href:"https://www.django-rest-framework.org/api-guide/serializers/#object-level-validation",target:"_blank",rel:"noopener noreferrer"}},[t._v("Object-level验证"),s("OutboundLink")],1)]),t._v(" "),s("p",[t._v("若要执行任何其他需要访问多个字段的验证，请将名为"),s("code",[t._v(".validate（）")]),t._v("的方法添加到序列化程序"),s("code",[t._v("Serializer")]),t._v("子类中。此方法只接受一个参数，它是字段值的字典。它应该在必要时引发"),s("code",[t._v("serializers.ValidationError")]),t._v("，或者只返回已验证的值。例如：")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" rest_framework "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" serializers\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("EventSerializer")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("serializers"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Serializer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    description "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" serializers"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("CharField"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("max_length"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    start "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" serializers"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("DateTimeField"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    finish "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" serializers"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("DateTimeField"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("validate")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" data"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token triple-quoted-string string"}},[t._v('"""\n        Check that start is before finish.\n        """')]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" data"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'start'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" data"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'finish'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("raise")]),t._v(" serializers"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ValidationError"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"finish must occur after start"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" data\n")])])]),s("h4",{attrs:{id:"验证器"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#验证器"}},[t._v("#")]),t._v(" "),s("a",{attrs:{href:"https://www.django-rest-framework.org/api-guide/serializers/#validators",target:"_blank",rel:"noopener noreferrer"}},[t._v("验证器"),s("OutboundLink")],1)]),t._v(" "),s("p",[t._v("序列化程序上的各个字段可以包含验证器，方法是在字段实例上声明它们，例如：")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("multiple_of_ten")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("value"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" value "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("%")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("raise")]),t._v(" serializers"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ValidationError"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Not a multiple of ten'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("GameRecord")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("serializers"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Serializer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    score "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" IntegerField"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("validators"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("multiple_of_ten"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n")])])]),s("p",[t._v("序列化程序类还可以包括可重复使用的验证器，这些验证器将应用于完整的字段数据集。通过在内部"),s("code",[t._v("Meta")]),t._v("类上声明它们来包括这些验证器，如下所示：")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("EventSerializer")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("serializers"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Serializer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    name "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" serializers"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("CharField"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    room_number "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" serializers"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("IntegerField"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("choices"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("101")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("102")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("103")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("201")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    date "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" serializers"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("DateField"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Meta")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Each room only has one event per day.")]),t._v("\n        validators "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" UniqueTogetherValidator"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n            queryset"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("Event"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("objects"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("all")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            fields"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'room_number'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'date'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("p",[t._v("有关更多信息，请参见"),s("a",{attrs:{href:"https://www.django-rest-framework.org/api-guide/validators/",target:"_blank",rel:"noopener noreferrer"}},[t._v("验证程序文档"),s("OutboundLink")],1),t._v("。")]),t._v(" "),s("h2",{attrs:{id:"访问初始数据和实例"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#访问初始数据和实例"}},[t._v("#")]),t._v(" "),s("a",{attrs:{href:"https://www.django-rest-framework.org/api-guide/serializers/#accessing-the-initial-data-and-instance",target:"_blank",rel:"noopener noreferrer"}},[t._v("访问初始数据和实例"),s("OutboundLink")],1)]),t._v(" "),s("p",[t._v("将初始对象或查询集传递给序列化程序实例时，该对象将变为可使用"),s("code",[t._v(".instance")]),t._v("。如果没有传递初始对象，则"),s("code",[t._v(".instance")]),t._v("属性将为"),s("code",[t._v("None")]),t._v("。")]),t._v(" "),s("p",[t._v("将数据传递给序列化程序实例时，未修改的数据将以形式提供"),s("code",[t._v(".initial_data")]),t._v("。如果未传递data关键字参数，则该"),s("code",[t._v(".initial_data")]),t._v("属性将不存在。")]),t._v(" "),s("h2",{attrs:{id:"部分更新"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#部分更新"}},[t._v("#")]),t._v(" "),s("a",{attrs:{href:"https://www.django-rest-framework.org/api-guide/serializers/#partial-updates",target:"_blank",rel:"noopener noreferrer"}},[t._v("部分更新"),s("OutboundLink")],1)]),t._v(" "),s("p",[t._v("默认情况下，必须为所有必填字段传递序列化器值，否则序列化器会引发验证错误。您可以使用"),s("code",[t._v("partial")]),t._v("参数来允许部分更新。")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Update `comment` with partial data")]),t._v("\nserializer "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" CommentSerializer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("comment"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" data"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'content'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'foo bar'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" partial"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("True")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("h2",{attrs:{id:"处理嵌套对象"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#处理嵌套对象"}},[t._v("#")]),t._v(" "),s("a",{attrs:{href:"https://www.django-rest-framework.org/api-guide/serializers/#dealing-with-nested-objects",target:"_blank",rel:"noopener noreferrer"}},[t._v("处理嵌套对象"),s("OutboundLink")],1)]),t._v(" "),s("p",[t._v("前面的示例非常适合处理仅具有简单数据类型的对象，但是有时我们还需要能够表示更复杂的对象，其中对象的某些属性可能不是简单数据类型，例如字符串，日期或整数。")]),t._v(" "),s("p",[t._v("序列化程序"),s("code",[t._v("Serializer")]),t._v("类本身是一种字段"),s("code",[t._v("Field")]),t._v("类型，可用于表示一个对象类型嵌套在另一个对象类型中的关系。")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("UserSerializer")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("serializers"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Serializer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    email "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" serializers"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("EmailField"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    username "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" serializers"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("CharField"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("max_length"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("CommentSerializer")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("serializers"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Serializer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    user "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" UserSerializer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    content "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" serializers"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("CharField"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("max_length"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("200")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    created "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" serializers"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("DateTimeField"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("p",[t._v("如果嵌套表示形式可以选择接受该"),s("code",[t._v("None")]),t._v("值，则应将"),s("code",[t._v("required=False")]),t._v("标志传递给嵌套序列化器。")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("CommentSerializer")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("serializers"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Serializer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    user "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" UserSerializer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("required"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("False")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# May be an anonymous user.")]),t._v("\n    content "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" serializers"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("CharField"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("max_length"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("200")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    created "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" serializers"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("DateTimeField"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("p",[t._v("同样，如果嵌套表示形式应为项目列表，则应将"),s("code",[t._v("many=True")]),t._v("标志传递给嵌套序列化。")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("CommentSerializer")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("serializers"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Serializer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    user "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" UserSerializer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("required"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("False")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    edits "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" EditItemSerializer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("many"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("True")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# A nested list of 'edit' items.")]),t._v("\n    content "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" serializers"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("CharField"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("max_length"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("200")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    created "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" serializers"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("DateTimeField"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("h2",{attrs:{id:"可写的嵌套表示"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#可写的嵌套表示"}},[t._v("#")]),t._v(" "),s("a",{attrs:{href:"https://www.django-rest-framework.org/api-guide/serializers/#writable-nested-representations",target:"_blank",rel:"noopener noreferrer"}},[t._v("可写的嵌套表示"),s("OutboundLink")],1)]),t._v(" "),s("p",[t._v("当处理支持反序列化数据的嵌套表示形式时，嵌套对象的任何错误都将嵌套在嵌套对象的字段名称下。")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[t._v("serializer "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" CommentSerializer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("data"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'user'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'email'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'foobar'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'username'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'doe'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'content'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'baz'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nserializer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("is_valid"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# False")]),t._v("\nserializer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("errors\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# {'user': {'email': ['Enter a valid e-mail address.']}, 'created': ['This field is required.']}")]),t._v("\n")])])]),s("p",[t._v("同样，该"),s("code",[t._v(".validated_data")]),t._v("属性将包括嵌套的数据结构。")]),t._v(" "),s("h4",{attrs:{id:"为嵌套表示编写-create-方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#为嵌套表示编写-create-方法"}},[t._v("#")]),t._v(" "),s("a",{attrs:{href:"https://www.django-rest-framework.org/api-guide/serializers/#writing-create-methods-for-nested-representations",target:"_blank",rel:"noopener noreferrer"}},[t._v("为嵌套表示编写"),s("code",[t._v(".create（）")]),t._v("方法"),s("OutboundLink")],1)]),t._v(" "),s("p",[t._v("如果您支持可写的嵌套表示形式，则需要编写"),s("code",[t._v(".create()")]),t._v("或"),s("code",[t._v(".update()")]),t._v("处理保存多个对象的方法。")]),t._v(" "),s("p",[t._v("以下示例演示了如何使用嵌套的配置文件对象创建用户。")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("UserSerializer")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("serializers"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ModelSerializer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    profile "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" ProfileSerializer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Meta")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        model "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" User\n        fields "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'username'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'email'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'profile'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("create")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" validated_data"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        profile_data "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" validated_data"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("pop"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'profile'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        user "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" User"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("objects"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("create"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("**")]),t._v("validated_data"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        Profile"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("objects"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("create"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("user"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("user"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("**")]),t._v("profile_data"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" user\n")])])]),s("h4",{attrs:{id:"为嵌套表示编写-update-方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#为嵌套表示编写-update-方法"}},[t._v("#")]),t._v(" "),s("a",{attrs:{href:"https://www.django-rest-framework.org/api-guide/serializers/#writing-update-methods-for-nested-representations",target:"_blank",rel:"noopener noreferrer"}},[t._v("为嵌套表示编写"),s("code",[t._v(".update（）")]),t._v("方法"),s("OutboundLink")],1)]),t._v(" "),s("p",[t._v("对于更新，您需要仔细考虑如何处理关系更新。例如，如果该关系的数据为"),s("code",[t._v("None")]),t._v("，或未提供，应发生以下哪项？")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("NULL")]),t._v("在数据库中将关系设置为。")]),t._v(" "),s("li",[t._v("删除关联的实例。")]),t._v(" "),s("li",[t._v("忽略数据，并保持实例不变。")]),t._v(" "),s("li",[t._v("引发验证错误。")])]),t._v(" "),s("p",[t._v("这是"),s("code",[t._v(".update()")]),t._v("我们上一"),s("code",[t._v("UserSerializer")]),t._v("类的方法的示例。")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[t._v("    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("update")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" instance"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" validated_data"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        profile_data "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" validated_data"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("pop"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'profile'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Unless the application properly enforces that this field is")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# always set, the follow could raise a `DoesNotExist`, which")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# would need to be handled.")]),t._v("\n        profile "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" instance"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("profile\n\n        instance"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("username "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" validated_data"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("get"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'username'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" instance"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("username"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        instance"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("email "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" validated_data"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("get"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'email'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" instance"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("email"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        instance"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("save"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n        profile"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("is_premium_member "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" profile_data"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("get"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'is_premium_member'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            profile"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("is_premium_member\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        profile"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("has_support_contract "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" profile_data"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("get"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'has_support_contract'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            profile"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("has_support_contract\n         "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        profile"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("save"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" instance\n")])])]),s("p",[t._v("由于嵌套创建和更新的行为可能是模棱两可的，并且可能需要相关模型之间的复杂依赖性，因此REST框架3要求您始终明确地编写这些方法。默认"),s("code",[t._v("ModelSerializer")]),t._v(" "),s("code",[t._v(".create()")]),t._v("和"),s("code",[t._v(".update()")]),t._v("方法不包括对可写嵌套表示的支持。")]),t._v(" "),s("p",[t._v("但是，有第三方软件包，例如"),s("a",{attrs:{href:"https://www.django-rest-framework.org/api-guide/serializers/#drf-writable-nested",target:"_blank",rel:"noopener noreferrer"}},[t._v("DRF Writable Nested"),s("OutboundLink")],1),t._v("，它们支持自动可写嵌套表示。")]),t._v(" "),s("h4",{attrs:{id:"在模型管理器类中处理保存相关实例"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#在模型管理器类中处理保存相关实例"}},[t._v("#")]),t._v(" "),s("a",{attrs:{href:"https://www.django-rest-framework.org/api-guide/serializers/#handling-saving-related-instances-in-model-manager-classes",target:"_blank",rel:"noopener noreferrer"}},[t._v("在模型管理器类中处理保存相关实例"),s("OutboundLink")],1)]),t._v(" "),s("p",[t._v("在序列化程序中保存多个相关实例的替代方法是编写自定义模型管理器类，以处理创建正确的实例。")]),t._v(" "),s("p",[t._v("例如，假设我们要确保"),s("code",[t._v("User")]),t._v("实例和"),s("code",[t._v("Profile")]),t._v("实例始终一起成对创建。我们可能会编写一个类似于以下内容的自定义管理器类：")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("UserManager")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("models"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Manager"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("create")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" username"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" email"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" is_premium_member"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("False")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" has_support_contract"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("False")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        user "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" User"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("username"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("username"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" email"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("email"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        user"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("save"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        profile "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Profile"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n            user"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("user"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            is_premium_member"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("is_premium_member"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            has_support_contract"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("has_support_contract\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        profile"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("save"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" user\n")])])]),s("p",[t._v("现在，该管理器类更好地封装了始终在同时创建用户实例和概要文件实例的情况。我们"),s("code",[t._v(".create()")]),t._v("在串行类的方法，现在可以重新编写，使用新的管理器方法。")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("create")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" validated_data"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" User"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("objects"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("create"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n        username"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("validated_data"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'username'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        email"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("validated_data"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'email'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n        is_premium_member"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("validated_data"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'profile'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'is_premium_member'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n        has_support_contract"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("validated_data"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'profile'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'has_support_contract'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("p",[t._v("有关此方法的更多详细信息，请参阅有关"),s("a",{attrs:{href:"https://docs.djangoproject.com/en/stable/topics/db/managers/",target:"_blank",rel:"noopener noreferrer"}},[t._v("模型管理器"),s("OutboundLink")],1),t._v("的Django文档，以及"),s("a",{attrs:{href:"https://www.dabapps.com/blog/django-models-and-encapsulation/",target:"_blank",rel:"noopener noreferrer"}},[t._v("有关使用模型和管理器类的博客"),s("OutboundLink")],1),t._v("。")]),t._v(" "),s("h2",{attrs:{id:"处理多个对象"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#处理多个对象"}},[t._v("#")]),t._v(" "),s("a",{attrs:{href:"https://www.django-rest-framework.org/api-guide/serializers/#dealing-with-multiple-objects",target:"_blank",rel:"noopener noreferrer"}},[t._v("处理多个对象"),s("OutboundLink")],1)]),t._v(" "),s("p",[t._v("该"),s("code",[t._v("Serializer")]),t._v("班还可以处理序列化或反序列化对象的列表。")]),t._v(" "),s("h4",{attrs:{id:"序列化多个对象"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#序列化多个对象"}},[t._v("#")]),t._v(" "),s("a",{attrs:{href:"https://www.django-rest-framework.org/api-guide/serializers/#serializing-multiple-objects",target:"_blank",rel:"noopener noreferrer"}},[t._v("序列化多个对象"),s("OutboundLink")],1)]),t._v(" "),s("p",[t._v("要序列化查询集或对象列表而不是单个对象实例，应"),s("code",[t._v("many=True")]),t._v("在实例化序列化程序时传递该标志。然后，您可以传递查询集或要序列化的对象列表。")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[t._v("queryset "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Book"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("objects"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("all")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nserializer "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" BookSerializer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("queryset"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" many"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("True")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nserializer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("data\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# [")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#     {'id': 0, 'title': 'The electric kool-aid acid test', 'author': 'Tom Wolfe'},")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#     {'id': 1, 'title': 'If this is a man', 'author': 'Primo Levi'},")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#     {'id': 2, 'title': 'The wind-up bird chronicle', 'author': 'Haruki Murakami'}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ]")]),t._v("\n")])])]),s("h4",{attrs:{id:"反序列化多个对象"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#反序列化多个对象"}},[t._v("#")]),t._v(" "),s("a",{attrs:{href:"https://www.django-rest-framework.org/api-guide/serializers/#deserializing-multiple-objects",target:"_blank",rel:"noopener noreferrer"}},[t._v("反序列化多个对象"),s("OutboundLink")],1)]),t._v(" "),s("p",[t._v("反序列化多个对象的默认行为是支持多个对象创建，但不支持多个对象更新。有关如何支持或自定义这两种情况的更多信息，请参见下面的"),s("a",{attrs:{href:"https://www.django-rest-framework.org/api-guide/serializers/#listserializer",target:"_blank",rel:"noopener noreferrer"}},[t._v("ListSerializer"),s("OutboundLink")],1),t._v("文档。")]),t._v(" "),s("h2",{attrs:{id:"包括额外的上下文"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#包括额外的上下文"}},[t._v("#")]),t._v(" "),s("a",{attrs:{href:"https://www.django-rest-framework.org/api-guide/serializers/#including-extra-context",target:"_blank",rel:"noopener noreferrer"}},[t._v("包括额外的上下文"),s("OutboundLink")],1)]),t._v(" "),s("p",[t._v("在某些情况下，除了要序列化的对象外，还需要向序列化器提供额外的上下文。一种常见的情况是，如果您使用的是包含超链接关系的序列化程序，则要求序列化程序有权访问当前请求，以便它可以正确生成完全合格的URL。")]),t._v(" "),s("p",[t._v("您可以"),s("code",[t._v("context")]),t._v("在实例化序列化程序时通过传递参数来提供任意其他上下文。例如：")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[t._v("serializer "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" AccountSerializer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("account"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" context"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'request'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" request"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nserializer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("data\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# {'id': 6, 'owner': 'denvercoder9', 'created': datetime.datetime(2013, 2, 12, 09, 44, 56, 678870), 'details': 'http://example.com/accounts/6/details'}")]),t._v("\n")])])]),s("p",[s("code",[t._v(".to_representation()")]),t._v("通过访问"),s("code",[t._v("self.context")]),t._v("属性，可以在任何序列化程序字段逻辑（例如自定义方法）中使用上下文字典。")]),t._v(" "),s("hr"),t._v(" "),s("h1",{attrs:{id:"modelserializer"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#modelserializer"}},[t._v("#")]),t._v(" "),s("a",{attrs:{href:"https://www.django-rest-framework.org/api-guide/serializers/#modelserializer",target:"_blank",rel:"noopener noreferrer"}},[t._v("ModelSerializer"),s("OutboundLink")],1)]),t._v(" "),s("p",[t._v("通常，您会需要与Django模型定义紧密映射的序列化程序类。")]),t._v(" "),s("p",[t._v("本"),s("code",[t._v("ModelSerializer")]),t._v("类提供了一个快捷方式，可以让你自动创建一个"),s("code",[t._v("Serializer")]),t._v("类的字段对应示范场。")]),t._v(" "),s("p",[s("strong",[s("code",[t._v("ModelSerializer")]),t._v("与常规的"),s("code",[t._v("Serializer")]),t._v("类一样，不同之处在于")]),t._v("：")]),t._v(" "),s("ul",[s("li",[t._v("它将根据模型自动为您生成一组字段。")]),t._v(" "),s("li",[t._v("它将自动为序列化器生成验证器，例如unique_together验证器。")]),t._v(" "),s("li",[t._v("它包括简单的默认实现"),s("code",[t._v(".create()")]),t._v("和"),s("code",[t._v(".update()")]),t._v("。")])]),t._v(" "),s("p",[t._v("声明"),s("code",[t._v("ModelSerializer")]),t._v("如下所示：")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("AccountSerializer")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("serializers"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ModelSerializer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Meta")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        model "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Account\n        fields "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'id'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'account_name'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'users'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'created'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])])]),s("p",[t._v("默认情况下，该类上的所有模型字段都将映射到相应的序列化器字段。")]),t._v(" "),s("p",[t._v("任何关系（例如模型上的外键）都将映射到"),s("code",[t._v("PrimaryKeyRelatedField")]),t._v("。默认情况下不包括反向关系，除非按照"),s("a",{attrs:{href:"https://www.django-rest-framework.org/api-guide/relations/",target:"_blank",rel:"noopener noreferrer"}},[t._v("序列化器关系"),s("OutboundLink")],1),t._v("文档中的指定明确包含反向关系。")]),t._v(" "),s("h4",{attrs:{id:"检查一个-modelserializer"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#检查一个-modelserializer"}},[t._v("#")]),t._v(" "),s("a",{attrs:{href:"https://www.django-rest-framework.org/api-guide/serializers/#inspecting-a-modelserializer",target:"_blank",rel:"noopener noreferrer"}},[t._v("检查一个 "),s("code",[t._v("ModelSerializer")]),s("OutboundLink")],1)]),t._v(" "),s("p",[t._v("序列化程序类会生成有用的详细表示形式字符串，使您可以全面检查其字段的状态。这"),s("code",[t._v("ModelSerializers")]),t._v("在您要确定要为您自动创建哪些字段和验.证器的地方工作时特别有用。")]),t._v(" "),s("p",[t._v("为此，请使用打开Django Shell，"),s("code",[t._v("python manage.py shell")]),t._v("然后导入序列化程序类，实例化它，然后打印对象表示形式…")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" myapp"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("serializers "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" AccountSerializer\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" serializer "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" AccountSerializer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("repr")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("serializer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nAccountSerializer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("id")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" IntegerField"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("label"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'ID'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" read_only"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("True")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    name "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" CharField"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("allow_blank"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("True")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" max_length"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" required"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("False")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    owner "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" PrimaryKeyRelatedField"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("queryset"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("User"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("objects"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("all")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("h2",{attrs:{id:"指定要包括的字段"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#指定要包括的字段"}},[t._v("#")]),t._v(" "),s("a",{attrs:{href:"https://www.django-rest-framework.org/api-guide/serializers/#specifying-which-fields-to-include",target:"_blank",rel:"noopener noreferrer"}},[t._v("指定要包括的字段"),s("OutboundLink")],1)]),t._v(" "),s("p",[t._v("如果只希望在模型序列化器中使用默认字段的子集，则可以使用"),s("code",[t._v("fields")]),t._v("或"),s("code",[t._v("exclude")]),t._v("选项，就像使用一样"),s("code",[t._v("ModelForm")]),t._v("。强烈建议您使用"),s("code",[t._v("fields")]),t._v("属性显式设置应序列化的所有字段。这将减少在模型更改时导致意外暴露数据的可能性。")]),t._v(" "),s("p",[t._v("例如：")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("AccountSerializer")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("serializers"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ModelSerializer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Meta")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        model "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Account\n        fields "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'id'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'account_name'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'users'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'created'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])])]),s("p",[t._v("您也可以将"),s("code",[t._v("fields")]),t._v("属性设置为特殊值，"),s("code",[t._v("'__all__'")]),t._v("以指示应使用模型中的所有字段。")]),t._v(" "),s("p",[t._v("例如：")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("AccountSerializer")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("serializers"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ModelSerializer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Meta")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        model "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Account\n        fields "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'__all__'")]),t._v("\n")])])]),s("p",[t._v("您可以将"),s("code",[t._v("exclude")]),t._v("属性设置为要从序列化器中排除的字段列表。")]),t._v(" "),s("p",[t._v("例如：")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("AccountSerializer")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("serializers"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ModelSerializer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Meta")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        model "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Account\n        exclude "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'users'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])])]),s("p",[t._v("在上面的例子中，如果"),s("code",[t._v("Account")]),t._v("模型具有3个字段"),s("code",[t._v("account_name")]),t._v("，"),s("code",[t._v("users")]),t._v("和"),s("code",[t._v("created")]),t._v("，这将导致在字段"),s("code",[t._v("account_name")]),t._v("和"),s("code",[t._v("created")]),t._v("被序列化。")]),t._v(" "),s("p",[s("code",[t._v("fields")]),t._v("和"),s("code",[t._v("exclude")]),t._v("属性中的名称通常会映射到模型类上的模型字段。")]),t._v(" "),s("p",[t._v("另外，"),s("code",[t._v("fields")]),t._v("选项中的名称可以映射到属性或方法，这些属性或方法不包含模型类上存在的参数。")]),t._v(" "),s("p",[t._v("从3.3.0版开始，"),s("strong",[t._v("必须")]),t._v("提供属性"),s("code",[t._v("fields")]),t._v("或"),s("code",[t._v("exclude")]),t._v("之一。")]),t._v(" "),s("h2",{attrs:{id:"指定嵌套序列化"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#指定嵌套序列化"}},[t._v("#")]),t._v(" "),s("a",{attrs:{href:"https://www.django-rest-framework.org/api-guide/serializers/#specifying-nested-serialization",target:"_blank",rel:"noopener noreferrer"}},[t._v("指定嵌套序列化"),s("OutboundLink")],1)]),t._v(" "),s("p",[t._v("默认"),s("code",[t._v("ModelSerializer")]),t._v("使用关系的主键，但是您也可以使用以下"),s("code",[t._v("depth")]),t._v("选项轻松生成嵌套表示：")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("AccountSerializer")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("serializers"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ModelSerializer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Meta")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        model "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Account\n        fields "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'id'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'account_name'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'users'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'created'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n        depth "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n")])])]),s("p",[t._v("该"),s("code",[t._v("depth")]),t._v("选项应设置为一个整数值，该值指示在还原为平面表示形式之前应遍历的关系的深度。")]),t._v(" "),s("p",[t._v("如果要自定义完成序列化的方式，则需要自己定义字段。")]),t._v(" "),s("h2",{attrs:{id:"显式指定字段"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#显式指定字段"}},[t._v("#")]),t._v(" "),s("a",{attrs:{href:"https://www.django-rest-framework.org/api-guide/serializers/#specifying-fields-explicitly",target:"_blank",rel:"noopener noreferrer"}},[t._v("显式指定字段"),s("OutboundLink")],1)]),t._v(" "),s("p",[t._v("您可以"),s("code",[t._v("ModelSerializer")]),t._v("像在类上一样，通过在类上声明字段来向上添加额外的字段或覆盖默认字段"),s("code",[t._v("Serializer")]),t._v("。")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("AccountSerializer")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("serializers"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ModelSerializer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    url "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" serializers"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("CharField"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("source"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'get_absolute_url'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" read_only"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("True")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    groups "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" serializers"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("PrimaryKeyRelatedField"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("many"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("True")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Meta")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        model "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Account\n")])])]),s("p",[t._v("多余的字段可以对应于模型中的任何属性或可调用的字段。")]),t._v(" "),s("h2",{attrs:{id:"指定只读字段"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#指定只读字段"}},[t._v("#")]),t._v(" "),s("a",{attrs:{href:"https://www.django-rest-framework.org/api-guide/serializers/#specifying-read-only-fields",target:"_blank",rel:"noopener noreferrer"}},[t._v("指定只读字段"),s("OutboundLink")],1)]),t._v(" "),s("p",[t._v("您可能希望将多个字段指定为只读。除了使用"),s("code",[t._v("read_only=True")]),t._v("属性显式添加每个字段外，您还可以使用快捷方式Meta选项"),s("code",[t._v("read_only_fields")]),t._v("。")]),t._v(" "),s("p",[t._v("此选项应该是字段名称的列表或元组，并且声明如下：")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("AccountSerializer")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("serializers"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ModelSerializer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Meta")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        model "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Account\n        fields "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'id'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'account_name'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'users'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'created'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n        read_only_fields "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'account_name'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])])]),s("p",[t._v("默认情况下，已"),s("code",[t._v("editable=False")]),t._v("设置的模型字段和"),s("code",[t._v("AutoField")]),t._v("字段将设置为只读，并且不需要将其添加到该"),s("code",[t._v("read_only_fields")]),t._v("选项中。")]),t._v(" "),s("hr"),t._v(" "),s("p",[s("strong",[t._v("注意")]),t._v("：在特殊情况下，只读字段是"),s("code",[t._v("unique_together")]),t._v("模型级别约束的一部分。在这种情况下，序列化程序类需要该字段以验证约束，但用户也不能编辑该字段。")]),t._v(" "),s("p",[t._v("解决此问题的正确方法是在序列化程序上显式指定字段，同时提供"),s("code",[t._v("read_only=True")]),t._v("和"),s("code",[t._v("default=…")]),t._v("关键字参数。")]),t._v(" "),s("p",[t._v("这方面的一个示例"),s("code",[t._v("User")]),t._v("是"),s("code",[t._v("unique_together")]),t._v("与当前身份验证的只读关系，该关系与另一个标识符相关。在这种情况下，您将这样声明用户字段：")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[t._v("user "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" serializers"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("PrimaryKeyRelatedField"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("read_only"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("True")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" default"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("serializers"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("CurrentUserDefault"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("p",[t._v("请查看"),s("a",{attrs:{href:"https://www.django-rest-framework.org/api-guide/validators/",target:"_blank",rel:"noopener noreferrer"}},[t._v("验证程序文档，"),s("OutboundLink")],1),t._v("以获取有关"),s("a",{attrs:{href:"https://www.django-rest-framework.org/api-guide/validators/#uniquetogethervalidator",target:"_blank",rel:"noopener noreferrer"}},[t._v("UniqueTogetherValidator"),s("OutboundLink")],1),t._v("和"),s("a",{attrs:{href:"https://www.django-rest-framework.org/api-guide/validators/#currentuserdefault",target:"_blank",rel:"noopener noreferrer"}},[t._v("CurrentUserDefault"),s("OutboundLink")],1),t._v("类的详细信息。")]),t._v(" "),s("hr"),t._v(" "),s("h2",{attrs:{id:"附加关键字参数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#附加关键字参数"}},[t._v("#")]),t._v(" "),s("a",{attrs:{href:"https://www.django-rest-framework.org/api-guide/serializers/#additional-keyword-arguments",target:"_blank",rel:"noopener noreferrer"}},[t._v("附加关键字参数"),s("OutboundLink")],1)]),t._v(" "),s("p",[t._v("还有一个快捷方式，允许您使用该"),s("code",[t._v("extra_kwargs")]),t._v("选项在字段上指定任意其他关键字参数。与"),s("code",[t._v("read_only_fields")]),t._v("的情况一样，这意味着您无需在序列化程序上显式声明该字段。")]),t._v(" "),s("p",[t._v("此选项是一个字典，将字段名称映射到关键字参数字典。例如：")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("CreateUserSerializer")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("serializers"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ModelSerializer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Meta")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        model "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" User\n        fields "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'email'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'username'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'password'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n        extra_kwargs "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'password'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'write_only'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("True")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("create")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" validated_data"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        user "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" User"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n            email"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("validated_data"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'email'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            username"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("validated_data"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'username'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        user"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("set_password"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("validated_data"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'password'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        user"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("save"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" user\n")])])]),s("p",[t._v("请记住，如果已在序列化程序类上显式声明了该字段，则该"),s("code",[t._v("extra_kwargs")]),t._v("选项将被忽略。")]),t._v(" "),s("h2",{attrs:{id:"关系字段"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#关系字段"}},[t._v("#")]),t._v(" "),s("a",{attrs:{href:"https://www.django-rest-framework.org/api-guide/serializers/#relational-fields",target:"_blank",rel:"noopener noreferrer"}},[t._v("关系字段"),s("OutboundLink")],1)]),t._v(" "),s("p",[t._v("序列化模型实例时，可以选择多种方式来表示关系。默认表示形式"),s("code",[t._v("ModelSerializer")]),t._v("是使用相关实例的主键。")]),t._v(" "),s("p",[t._v("其他表示形式包括使用超链接进行序列化，序列化完整的嵌套表示形式或使用自定义表示形式进行序列化。")]),t._v(" "),s("p",[t._v("有关完整的详细信息，请参见"),s("a",{attrs:{href:"https://www.django-rest-framework.org/api-guide/relations/",target:"_blank",rel:"noopener noreferrer"}},[t._v("序列化程序关系"),s("OutboundLink")],1),t._v("文档。")]),t._v(" "),s("h2",{attrs:{id:"自定义字段映射"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#自定义字段映射"}},[t._v("#")]),t._v(" "),s("a",{attrs:{href:"https://www.django-rest-framework.org/api-guide/serializers/#customizing-field-mappings",target:"_blank",rel:"noopener noreferrer"}},[t._v("自定义字段映射"),s("OutboundLink")],1)]),t._v(" "),s("p",[s("code",[t._v("ModelSerializer")]),t._v("类还公开了一个API，您可以重写该API，以更改在实例化序列化程序时自动确定序列化程序字段的方式。")]),t._v(" "),s("p",[t._v("通常，如果"),s("code",[t._v("ModelSerializer")]),t._v("在默认情况下不生成所需的字段，则应将它们显式添加到类中，或者直接使用常规序列化程序"),s("code",[t._v("Serializer")]),t._v("类。但是，在某些情况下，您可能希望创建一个新基类，该基类定义如何为任何给定模型创建序列化程序字段。")]),t._v(" "),s("h3",{attrs:{id:"serializer-field-mapping"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#serializer-field-mapping"}},[t._v("#")]),t._v(" "),s("a",{attrs:{href:"https://www.django-rest-framework.org/api-guide/serializers/#serializer_field_mapping",target:"_blank",rel:"noopener noreferrer"}},[s("code",[t._v(".serializer_field_mapping")]),s("OutboundLink")],1)]),t._v(" "),s("p",[t._v("Django模型类到REST框架序列化器类的映射。您可以重写此映射，以更改应用于每个模型类的默认序列化器类。")]),t._v(" "),s("h3",{attrs:{id:"serializer-related-field"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#serializer-related-field"}},[t._v("#")]),t._v(" "),s("a",{attrs:{href:"https://www.django-rest-framework.org/api-guide/serializers/#serializer_related_field",target:"_blank",rel:"noopener noreferrer"}},[s("code",[t._v(".serializer_related_field")]),s("OutboundLink")],1)]),t._v(" "),s("p",[t._v("此属性应该是序列化程序字段类，默认情况下用于关系字段。")]),t._v(" "),s("p",[t._v("对于"),s("code",[t._v("ModelSerializer")]),t._v("此默认值为"),s("code",[t._v("PrimaryKeyRelatedField")]),t._v("。")]),t._v(" "),s("p",[t._v("对于"),s("code",[t._v("HyperlinkedModelSerializer")]),t._v("此默认值为"),s("code",[t._v("serializers.HyperlinkedRelatedField")]),t._v("。")]),t._v(" "),s("h3",{attrs:{id:"serializer-url-field"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#serializer-url-field"}},[t._v("#")]),t._v(" "),s("a",{attrs:{href:"https://www.django-rest-framework.org/api-guide/serializers/#serializer_url_field",target:"_blank",rel:"noopener noreferrer"}},[s("code",[t._v("serializer_url_field")]),s("OutboundLink")],1)]),t._v(" "),s("p",[t._v("应该用于"),s("code",[t._v("url")]),t._v("序列化程序上任何字段的序列化程序字段类。")]),t._v(" "),s("p",[t._v("默认为 "),s("code",[t._v("serializers.HyperlinkedIdentityField")])]),t._v(" "),s("h3",{attrs:{id:"serializer-choice-field"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#serializer-choice-field"}},[t._v("#")]),t._v(" "),s("a",{attrs:{href:"https://www.django-rest-framework.org/api-guide/serializers/#serializer_choice_field",target:"_blank",rel:"noopener noreferrer"}},[s("code",[t._v("serializer_choice_field")]),s("OutboundLink")],1)]),t._v(" "),s("p",[t._v("应该用于序列化程序上任何选择字段的序列化程序字段类。")]),t._v(" "),s("p",[t._v("默认为 "),s("code",[t._v("serializers.ChoiceField")])]),t._v(" "),s("h3",{attrs:{id:"field-class和field-kwargs-api"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#field-class和field-kwargs-api"}},[t._v("#")]),t._v(" "),s("a",{attrs:{href:"https://www.django-rest-framework.org/api-guide/serializers/#the-field_class-and-field_kwargs-api",target:"_blank",rel:"noopener noreferrer"}},[t._v("field_class和field_kwargs API"),s("OutboundLink")],1)]),t._v(" "),s("p",[t._v("调用以下方法来确定应该自动包含在序列化程序中的每个字段的类和关键字参数。这些方法中的每一个都应返回的两个元组"),s("code",[t._v("(field_class, field_kwargs)")]),t._v("。")]),t._v(" "),s("h3",{attrs:{id:"build-standard-field-self-field-name-model-field"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#build-standard-field-self-field-name-model-field"}},[t._v("#")]),t._v(" "),s("a",{attrs:{href:"https://www.django-rest-framework.org/api-guide/serializers/#build_standard_fieldself-field_name-model_field",target:"_blank",rel:"noopener noreferrer"}},[s("code",[t._v(".build_standard_field(self, field_name, model_field)")]),s("OutboundLink")],1)]),t._v(" "),s("p",[t._v("调用以生成映射到标准模型字段的序列化器字段。")]),t._v(" "),s("p",[t._v("默认实现基于"),s("code",[t._v("serializer_field_mapping")]),t._v("属性返回一个序列化器类。")]),t._v(" "),s("h3",{attrs:{id:"build-relational-field-self-field-name-relation-info"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#build-relational-field-self-field-name-relation-info"}},[t._v("#")]),t._v(" "),s("a",{attrs:{href:"https://www.django-rest-framework.org/api-guide/serializers/#build_relational_fieldself-field_name-relation_info",target:"_blank",rel:"noopener noreferrer"}},[s("code",[t._v(".build_relational_field(self, field_name, relation_info)")]),s("OutboundLink")],1)]),t._v(" "),s("p",[t._v("调用以生成映射到关系模型字段的序列化器字段。")]),t._v(" "),s("p",[t._v("默认实现基于"),s("code",[t._v("serializer_related_field")]),t._v("属性返回一个序列化器类。")]),t._v(" "),s("p",[t._v("该"),s("code",[t._v("relation_info")]),t._v("参数是一个名为元组，包含"),s("code",[t._v("model_field")]),t._v("，"),s("code",[t._v("related_model")]),t._v("，"),s("code",[t._v("to_many")]),t._v("和"),s("code",[t._v("has_through_model")]),t._v("属性。")]),t._v(" "),s("h3",{attrs:{id:"build-nested-field-self-field-name-relation-info-nested-depth"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#build-nested-field-self-field-name-relation-info-nested-depth"}},[t._v("#")]),t._v(" "),s("a",{attrs:{href:"https://www.django-rest-framework.org/api-guide/serializers/#build_nested_fieldself-field_name-relation_info-nested_depth",target:"_blank",rel:"noopener noreferrer"}},[s("code",[t._v(".build_nested_field(self, field_name, relation_info, nested_depth)")]),s("OutboundLink")],1)]),t._v(" "),s("p",[t._v("设置选项后，调用此方法生成映射到关系模型字段的序列化器字段"),s("code",[t._v("depth")]),t._v("。")]),t._v(" "),s("p",[t._v("默认实现基于"),s("code",[t._v("ModelSerializer")]),t._v("或动态创建嵌套的序列化程序类"),s("code",[t._v("HyperlinkedModelSerializer")]),t._v("。")]),t._v(" "),s("p",[t._v("该"),s("code",[t._v("nested_depth")]),t._v("会的价值"),s("code",[t._v("depth")]),t._v("选择，减之一。")]),t._v(" "),s("p",[t._v("该"),s("code",[t._v("relation_info")]),t._v("参数是一个名为元组，包含"),s("code",[t._v("model_field")]),t._v("，"),s("code",[t._v("related_model")]),t._v("，"),s("code",[t._v("to_many")]),t._v("和"),s("code",[t._v("has_through_model")]),t._v("属性。")]),t._v(" "),s("h3",{attrs:{id:"build-property-field-self-field-name-model-class"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#build-property-field-self-field-name-model-class"}},[t._v("#")]),t._v(" "),s("a",{attrs:{href:"https://www.django-rest-framework.org/api-guide/serializers/#build_property_fieldself-field_name-model_class",target:"_blank",rel:"noopener noreferrer"}},[s("code",[t._v(".build_property_field(self, field_name, model_class)")]),s("OutboundLink")],1)]),t._v(" "),s("p",[t._v("调用以生成一个序列化器字段，该字段映射到模型类上的属性或零参数方法。")]),t._v(" "),s("p",[t._v("默认实现返回一个"),s("code",[t._v("ReadOnlyField")]),t._v("类。")]),t._v(" "),s("h3",{attrs:{id:"build-url-field-self-field-name-model-class"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#build-url-field-self-field-name-model-class"}},[t._v("#")]),t._v(" "),s("a",{attrs:{href:"https://www.django-rest-framework.org/api-guide/serializers/#build_url_fieldself-field_name-model_class",target:"_blank",rel:"noopener noreferrer"}},[s("code",[t._v(".build_url_field(self, field_name, model_class)")]),s("OutboundLink")],1)]),t._v(" "),s("p",[t._v("调用以为序列化器自己的"),s("code",[t._v("url")]),t._v("字段生成一个序列化器字段。默认实现返回一个"),s("code",[t._v("HyperlinkedIdentityField")]),t._v("类。")]),t._v(" "),s("h3",{attrs:{id:"build-unknown-field-self-field-name-model-class"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#build-unknown-field-self-field-name-model-class"}},[t._v("#")]),t._v(" "),s("a",{attrs:{href:"https://www.django-rest-framework.org/api-guide/serializers/#build_unknown_fieldself-field_name-model_class",target:"_blank",rel:"noopener noreferrer"}},[s("code",[t._v(".build_unknown_field(self, field_name, model_class)")]),s("OutboundLink")],1)]),t._v(" "),s("p",[t._v("当字段名称未映射到任何模型字段或模型属性时调用。尽管子类可以自定义此行为，但默认实现会引发错误。")]),t._v(" "),s("hr"),t._v(" "),s("h1",{attrs:{id:"超链接模型序列化器"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#超链接模型序列化器"}},[t._v("#")]),t._v(" "),s("a",{attrs:{href:"https://www.django-rest-framework.org/api-guide/serializers/#hyperlinkedmodelserializer",target:"_blank",rel:"noopener noreferrer"}},[t._v("超链接模型序列化器"),s("OutboundLink")],1)]),t._v(" "),s("p",[t._v("的"),s("code",[t._v("HyperlinkedModelSerializer")]),t._v("类是类似于"),s("code",[t._v("ModelSerializer")]),t._v("不同之处在于它使用的超链接来表示的关系，而不是主键类。")]),t._v(" "),s("p",[t._v("默认情况下，序列化程序将包含一个"),s("code",[t._v("url")]),t._v("字段而不是主键字段。")]),t._v(" "),s("p",[t._v("url字段将使用"),s("code",[t._v("HyperlinkedIdentityField")]),t._v("序列化器字段表示，模型上的任何关系都将使用"),s("code",[t._v("HyperlinkedRelatedField")]),t._v("序列化器字段表示。")]),t._v(" "),s("p",[t._v("您可以通过将主键添加到"),s("code",[t._v("fields")]),t._v("选项中来显式包括主键，例如：")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("AccountSerializer")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("serializers"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("HyperlinkedModelSerializer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Meta")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        model "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Account\n        fields "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'url'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'id'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'account_name'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'users'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'created'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])])]),s("h2",{attrs:{id:"绝对和相对url"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#绝对和相对url"}},[t._v("#")]),t._v(" "),s("a",{attrs:{href:"https://www.django-rest-framework.org/api-guide/serializers/#absolute-and-relative-urls",target:"_blank",rel:"noopener noreferrer"}},[t._v("绝对和相对URL"),s("OutboundLink")],1)]),t._v(" "),s("p",[t._v("实例化超链接"),s("code",[t._v("ModelSerializer")]),t._v("时，必须在序列化程序上下文中包含当前"),s("code",[t._v("request")]),t._v("，例如：")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[t._v("serializer "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" AccountSerializer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("queryset"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" context"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'request'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" request"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("p",[t._v("这样做将确保超链接可以包含适当的主机名，以使生成的表示形式使用完全限定的URL，例如：")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[t._v("http"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("//")]),t._v("api"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("example"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("com"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("accounts"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("\n")])])]),s("p",[t._v("而不是相对URL，例如：")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("accounts"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("\n")])])]),s("p",[t._v("如果"),s("em",[t._v("确实")]),t._v("要使用相对URL，则应显式传递"),s("code",[t._v("{'request': None}")]),t._v(" 序列化程序上下文。")]),t._v(" "),s("h2",{attrs:{id:"如何确定超链接视图"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#如何确定超链接视图"}},[t._v("#")]),t._v(" "),s("a",{attrs:{href:"https://www.django-rest-framework.org/api-guide/serializers/#how-hyperlinked-views-are-determined",target:"_blank",rel:"noopener noreferrer"}},[t._v("如何确定超链接视图"),s("OutboundLink")],1)]),t._v(" "),s("p",[t._v("需要一种确定应该使用哪些视图来超链接到模型实例的方法。")]),t._v(" "),s("p",[t._v("默认情况下，超链接应与匹配样式的视图名称相对应"),s("code",[t._v("'{model_name}-detail'")]),t._v("，并通过"),s("code",[t._v("pk")]),t._v("关键字参数查找实例。")]),t._v(" "),s("p",[t._v("您可以使用设置中的"),s("code",[t._v("view_name")]),t._v("和"),s("code",[t._v("lookup_field")]),t._v("选项之一或全部覆盖URL字段视图名称和查找字段"),s("code",[t._v("extra_kwargs")]),t._v("，如下所示：")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("AccountSerializer")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("serializers"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("HyperlinkedModelSerializer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Meta")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        model "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Account\n        fields "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'account_url'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'account_name'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'users'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'created'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n        extra_kwargs "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'url'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'view_name'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'accounts'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'lookup_field'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'account_name'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'users'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'lookup_field'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'username'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("或者，您可以在串行器上显式设置字段。例如：")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("AccountSerializer")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("serializers"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("HyperlinkedModelSerializer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    url "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" serializers"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("HyperlinkedIdentityField"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n        view_name"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'accounts'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        lookup_field"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'slug'")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    users "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" serializers"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("HyperlinkedRelatedField"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n        view_name"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'user-detail'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        lookup_field"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'username'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        many"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("True")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        read_only"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("True")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Meta")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        model "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Account\n        fields "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'url'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'account_name'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'users'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'created'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])])]),s("hr"),t._v(" "),s("p",[s("strong",[t._v("提示")]),t._v("：正确地将超链接的表示形式和您的URL conf匹配在一起有时可能有点麻烦。打印"),s("code",[t._v("repr")]),t._v("一个的"),s("code",[t._v("HyperlinkedModelSerializer")]),t._v("实例来检查到底是哪视图名和查询领域的关系预计将映射过一个特别有用的方法。")]),t._v(" "),s("hr"),t._v(" "),s("h2",{attrs:{id:"更改url字段名称"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#更改url字段名称"}},[t._v("#")]),t._v(" "),s("a",{attrs:{href:"https://www.django-rest-framework.org/api-guide/serializers/#changing-the-url-field-name",target:"_blank",rel:"noopener noreferrer"}},[t._v("更改URL字段名称"),s("OutboundLink")],1)]),t._v(" "),s("p",[t._v("URL字段的名称默认为“ url”。您可以使用"),s("code",[t._v("URL_FIELD_NAME")]),t._v("设置在全局范围内覆盖此设置。")]),t._v(" "),s("hr"),t._v(" "),s("h1",{attrs:{id:"listserializer"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#listserializer"}},[t._v("#")]),t._v(" "),s("a",{attrs:{href:"https://www.django-rest-framework.org/api-guide/serializers/#listserializer",target:"_blank",rel:"noopener noreferrer"}},[t._v("ListSerializer"),s("OutboundLink")],1)]),t._v(" "),s("p",[t._v("本"),s("code",[t._v("ListSerializer")]),t._v("类提供了序列化和一次验证多个对象的行为。您"),s("em",[t._v("通常")]),t._v("不需要"),s("code",[t._v("ListSerializer")]),t._v("直接使用，而应该"),s("code",[t._v("many=True")]),t._v("在实例化序列化程序时简单地通过。")]),t._v(" "),s("p",[t._v("实例化并"),s("code",[t._v("many=True")]),t._v("传递序列化程序时，"),s("code",[t._v("ListSerializer")]),t._v("将创建一个实例。然后，序列化程序类成为父级的子级"),s("code",[t._v("ListSerializer")])]),t._v(" "),s("p",[t._v("以下参数也可以传递给传递的"),s("code",[t._v("ListSerializer")]),t._v("字段或序列化器"),s("code",[t._v("many=True")]),t._v("：")]),t._v(" "),s("h3",{attrs:{id:"allow-empty"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#allow-empty"}},[t._v("#")]),t._v(" "),s("a",{attrs:{href:"https://www.django-rest-framework.org/api-guide/serializers/#allow_empty",target:"_blank",rel:"noopener noreferrer"}},[s("code",[t._v("allow_empty")]),s("OutboundLink")],1)]),t._v(" "),s("p",[t._v("默认情况下为"),s("code",[t._v("True")]),t._v("，但如果要禁止空列表作为有效输入，则可以将其设置为"),s("code",[t._v("False")]),t._v("。")]),t._v(" "),s("h3",{attrs:{id:"自定义listserializer行为"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#自定义listserializer行为"}},[t._v("#")]),t._v(" "),s("a",{attrs:{href:"https://www.django-rest-framework.org/api-guide/serializers/#customizing-listserializer-behavior",target:"_blank",rel:"noopener noreferrer"}},[t._v("自定义"),s("code",[t._v("ListSerializer")]),t._v("行为"),s("OutboundLink")],1)]),t._v(" "),s("p",[t._v("这里"),s("em",[t._v("是")]),t._v("一些使用情况下，您可能希望定制的"),s("code",[t._v("ListSerializer")]),t._v("行为。例如：")]),t._v(" "),s("ul",[s("li",[t._v("您想要提供列表的特定验证，例如检查一个元素与列表中的另一个元素没有冲突。")]),t._v(" "),s("li",[t._v("您要自定义多个对象的创建或更新行为。")])]),t._v(" "),s("p",[t._v("对于这些情况，可以"),s("code",[t._v("many=True")]),t._v("通过使用"),s("code",[t._v("list_serializer_class")]),t._v("序列化程序"),s("code",[t._v("Meta")]),t._v("类上的选项来修改传递时使用的类。")]),t._v(" "),s("p",[t._v("例如：")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("CustomListSerializer")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("serializers"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ListSerializer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("CustomSerializer")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("serializers"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Serializer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Meta")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        list_serializer_class "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" CustomListSerializer\n")])])]),s("h4",{attrs:{id:"自定义多个创建"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#自定义多个创建"}},[t._v("#")]),t._v(" "),s("a",{attrs:{href:"https://www.django-rest-framework.org/api-guide/serializers/#customizing-multiple-create",target:"_blank",rel:"noopener noreferrer"}},[t._v("自定义多个创建"),s("OutboundLink")],1)]),t._v(" "),s("p",[t._v("多对象创建的默认实现是简单地为列表中的每个项调用"),s("code",[t._v(".create（）")]),t._v("。如果要自定义此行为，则需要在传递"),s("code",[t._v("many=True")]),t._v("时使用的"),s("code",[t._v("ListSerializer")]),t._v("类上自定义"),s("code",[t._v(".create（）")]),t._v("方法。")]),t._v(" "),s("p",[t._v("例如：")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("BookListSerializer")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("serializers"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ListSerializer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("create")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" validated_data"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        books "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("Book"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("**")]),t._v("item"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" item "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" validated_data"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" Book"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("objects"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("bulk_create"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("books"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("BookSerializer")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("serializers"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Serializer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Meta")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        list_serializer_class "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" BookListSerializer\n")])])]),s("h4",{attrs:{id:"自定义多个更新"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#自定义多个更新"}},[t._v("#")]),t._v(" "),s("a",{attrs:{href:"https://www.django-rest-framework.org/api-guide/serializers/#customizing-multiple-update",target:"_blank",rel:"noopener noreferrer"}},[t._v("自定义多个更新"),s("OutboundLink")],1)]),t._v(" "),s("p",[t._v("默认情况下，"),s("code",[t._v("ListSerializer")]),t._v("该类不支持多个更新。这是因为插入和删除应预期的行为是模棱两可的。")]),t._v(" "),s("p",[t._v("要支持多个更新，您需要明确地这样做。在编写多个更新代码时，请确保牢记以下几点：")]),t._v(" "),s("ul",[s("li",[t._v("您如何确定应该为数据列表中的每个项目更新哪个实例？")]),t._v(" "),s("li",[t._v("应该如何处理插入？它们是无效的还是创建新对象？")]),t._v(" "),s("li",[t._v("应如何处理清除？它们是否意味着对象删除或删除关系？应该默默地忽略它们还是无效？")]),t._v(" "),s("li",[t._v("订购应该如何处理？更改两个项目的位置是否意味着状态发生任何变化或被忽略？")])]),t._v(" "),s("p",[t._v("您将需要向"),s("code",[t._v("id")]),t._v("实例序列化器添加一个显式字段。默认的隐式生成的"),s("code",[t._v("id")]),t._v("字段标记为"),s("code",[t._v("read_only")]),t._v("。这导致它在更新时被删除。一旦明确声明它，它将在列表序列化程序的"),s("code",[t._v("update")]),t._v("方法中可用。")]),t._v(" "),s("p",[t._v("这是一个示例，您可以选择如何实施多个更新：")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("BookListSerializer")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("serializers"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ListSerializer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("update")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" instance"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" validated_data"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Maps for id->instance and id->data item.")]),t._v("\n        book_mapping "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("book"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("id")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" book "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" book "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" instance"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        data_mapping "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("item"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'id'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" item "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" item "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" validated_data"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Perform creations and updates.")]),t._v("\n        ret "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" book_id"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" data "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" data_mapping"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("items"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            book "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" book_mapping"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("get"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("book_id"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("None")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" book "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("is")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("None")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n                ret"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("append"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("child"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("create"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("data"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n                ret"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("append"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("child"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("update"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("book"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" data"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Perform deletions.")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" book_id"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" book "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" book_mapping"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("items"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" book_id "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("not")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" data_mapping"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n                book"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("delete"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" ret\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("BookSerializer")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("serializers"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Serializer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# We need to identify elements in the list using their primary key,")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# so use a writable field here, rather than the default which would be read-only.")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("id")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" serializers"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("IntegerField"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Meta")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        list_serializer_class "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" BookListSerializer\n")])])]),s("p",[t._v("第三方包可能与3.1版本一起提供对多个更新操作的一些自动支持，类似于REST框架2中的"),s("code",[t._v("allow-add-remove")]),t._v("行为。")]),t._v(" "),s("h4",{attrs:{id:"自定义listserializer初始化"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#自定义listserializer初始化"}},[t._v("#")]),t._v(" "),s("a",{attrs:{href:"https://www.django-rest-framework.org/api-guide/serializers/#customizing-listserializer-initialization",target:"_blank",rel:"noopener noreferrer"}},[t._v("自定义ListSerializer初始化"),s("OutboundLink")],1)]),t._v(" "),s("p",[t._v("当"),s("code",[t._v("many=True")]),t._v("实例化带有的序列化器时，我们需要确定"),s("code",[t._v(".__init__()")]),t._v("子"),s("code",[t._v("Serializer")]),t._v("类和父"),s("code",[t._v("ListSerializer")]),t._v("类都应将哪些参数和关键字参数传递给该方法。")]),t._v(" "),s("p",[t._v("默认实现是将所有参数传递给两个类，除了"),s("code",[t._v("validators")]),t._v("和以及任何自定义关键字参数（假定这两个参数都旨在用于子序列化器类）之外。")]),t._v(" "),s("p",[t._v("有时，您可能需要明确指定在"),s("code",[t._v("many=True")]),t._v("传递时应如何实例化子类和父类。您可以通过使用"),s("code",[t._v("many_init")]),t._v("class方法来实现。")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[t._v("    "),s("span",{pre:!0,attrs:{class:"token decorator annotation punctuation"}},[t._v("@classmethod")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("many_init")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("cls"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("args"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("**")]),t._v("kwargs"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Instantiate the child serializer.")]),t._v("\n        kwargs"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'child'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" cls"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Instantiate the parent list serializer.")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" CustomListSerializer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("args"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("**")]),t._v("kwargs"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("hr"),t._v(" "),s("h1",{attrs:{id:"baseserializer"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#baseserializer"}},[t._v("#")]),t._v(" "),s("a",{attrs:{href:"https://www.django-rest-framework.org/api-guide/serializers/#baseserializer",target:"_blank",rel:"noopener noreferrer"}},[t._v("BaseSerializer"),s("OutboundLink")],1)]),t._v(" "),s("p",[s("code",[t._v("BaseSerializer")]),t._v(" 可用于轻松支持替代序列化和反序列化样式的类。")]),t._v(" "),s("p",[t._v("此类实现与该类相同的基本API "),s("code",[t._v("Serializer")]),t._v("：")]),t._v(" "),s("ul",[s("li",[s("code",[t._v(".data")]),t._v(" -返回传出的原始表示形式。")]),t._v(" "),s("li",[s("code",[t._v(".is_valid()")]),t._v(" -反序列化并验证传入的数据。")]),t._v(" "),s("li",[s("code",[t._v(".validated_data")]),t._v(" -返回经过验证的传入数据。")]),t._v(" "),s("li",[s("code",[t._v(".errors")]),t._v(" -返回验证期间的所有错误。")]),t._v(" "),s("li",[s("code",[t._v(".save()")]),t._v(" -将验证后的数据持久化为对象实例。")])]),t._v(" "),s("p",[t._v("可以覆盖四种方法，具体取决于您希望序列化程序类支持什么功能：")]),t._v(" "),s("ul",[s("li",[s("code",[t._v(".to_representation()")]),t._v(" -覆盖它以支持序列化，以进行读取操作。")]),t._v(" "),s("li",[s("code",[t._v(".to_internal_value()")]),t._v(" -重写此属性以支持反序列化，以进行写操作。")]),t._v(" "),s("li",[s("code",[t._v(".create()")]),t._v("和"),s("code",[t._v(".update()")]),t._v("-覆盖一个或两个的这些支持节能实例。")])]),t._v(" "),s("p",[t._v("因为此类提供与该类相同的接口，所以"),s("code",[t._v("Serializer")]),t._v("您可以将其与现有的基于通用类的视图一起使用，就像使用常规"),s("code",[t._v("Serializer")]),t._v("或一样"),s("code",[t._v("ModelSerializer")]),t._v("。")]),t._v(" "),s("p",[t._v("您这样做时会注意到的唯一区别是，这些"),s("code",[t._v("BaseSerializer")]),t._v("类不会在可浏览的API中生成HTML表单。这是因为它们返回的数据不包括所有字段信息，该信息将允许将每个字段呈现为合适的HTML输入。")]),t._v(" "),s("h5",{attrs:{id:"只读baseserializer类"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#只读baseserializer类"}},[t._v("#")]),t._v(" "),s("a",{attrs:{href:"https://www.django-rest-framework.org/api-guide/serializers/#read-only-baseserializer-classes",target:"_blank",rel:"noopener noreferrer"}},[t._v("只读"),s("code",[t._v("BaseSerializer")]),t._v("类"),s("OutboundLink")],1)]),t._v(" "),s("p",[t._v("要使用"),s("code",[t._v("BaseSerializer")]),t._v("该类实现只读的序列化程序，我们只需要重写该"),s("code",[t._v(".to_representation()")]),t._v("方法即可。让我们来看一个使用简单Django模型的示例：")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("HighScore")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("models"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Model"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    created "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" models"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("DateTimeField"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("auto_now_add"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("True")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    player_name "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" models"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("CharField"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("max_length"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    score "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" models"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("IntegerField"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("p",[t._v("创建一个只读的序列化器将"),s("code",[t._v("HighScore")]),t._v("实例转换为原始数据类型很简单。")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("HighScoreSerializer")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("serializers"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("BaseSerializer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("to_representation")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" instance"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'score'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" instance"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("score"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'player_name'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" instance"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("player_name\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("现在，我们可以使用此类来序列化单个"),s("code",[t._v("HighScore")]),t._v("实例：")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token decorator annotation punctuation"}},[t._v("@api_view")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'GET'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("high_score")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("request"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" pk"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    instance "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" HighScore"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("objects"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("get"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("pk"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("pk"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    serializer "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" HighScoreSerializer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("instance"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" Response"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("serializer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("data"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("p",[t._v("或使用它来序列化多个实例：")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token decorator annotation punctuation"}},[t._v("@api_view")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'GET'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("all_high_scores")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("request"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    queryset "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" HighScore"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("objects"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("order_by"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'-score'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    serializer "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" HighScoreSerializer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("queryset"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" many"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("True")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" Response"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("serializer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("data"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("h5",{attrs:{id:"读写baseserializer类"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#读写baseserializer类"}},[t._v("#")]),t._v(" "),s("a",{attrs:{href:"https://www.django-rest-framework.org/api-guide/serializers/#read-write-baseserializer-classes",target:"_blank",rel:"noopener noreferrer"}},[t._v("读写"),s("code",[t._v("BaseSerializer")]),t._v("类"),s("OutboundLink")],1)]),t._v(" "),s("p",[t._v("要创建读写序列化器，我们首先需要实现一个"),s("code",[t._v(".to_internal_value()")]),t._v("方法。此方法返回将用于构造对象实例的验证值，"),s("code",[t._v("serializers.ValidationError")]),t._v("如果提供的数据格式不正确，则可能会引发。")]),t._v(" "),s("p",[t._v("一旦你已经实现"),s("code",[t._v(".to_internal_value()")]),t._v("，基本验证API将可在串行器，你将能够使用"),s("code",[t._v(".is_valid()")]),t._v("，"),s("code",[t._v(".validated_data")]),t._v("和"),s("code",[t._v(".errors")]),t._v("。")]),t._v(" "),s("p",[t._v("如果您还想要支持，则还"),s("code",[t._v(".save()")]),t._v("需要实现"),s("code",[t._v(".create()")]),t._v("和"),s("code",[t._v(".update()")]),t._v("方法中的一个或两个。")]),t._v(" "),s("p",[t._v("这是我们之前的完整示例，"),s("code",[t._v("HighScoreSerializer")]),t._v("已更新为支持读取和写入操作。")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("HighScoreSerializer")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("serializers"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("BaseSerializer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("to_internal_value")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" data"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        score "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" data"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("get"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'score'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        player_name "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" data"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("get"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'player_name'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Perform the data validation.")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("not")]),t._v(" score"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("raise")]),t._v(" serializers"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ValidationError"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'score'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'This field is required.'")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("not")]),t._v(" player_name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("raise")]),t._v(" serializers"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ValidationError"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'player_name'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'This field is required.'")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("len")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("player_name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("raise")]),t._v(" serializers"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ValidationError"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'player_name'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'May not be more than 10 characters.'")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Return the validated values. This will be available as")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# the `.validated_data` property.")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'score'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("score"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'player_name'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" player_name\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("to_representation")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" instance"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'score'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" instance"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("score"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'player_name'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" instance"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("player_name\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("create")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" validated_data"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" HighScore"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("objects"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("create"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("**")]),t._v("validated_data"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("h4",{attrs:{id:"创建新的基类"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#创建新的基类"}},[t._v("#")]),t._v(" "),s("a",{attrs:{href:"https://www.django-rest-framework.org/api-guide/serializers/#creating-new-base-classes",target:"_blank",rel:"noopener noreferrer"}},[t._v("创建新的基类"),s("OutboundLink")],1)]),t._v(" "),s("p",[t._v("的"),s("code",[t._v("BaseSerializer")]),t._v("，如果你想实现新的通用序列化类来处理特定的序列化的风格，或者使用可替换存储后端集成类也是有用的。")]),t._v(" "),s("p",[t._v("下列类是通用序列化器的示例，该序列化器可以处理将任意对象强制转换为原始表示形式。")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ObjectSerializer")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("serializers"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("BaseSerializer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token triple-quoted-string string"}},[t._v('"""\n    A read-only serializer that coerces arbitrary complex objects\n    into primitive representations.\n    """')]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("to_representation")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" instance"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        output "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" attribute_name "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("dir")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("instance"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            attribute "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("getattr")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("instance"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" attribute_name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" attribute_name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("startswith"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'_'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Ignore private attributes.")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("pass")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("elif")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("hasattr")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("attribute"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'__call__'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Ignore methods and other callables.")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("pass")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("elif")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("isinstance")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("attribute"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("str")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("bool")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("float")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("type")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("None")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Primitive types can be passed through unmodified.")]),t._v("\n                output"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("attribute_name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" attribute\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("elif")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("isinstance")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("attribute"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("list")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Recursively deal with items in lists.")]),t._v("\n                output"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("attribute_name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n                    self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("to_representation"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("item"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" item "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" attribute\n                "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("elif")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("isinstance")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("attribute"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("dict")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Recursively deal with items in dictionaries.")]),t._v("\n                output"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("attribute_name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                    "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("str")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("key"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("to_representation"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("value"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n                    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" key"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" value "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" attribute"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("items"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Force anything else to its string representation.")]),t._v("\n                output"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("attribute_name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("str")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("attribute"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" output\n")])])]),s("hr"),t._v(" "),s("h1",{attrs:{id:"先进的序列化器用法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#先进的序列化器用法"}},[t._v("#")]),t._v(" "),s("a",{attrs:{href:"https://www.django-rest-framework.org/api-guide/serializers/#advanced-serializer-usage",target:"_blank",rel:"noopener noreferrer"}},[t._v("先进的序列化器用法"),s("OutboundLink")],1)]),t._v(" "),s("h2",{attrs:{id:"重写序列化和反序列化行为"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#重写序列化和反序列化行为"}},[t._v("#")]),t._v(" "),s("a",{attrs:{href:"https://www.django-rest-framework.org/api-guide/serializers/#overriding-serialization-and-deserialization-behavior",target:"_blank",rel:"noopener noreferrer"}},[t._v("重写序列化和反序列化行为"),s("OutboundLink")],1)]),t._v(" "),s("p",[t._v("如果需要更改序列化程序类的序列化或反序列化行为，则可以通过重写"),s("code",[t._v(".to_representation()")]),t._v("或"),s("code",[t._v(".to_internal_value()")]),t._v("方法来实现。")]),t._v(" "),s("p",[t._v("这可能有用的一些原因包括...")]),t._v(" "),s("ul",[s("li",[t._v("为新的序列化器基类添加新行为。")]),t._v(" "),s("li",[t._v("稍微修改现有类的行为。")]),t._v(" "),s("li",[t._v("提高返回大量数据的频繁访问的API端点的序列化性能。")])]),t._v(" "),s("p",[t._v("这些方法的签名如下：")]),t._v(" "),s("h4",{attrs:{id:"to-representation-self-instance"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#to-representation-self-instance"}},[t._v("#")]),t._v(" "),s("a",{attrs:{href:"https://www.django-rest-framework.org/api-guide/serializers/#to_representationself-instance",target:"_blank",rel:"noopener noreferrer"}},[s("code",[t._v(".to_representation(self, instance)")]),s("OutboundLink")],1)]),t._v(" "),s("p",[t._v("接受需要序列化的对象实例，并应返回原始表示形式。通常，这意味着返回内置Python数据类型的结构。可以处理的确切类型取决于您为API配置的渲染类。")]),t._v(" "),s("p",[t._v("可以重写以修改表示样式。例如：")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("to_representation")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" instance"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token triple-quoted-string string"}},[t._v('"""Convert `username` to lowercase."""')]),t._v("\n    ret "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("super")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("to_representation"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("instance"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    ret"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'username'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" ret"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'username'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("lower"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" ret\n")])])]),s("h4",{attrs:{id:"to-internal-value-self-data"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#to-internal-value-self-data"}},[t._v("#")]),t._v(" "),s("a",{attrs:{href:"https://www.django-rest-framework.org/api-guide/serializers/#to_internal_valueself-data",target:"_blank",rel:"noopener noreferrer"}},[s("code",[t._v(".to_internal_value(self, data)")]),s("OutboundLink")],1)]),t._v(" "),s("p",[t._v("将未经验证的传入数据作为输入，并应返回将以形式提供的经过验证的数据"),s("code",[t._v("serializer.validated_data")]),t._v("。如果在序列化程序类上被调用，则返回值还将传递给"),s("code",[t._v(".create()")]),t._v("or "),s("code",[t._v(".update()")]),t._v("方法"),s("code",[t._v(".save()")]),t._v("。")]),t._v(" "),s("p",[t._v("如果任何验证失败，则该方法应引发一个"),s("code",[t._v("serializers.ValidationError(errors)")]),t._v("。该"),s("code",[t._v("errors")]),t._v("参数应该是一个字典映射字段名称（或"),s("code",[t._v("settings.NON_FIELD_ERRORS_KEY")]),t._v("）到错误消息的列表。如果您不需要更改反序列化行为，而想要提供对象级验证，则建议您改写该"),s("a",{attrs:{href:"https://www.django-rest-framework.org/api-guide/serializers/#object-level-validation",target:"_blank",rel:"noopener noreferrer"}},[s("code",[t._v(".validate()")]),s("OutboundLink")],1),t._v("方法。")]),t._v(" "),s("p",[s("code",[t._v("data")]),t._v("传递给此方法的参数通常是的值"),s("code",[t._v("request.data")]),t._v("，因此它提供的数据类型将取决于您为API配置的解析器类。")]),t._v(" "),s("h2",{attrs:{id:"序列化器继承"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#序列化器继承"}},[t._v("#")]),t._v(" "),s("a",{attrs:{href:"https://www.django-rest-framework.org/api-guide/serializers/#serializer-inheritance",target:"_blank",rel:"noopener noreferrer"}},[t._v("序列化器继承"),s("OutboundLink")],1)]),t._v(" "),s("p",[t._v("与Django表单类似，您可以通过继承扩展和重用序列化器。这使您可以在父类上声明一组通用的字段或方法，然后可以在许多序列化程序中使用它们。例如，")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MyBaseSerializer")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Serializer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    my_field "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" serializers"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("CharField"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("validate_my_field")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" value"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MySerializer")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("MyBaseSerializer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n")])])]),s("p",[t._v("像Django的"),s("code",[t._v("Model")]),t._v("和"),s("code",[t._v("ModelForm")]),t._v("类一样，"),s("code",[t._v("Meta")]),t._v("序列化程序上的内部类不会隐式继承其父级的内部"),s("code",[t._v("Meta")]),t._v("类。如果要让"),s("code",[t._v("Meta")]),t._v("该类从父类继承，则必须明确地这样做。例如：")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("AccountSerializer")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("MyBaseSerializer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Meta")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("MyBaseSerializer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Meta"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        model "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Account\n")])])]),s("p",[t._v("通常，我们建议"),s("em",[t._v("不要")]),t._v("在内部Meta类上使用继承，而应显式声明所有选项。")]),t._v(" "),s("p",[t._v("此外，以下警告适用于序列化程序继承：")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("正常的Python名称解析规则适用。如果您有多个声明"),s("code",[t._v("Meta")]),t._v("内部类的基类，则仅使用第一个基类。这意味着孩子的"),s("code",[t._v("Meta")]),t._v("（如果存在），否则"),s("code",[t._v("Meta")]),t._v("是第一位父母的孩子，等等。")])]),t._v(" "),s("li",[s("p",[s("code",[t._v("Field")]),t._v("通过将名称设置为子类，可以声明性地删除从父类继承的继承"),s("code",[t._v("None")]),t._v("。")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MyBaseSerializer")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ModelSerializer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    my_field "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" serializers"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("CharField"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MySerializer")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("MyBaseSerializer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    my_field "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("None")]),t._v("\n")])])]),s("p",[t._v("但是，您只能使用此技术来退出由父类声明性定义的字段；它不会阻止"),s("code",[t._v("ModelSerializer")]),t._v("生成默认字段。要退出默认字段，请参见"),s("a",{attrs:{href:"https://www.django-rest-framework.org/api-guide/serializers/#specifying-which-fields-to-include",target:"_blank",rel:"noopener noreferrer"}},[t._v("指定要包括的字段"),s("OutboundLink")],1),t._v("。")])])]),t._v(" "),s("h2",{attrs:{id:"动态修改字段"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#动态修改字段"}},[t._v("#")]),t._v(" "),s("a",{attrs:{href:"https://www.django-rest-framework.org/api-guide/serializers/#dynamically-modifying-fields",target:"_blank",rel:"noopener noreferrer"}},[t._v("动态修改字段"),s("OutboundLink")],1)]),t._v(" "),s("p",[t._v("初始化序列化程序后，可以使用"),s("code",[t._v(".fields")]),t._v("属性访问序列化程序上设置的字段的字典。访问和修改此属性使您可以动态修改序列化程序。")]),t._v(" "),s("p",[s("code",[t._v("fields")]),t._v("直接修改参数使您可以做一些有趣的事情，例如在运行时更改序列化程序字段上的参数，而不是在声明序列化程序时。")]),t._v(" "),s("h3",{attrs:{id:"例"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#例"}},[t._v("#")]),t._v(" "),s("a",{attrs:{href:"https://www.django-rest-framework.org/api-guide/serializers/#example",target:"_blank",rel:"noopener noreferrer"}},[t._v("例"),s("OutboundLink")],1)]),t._v(" "),s("p",[t._v("例如，如果您希望能够在初始化时设置序列化程序应使用的字段，则可以创建一个序列化程序类，如下所示：")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("DynamicFieldsModelSerializer")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("serializers"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ModelSerializer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token triple-quoted-string string"}},[t._v('"""\n    A ModelSerializer that takes an additional `fields` argument that\n    controls which fields should be displayed.\n    """')]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("__init__")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("args"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("**")]),t._v("kwargs"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Don't pass the 'fields' arg up to the superclass")]),t._v("\n        fields "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" kwargs"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("pop"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'fields'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("None")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Instantiate the superclass normally")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("super")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("DynamicFieldsModelSerializer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("__init__"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("args"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("**")]),t._v("kwargs"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" fields "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("is")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("not")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("None")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Drop any fields that are not specified in the `fields` argument.")]),t._v("\n            allowed "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("set")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("fields"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n            existing "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("set")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("fields"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" field_name "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" existing "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" allowed"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n                self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("fields"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("pop"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("field_name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("p",[t._v("然后，您可以执行以下操作：")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("UserSerializer")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("DynamicFieldsModelSerializer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("     "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Meta")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("         model "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" User\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("         fields "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'id'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'username'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'email'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("UserSerializer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("user"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'id'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'username'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'jonwatts'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'email'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'jon@example.com'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("UserSerializer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("user"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" fields"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'id'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'email'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'id'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'email'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'jon@example.com'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h2",{attrs:{id:"自定义默认字段"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#自定义默认字段"}},[t._v("#")]),t._v(" "),s("a",{attrs:{href:"https://www.django-rest-framework.org/api-guide/serializers/#customizing-the-default-fields",target:"_blank",rel:"noopener noreferrer"}},[t._v("自定义默认字段"),s("OutboundLink")],1)]),t._v(" "),s("p",[t._v("REST框架2提供了一个API，允许开发人员覆盖"),s("code",[t._v("ModelSerializer")]),t._v("类如何自动生成默认字段集的方式。")]),t._v(" "),s("p",[t._v("该API包括"),s("code",[t._v(".get_field()")]),t._v("，"),s("code",[t._v(".get_pk_field()")]),t._v("和其他方法。")]),t._v(" "),s("p",[t._v("由于串行器已经从3.0进行了重新设计，因此该API不再存在。您仍然可以修改创建的字段，但是需要参考源代码，并且要注意，如果所做的更改是针对API的私有位的，则它们可能会发生变化。")]),t._v(" "),s("hr"),t._v(" "),s("h1",{attrs:{id:"第三方软件包"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#第三方软件包"}},[t._v("#")]),t._v(" "),s("a",{attrs:{href:"https://www.django-rest-framework.org/api-guide/serializers/#third-party-packages",target:"_blank",rel:"noopener noreferrer"}},[t._v("第三方软件包"),s("OutboundLink")],1)]),t._v(" "),s("p",[t._v("以下第三方软件包也可用。")]),t._v(" "),s("h2",{attrs:{id:"django-rest-marshmallow"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#django-rest-marshmallow"}},[t._v("#")]),t._v(" "),s("a",{attrs:{href:"https://www.django-rest-framework.org/api-guide/serializers/#django-rest-marshmallow",target:"_blank",rel:"noopener noreferrer"}},[t._v("Django REST marshmallow"),s("OutboundLink")],1)]),t._v(" "),s("p",[s("code",[t._v("django rest marshmallow")]),t._v("包使用"),s("code",[t._v("python marshmallow")]),t._v("库为序列化程序提供了另一种实现。它公开了与REST框架序列化程序相同的API，并且可以在某些用例中用作"),s("code",[t._v("drop-in")]),t._v("替换。")]),t._v(" "),s("h2",{attrs:{id:"serpy"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#serpy"}},[t._v("#")]),t._v(" "),s("a",{attrs:{href:"https://www.django-rest-framework.org/api-guide/serializers/#serpy",target:"_blank",rel:"noopener noreferrer"}},[t._v("Serpy"),s("OutboundLink")],1)]),t._v(" "),s("p",[t._v("该"),s("a",{attrs:{href:"https://github.com/clarkduvall/serpy",target:"_blank",rel:"noopener noreferrer"}},[t._v("serpy"),s("OutboundLink")],1),t._v("包是是为速度而序列化的另一种实现。"),s("a",{attrs:{href:"https://github.com/clarkduvall/serpy",target:"_blank",rel:"noopener noreferrer"}},[t._v("Serpy"),s("OutboundLink")],1),t._v("将复杂的数据类型序列化为简单的本机类型。可以将本机类型轻松转换为JSON或所需的任何其他格式。")]),t._v(" "),s("h2",{attrs:{id:"mongoenginemodelserializer"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#mongoenginemodelserializer"}},[t._v("#")]),t._v(" "),s("a",{attrs:{href:"https://www.django-rest-framework.org/api-guide/serializers/#mongoenginemodelserializer",target:"_blank",rel:"noopener noreferrer"}},[t._v("MongoengineModelSerializer"),s("OutboundLink")],1)]),t._v(" "),s("p",[s("code",[t._v("django rest framework mongoengine")]),t._v("包提供了一个"),s("code",[t._v("MongoEngineModelSerializer")]),t._v("序列化器类，该类支持使用"),s("code",[t._v("MongoDB")]),t._v("作为"),s("code",[t._v("django rest framework")]),t._v("的存储层。")]),t._v(" "),s("h2",{attrs:{id:"geofeaturemodelserializer"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#geofeaturemodelserializer"}},[t._v("#")]),t._v(" "),s("a",{attrs:{href:"https://www.django-rest-framework.org/api-guide/serializers/#geofeaturemodelserializer",target:"_blank",rel:"noopener noreferrer"}},[t._v("GeoFeatureModelSerializer"),s("OutboundLink")],1)]),t._v(" "),s("p",[s("code",[t._v("django rest framework gis")]),t._v("包提供了一个"),s("code",[t._v("GeoFeatureModelSerialize")]),t._v("r序列化器类，该类支持"),s("code",[t._v("GeoJSON")]),t._v("的读写操作。")]),t._v(" "),s("h2",{attrs:{id:"hstoreserializer"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#hstoreserializer"}},[t._v("#")]),t._v(" "),s("a",{attrs:{href:"https://www.django-rest-framework.org/api-guide/serializers/#hstoreserializer",target:"_blank",rel:"noopener noreferrer"}},[t._v("HStoreSerializer"),s("OutboundLink")],1)]),t._v(" "),s("p",[s("code",[t._v("django rest framework hstore")]),t._v("包提供了一个"),s("code",[t._v("HStoreSerializer")]),t._v("来支持"),s("code",[t._v("django hstore DictionaryField model")]),t._v("字段及其模式特性。")]),t._v(" "),s("h2",{attrs:{id:"dynamic-rest"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#dynamic-rest"}},[t._v("#")]),t._v(" "),s("a",{attrs:{href:"https://www.django-rest-framework.org/api-guide/serializers/#dynamic-rest",target:"_blank",rel:"noopener noreferrer"}},[t._v("Dynamic REST"),s("OutboundLink")],1)]),t._v(" "),s("p",[s("code",[t._v("dynamic-rest")]),t._v("包扩展了"),s("code",[t._v("ModelSerializer")]),t._v("和"),s("code",[t._v("ModelViewSet")]),t._v("接口，添加了API查询参数，用于筛选、排序和包含/排除序列化程序定义的所有字段和关系。")]),t._v(" "),s("h2",{attrs:{id:"dynamic-fields-mixin"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#dynamic-fields-mixin"}},[t._v("#")]),t._v(" "),s("a",{attrs:{href:"https://www.django-rest-framework.org/api-guide/serializers/#dynamic-fields-mixin",target:"_blank",rel:"noopener noreferrer"}},[t._v("Dynamic Fields Mixin"),s("OutboundLink")],1)]),t._v(" "),s("p",[s("a",{attrs:{href:"https://github.com/dbrgn/drf-dynamic-fields",target:"_blank",rel:"noopener noreferrer"}},[t._v("drf-dynamic-fields"),s("OutboundLink")],1),t._v("包提供一个混合动态地限制每个串行化器中的字段由一个URL参数指定的子集。")]),t._v(" "),s("h2",{attrs:{id:"drf-flexfields"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#drf-flexfields"}},[t._v("#")]),t._v(" "),s("a",{attrs:{href:"https://www.django-rest-framework.org/api-guide/serializers/#drf-flexfields",target:"_blank",rel:"noopener noreferrer"}},[t._v("DRF FlexFields"),s("OutboundLink")],1)]),t._v(" "),s("p",[t._v("该"),s("a",{attrs:{href:"https://github.com/rsinger86/drf-flex-fields",target:"_blank",rel:"noopener noreferrer"}},[t._v("drf-flex-fields"),s("OutboundLink")],1),t._v("包扩展"),s("code",[t._v("ModelSerializer")]),t._v("和"),s("code",[t._v("ModelViewSet")]),t._v("以动态设置字段和扩大原始字段嵌套模型，无论是从URL参数和您的序列化器类定义提供了常用的功能。")]),t._v(" "),s("h2",{attrs:{id:"serializer-extensions"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#serializer-extensions"}},[t._v("#")]),t._v(" "),s("a",{attrs:{href:"https://www.django-rest-framework.org/api-guide/serializers/#serializer-extensions",target:"_blank",rel:"noopener noreferrer"}},[t._v("Serializer Extensions"),s("OutboundLink")],1)]),t._v(" "),s("p",[t._v("在 "),s("a",{attrs:{href:"https://github.com/evenicoulddoit/django-rest-framework-serializer-extensions",target:"_blank",rel:"noopener noreferrer"}},[t._v("django-rest-framework-serializer-extensions"),s("OutboundLink")],1),t._v("包提供的工具集，干涸的序列化，通过允许在每个视图/请求的基础定义的字段。可以将字段列入白名单，列入黑名单，并且可以选择扩展子序列化程序。")]),t._v(" "),s("h2",{attrs:{id:"html-json-forms"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#html-json-forms"}},[t._v("#")]),t._v(" "),s("a",{attrs:{href:"https://www.django-rest-framework.org/api-guide/serializers/#html-json-forms",target:"_blank",rel:"noopener noreferrer"}},[t._v("HTML JSON Forms"),s("OutboundLink")],1)]),t._v(" "),s("p",[t._v("的"),s("a",{attrs:{href:"https://github.com/wq/html-json-forms",target:"_blank",rel:"noopener noreferrer"}},[t._v("html-json-forms"),s("OutboundLink")],1),t._v(" 包提供了用于处理的算法并串行"),s("code",[t._v("每（不活动）提交[HTML表格JSON规范](https://www.w3.org/TR/html-json-forms/)。序列化程序有助于处理HTML中任意嵌套的JSON结构。例如，")]),t._v("将被解释为"),s("code",[t._v('{"items": [{"id": "5"}]}')]),t._v("。")]),t._v(" "),s("h2",{attrs:{id:"drf-base64"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#drf-base64"}},[t._v("#")]),t._v(" "),s("a",{attrs:{href:"https://www.django-rest-framework.org/api-guide/serializers/#drf-base64",target:"_blank",rel:"noopener noreferrer"}},[t._v("DRF-Base64"),s("OutboundLink")],1)]),t._v(" "),s("p",[s("a",{attrs:{href:"https://bitbucket.org/levit_scs/drf_base64",target:"_blank",rel:"noopener noreferrer"}},[t._v("DRF-Base64"),s("OutboundLink")],1),t._v("提供了一组字段和模型序列化程序，用于处理以base64编码的文件的上载。")]),t._v(" "),s("h2",{attrs:{id:"queryfields"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#queryfields"}},[t._v("#")]),t._v(" "),s("a",{attrs:{href:"https://www.django-rest-framework.org/api-guide/serializers/#queryfields",target:"_blank",rel:"noopener noreferrer"}},[t._v("QueryFields"),s("OutboundLink")],1)]),t._v(" "),s("p",[s("a",{attrs:{href:"https://djangorestframework-queryfields.readthedocs.io/",target:"_blank",rel:"noopener noreferrer"}},[t._v("djangorestframework-queryfields"),s("OutboundLink")],1),t._v("允许API客户端指定通过包含/排除查询参数在响应中发送哪些字段。")]),t._v(" "),s("h2",{attrs:{id:"drf-writable-nested"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#drf-writable-nested"}},[t._v("#")]),t._v(" "),s("a",{attrs:{href:"https://www.django-rest-framework.org/api-guide/serializers/#drf-writable-nested",target:"_blank",rel:"noopener noreferrer"}},[t._v("DRF Writable Nested"),s("OutboundLink")],1)]),t._v(" "),s("p",[t._v("的"),s("a",{attrs:{href:"https://github.com/beda-software/drf-writable-nested",target:"_blank",rel:"noopener noreferrer"}},[t._v("drf-writable-nested"),s("OutboundLink")],1),t._v(" 包提供可写的嵌套模型序列化器，它允许创建具有嵌套相关数据/更新的模型。")])])}),[],!1,null,null,null);a.default=n.exports}}]);