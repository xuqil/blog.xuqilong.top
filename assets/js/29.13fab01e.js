(window.webpackJsonp=window.webpackJsonp||[]).push([[29],{413:function(t,s,a){"use strict";a.r(s);var e=a(11),r=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"筛选"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#筛选"}},[t._v("#")]),t._v(" "),a("a",{attrs:{href:"https://www.django-rest-framework.org/api-guide/filtering/#filtering",target:"_blank",rel:"noopener noreferrer"}},[t._v("筛选"),a("OutboundLink")],1)]),t._v(" "),a("blockquote",[a("p",[t._v("Manager提供的根QuerySet描述了数据库表中的所有对象。通常，尽管如此，您只需要选择完整对象集的一个子集。")]),t._v(" "),a("p",[t._v("— "),a("a",{attrs:{href:"https://docs.djangoproject.com/en/stable/topics/db/queries/#retrieving-specific-objects-with-filters",target:"_blank",rel:"noopener noreferrer"}},[t._v("Django文档"),a("OutboundLink")],1)])]),t._v(" "),a("p",[t._v("REST框架的通用列表视图的默认行为是返回模型管理器的整个查询集。通常，您会希望您的API限制查询集返回的项目。")]),t._v(" "),a("p",[t._v("筛选子类的任何视图的查询集的最简单方法"),a("code",[t._v("GenericAPIView")]),t._v("是覆盖该"),a("code",[t._v(".get_queryset()")]),t._v("方法。")]),t._v(" "),a("p",[t._v("通过覆盖此方法，您可以通过多种不同方式自定义视图返回的查询集。")]),t._v(" "),a("h2",{attrs:{id:"针对当前用户进行过滤"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#针对当前用户进行过滤"}},[t._v("#")]),t._v(" "),a("a",{attrs:{href:"https://www.django-rest-framework.org/api-guide/filtering/#filtering-against-the-current-user",target:"_blank",rel:"noopener noreferrer"}},[t._v("针对当前用户进行过滤"),a("OutboundLink")],1)]),t._v(" "),a("p",[t._v("您可能希望过滤查询集以确保仅返回与发出请求的当前经过身份验证的用户有关的结果。")]),t._v(" "),a("p",[t._v("您可以根据的值进行过滤"),a("code",[t._v("request.user")]),t._v("。")]),t._v(" "),a("p",[t._v("例如：")]),t._v(" "),a("div",{staticClass:"language-python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" myapp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("models "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" Purchase\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" myapp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("serializers "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" PurchaseSerializer\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" rest_framework "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" generics\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("PurchaseList")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("generics"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ListAPIView"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    serializer_class "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" PurchaseSerializer\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("get_queryset")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token triple-quoted-string string"}},[t._v('"""\n        This view should return a list of all the purchases\n        for the currently authenticated user.\n        """')]),t._v("\n        user "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" self"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("request"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("user\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" Purchase"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("objects"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("filter")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("purchaser"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("user"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("h2",{attrs:{id:"根据网址过滤"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#根据网址过滤"}},[t._v("#")]),t._v(" "),a("a",{attrs:{href:"https://www.django-rest-framework.org/api-guide/filtering/#filtering-against-the-url",target:"_blank",rel:"noopener noreferrer"}},[t._v("根据网址过滤"),a("OutboundLink")],1)]),t._v(" "),a("p",[t._v("另一种过滤方式可能涉及基于URL的某些部分限制查询集。")]),t._v(" "),a("p",[t._v("例如，如果您的URL配置包含这样的条目：")]),t._v(" "),a("div",{staticClass:"language-python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[t._v("url"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'^purchases/(?P<username>.+)/$'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" PurchaseList"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("as_view"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n")])])]),a("p",[t._v("然后，您可以编写一个视图，该视图返回按URL的用户名部分过滤的购买查询集：")]),t._v(" "),a("div",{staticClass:"language-python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("PurchaseList")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("generics"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ListAPIView"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    serializer_class "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" PurchaseSerializer\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("get_queryset")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token triple-quoted-string string"}},[t._v('"""\n        This view should return a list of all the purchases for\n        the user as determined by the username portion of the URL.\n        """')]),t._v("\n        username "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" self"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("kwargs"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'username'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" Purchase"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("objects"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("filter")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("purchaser__username"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("username"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("h2",{attrs:{id:"根据查询参数过滤"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#根据查询参数过滤"}},[t._v("#")]),t._v(" "),a("a",{attrs:{href:"https://www.django-rest-framework.org/api-guide/filtering/#filtering-against-query-parameters",target:"_blank",rel:"noopener noreferrer"}},[t._v("根据查询参数过滤"),a("OutboundLink")],1)]),t._v(" "),a("p",[t._v("过滤初始查询集的最后一个示例是根据url中的查询参数确定初始查询集。")]),t._v(" "),a("p",[t._v("我们可以重写"),a("code",[t._v(".get_queryset()")]),t._v("以处理诸如的URL "),a("code",[t._v("http://example.com/api/purchases?username=denvercoder9")]),t._v("，仅"),a("code",[t._v("username")]),t._v("在URL中包含参数时才过滤查询集：")]),t._v(" "),a("div",{staticClass:"language-python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("PurchaseList")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("generics"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ListAPIView"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    serializer_class "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" PurchaseSerializer\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("get_queryset")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token triple-quoted-string string"}},[t._v('"""\n        Optionally restricts the returned purchases to a given user,\n        by filtering against a `username` query parameter in the URL.\n        """')]),t._v("\n        queryset "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Purchase"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("objects"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("all")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        username "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" self"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("request"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("query_params"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("get"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'username'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("None")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" username "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("is")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("not")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("None")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            queryset "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" queryset"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("filter")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("purchaser__username"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("username"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" queryset\n")])])]),a("hr"),t._v(" "),a("h1",{attrs:{id:"通用过滤"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#通用过滤"}},[t._v("#")]),t._v(" "),a("a",{attrs:{href:"https://www.django-rest-framework.org/api-guide/filtering/#generic-filtering",target:"_blank",rel:"noopener noreferrer"}},[t._v("通用过滤"),a("OutboundLink")],1)]),t._v(" "),a("p",[t._v("REST框架不仅可以覆盖默认查询集，而且还支持通用过滤后端，使您可以轻松构建复杂的搜索和过滤器。")]),t._v(" "),a("p",[t._v("通用过滤器还可以将自己显示为可浏览API和admin API中的HTML控件。")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://www.django-rest-framework.org/img/filter-controls.png",alt:"筛选范例"}})]),t._v(" "),a("h2",{attrs:{id:"设置过滤器后端"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#设置过滤器后端"}},[t._v("#")]),t._v(" "),a("a",{attrs:{href:"https://www.django-rest-framework.org/api-guide/filtering/#setting-filter-backends",target:"_blank",rel:"noopener noreferrer"}},[t._v("设置过滤器后端"),a("OutboundLink")],1)]),t._v(" "),a("p",[t._v("可以使用该"),a("code",[t._v("DEFAULT_FILTER_BACKENDS")]),t._v("设置全局设置默认过滤器后端。例如。")]),t._v(" "),a("div",{staticClass:"language-python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[t._v("REST_FRAMEWORK "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'DEFAULT_FILTER_BACKENDS'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'django_filters.rest_framework.DjangoFilterBackend'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("您还可以使用"),a("code",[t._v("GenericAPIView")]),t._v("基于类的视图基于每个视图或每个视图集设置过滤器后端。")]),t._v(" "),a("div",{staticClass:"language-python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" django_filters"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("rest_framework\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" django"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("contrib"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("auth"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("models "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" User\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" myapp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("serializers "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" UserSerializer\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" rest_framework "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" generics\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("UserListView")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("generics"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ListAPIView"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    queryset "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" User"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("objects"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("all")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    serializer_class "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" UserSerializer\n    filter_backends "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("django_filters"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("rest_framework"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("DjangoFilterBackend"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])])]),a("h2",{attrs:{id:"过滤和对象查找"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#过滤和对象查找"}},[t._v("#")]),t._v(" "),a("a",{attrs:{href:"https://www.django-rest-framework.org/api-guide/filtering/#filtering-and-object-lookups",target:"_blank",rel:"noopener noreferrer"}},[t._v("过滤和对象查找"),a("OutboundLink")],1)]),t._v(" "),a("p",[t._v("请注意，如果为视图配置了过滤器后端，则该过滤器后端不仅用于过滤列表视图，还将用于过滤用于返回单个对象的查询集。")]),t._v(" "),a("p",[t._v("例如，给定前面的示例以及id为的产品"),a("code",[t._v("4675")]),t._v("，以下URL将返回相应的对象或返回404响应，具体取决于给定产品实例是否满足过滤条件：")]),t._v(" "),a("div",{staticClass:"language-python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[t._v("http"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("//")]),t._v("example"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("com"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("api"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("products"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4675")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("?category"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("clothing"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("max_price"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10.00")]),t._v("\n")])])]),a("h2",{attrs:{id:"覆盖初始查询集"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#覆盖初始查询集"}},[t._v("#")]),t._v(" "),a("a",{attrs:{href:"https://www.django-rest-framework.org/api-guide/filtering/#overriding-the-initial-queryset",target:"_blank",rel:"noopener noreferrer"}},[t._v("覆盖初始查询集"),a("OutboundLink")],1)]),t._v(" "),a("p",[t._v("请注意，您可以同时使用覆盖"),a("code",[t._v(".get_queryset()")]),t._v("过滤和通用过滤，一切都会按预期进行。例如，如果"),a("code",[t._v("Product")]),t._v("与"),a("code",[t._v("User")]),t._v("名为的多对多关系"),a("code",[t._v("purchase")]),t._v("，则可能需要编写如下视图：")]),t._v(" "),a("div",{staticClass:"language-python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("PurchasedProductsList")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("generics"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ListAPIView"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token triple-quoted-string string"}},[t._v('"""\n    Return a list of all the products that the authenticated\n    user has ever purchased, with optional filtering.\n    """')]),t._v("\n    model "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Product\n    serializer_class "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" ProductSerializer\n    filterset_class "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" ProductFilter\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("get_queryset")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        user "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" self"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("request"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("user\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" user"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("purchase_set"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("all")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("hr"),t._v(" "),a("h1",{attrs:{id:"api指南"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#api指南"}},[t._v("#")]),t._v(" "),a("a",{attrs:{href:"https://www.django-rest-framework.org/api-guide/filtering/#api-guide",target:"_blank",rel:"noopener noreferrer"}},[t._v("API指南"),a("OutboundLink")],1)]),t._v(" "),a("h2",{attrs:{id:"djangofilterbackend"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#djangofilterbackend"}},[t._v("#")]),t._v(" "),a("a",{attrs:{href:"https://www.django-rest-framework.org/api-guide/filtering/#djangofilterbackend",target:"_blank",rel:"noopener noreferrer"}},[t._v("DjangoFilterBackend"),a("OutboundLink")],1)]),t._v(" "),a("p",[t._v("该"),a("a",{attrs:{href:"https://django-filter.readthedocs.io/en/latest/index.html",target:"_blank",rel:"noopener noreferrer"}},[a("code",[t._v("django-filter")]),a("OutboundLink")],1),t._v("库包含一个"),a("code",[t._v("DjangoFilterBackend")]),t._v("类，该类支持针对REST框架的高度可自定义的字段筛选。")]),t._v(" "),a("p",[t._v("要使用"),a("code",[t._v("DjangoFilterBackend")]),t._v("，请先安装"),a("code",[t._v("django-filter")]),t._v("。然后添加"),a("code",[t._v("django_filters")]),t._v("到Django的"),a("code",[t._v("INSTALLED_APPS")])]),t._v(" "),a("div",{staticClass:"language-python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[t._v("pip install django"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("filter")]),t._v("\n")])])]),a("p",[t._v("现在，您应该将过滤器后端添加到您的设置中：")]),t._v(" "),a("div",{staticClass:"language-python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[t._v("REST_FRAMEWORK "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'DEFAULT_FILTER_BACKENDS'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'django_filters.rest_framework.DjangoFilterBackend'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("或将过滤器后端添加到单个View或ViewSet。")]),t._v(" "),a("div",{staticClass:"language-python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" django_filters"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("rest_framework "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" DjangoFilterBackend\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("UserListView")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("generics"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ListAPIView"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n    filter_backends "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("DjangoFilterBackend"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])])]),a("p",[t._v("如果只需要简单的基于等式的过滤，则可以"),a("code",[t._v("filterset_fields")]),t._v("在视图或视图集上设置一个属性，列出要过滤的字段集。")]),t._v(" "),a("div",{staticClass:"language-python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ProductList")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("generics"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ListAPIView"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    queryset "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Product"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("objects"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("all")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    serializer_class "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" ProductSerializer\n    filter_backends "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("DjangoFilterBackend"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n    filterset_fields "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'category'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'in_stock'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])])]),a("p",[t._v("这将自动"),a("code",[t._v("FilterSet")]),t._v("为给定的字段创建一个类，并允许您发出如下请求：")]),t._v(" "),a("div",{staticClass:"language-python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[t._v("http"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("//")]),t._v("example"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("com"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("api"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("products?category"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("clothing"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("in_stock"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("True")]),t._v("\n")])])]),a("p",[t._v("对于更高级的过滤要求，您可以指定"),a("code",[t._v("FilterSet")]),t._v("视图应使用的类。您可以"),a("code",[t._v("FilterSet")]),t._v("在"),a("a",{attrs:{href:"https://django-filter.readthedocs.io/en/latest/index.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("django-filter文档中"),a("OutboundLink")],1),t._v("阅读有关的更多信息。还建议您阅读有关"),a("a",{attrs:{href:"https://django-filter.readthedocs.io/en/latest/guide/rest_framework.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("DRF集成"),a("OutboundLink")],1),t._v("的部分。")]),t._v(" "),a("h2",{attrs:{id:"searchfilter"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#searchfilter"}},[t._v("#")]),t._v(" "),a("a",{attrs:{href:"https://www.django-rest-framework.org/api-guide/filtering/#searchfilter",target:"_blank",rel:"noopener noreferrer"}},[t._v("SearchFilter"),a("OutboundLink")],1)]),t._v(" "),a("p",[t._v("该"),a("code",[t._v("SearchFilter")]),t._v("级支持简单单的查询参数基于搜索和基于该"),a("a",{attrs:{href:"https://docs.djangoproject.com/en/stable/ref/contrib/admin/#django.contrib.admin.ModelAdmin.search_fields",target:"_blank",rel:"noopener noreferrer"}},[t._v("admin界面的搜索功能"),a("OutboundLink")],1),t._v("。")]),t._v(" "),a("p",[t._v("使用时，可浏览的API将包含一个"),a("code",[t._v("SearchFilter")]),t._v("控件：")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://www.django-rest-framework.org/img/search-filter.png",alt:"搜索过滤器"}})]),t._v(" "),a("p",[t._v("所述"),a("code",[t._v("SearchFilter")]),t._v("如果视图有一类将只应用于"),a("code",[t._v("search_fields")]),t._v("属性集。该"),a("code",[t._v("search_fields")]),t._v("属性应该是模型上文本类型字段名称的列表，例如"),a("code",[t._v("CharField")]),t._v("或"),a("code",[t._v("TextField")]),t._v("。")]),t._v(" "),a("div",{staticClass:"language-python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" rest_framework "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" filters\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("UserListView")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("generics"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ListAPIView"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    queryset "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" User"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("objects"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("all")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    serializer_class "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" UserSerializer\n    filter_backends "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("filters"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("SearchFilter"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n    search_fields "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'username'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'email'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])])]),a("p",[t._v("这将允许客户端通过执行以下查询来过滤列表中的项目：")]),t._v(" "),a("div",{staticClass:"language-python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[t._v("http"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("//")]),t._v("example"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("com"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("api"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("users?search"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("russell\n")])])]),a("p",[t._v("您还可以使用查找API双下划线表示法在ForeignKey或ManyToManyField上执行相关查找：")]),t._v(" "),a("div",{staticClass:"language-python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[t._v("search_fields "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'username'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'email'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'profile__profession'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])])]),a("p",[t._v("默认情况下，搜索将使用不区分大小写的部分匹配。搜索参数可以包含多个搜索词，应将其用空格和/或逗号分隔。如果使用多个搜索词，则仅当所有提供的词都匹配时，对象才会在列表中返回。")]),t._v(" "),a("p",[t._v("可以通过在前面加上各种字符来限制搜索行为"),a("code",[t._v("search_fields")]),t._v("。")]),t._v(" "),a("ul",[a("li",[t._v("'^'开始搜索。")]),t._v(" "),a("li",[t._v("'='完全匹配。")]),t._v(" "),a("li",[t._v("'@'全文搜索。（当前仅支持Django的MySQL后端。）")]),t._v(" "),a("li",[t._v("'$'正则表达式搜索。")])]),t._v(" "),a("p",[t._v("例如：")]),t._v(" "),a("div",{staticClass:"language-python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[t._v("search_fields "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'=username'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'=email'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])])]),a("p",[t._v("默认情况下，搜索参数名为"),a("code",[t._v("'search'")]),t._v("，但是此参数可能会被"),a("code",[t._v("SEARCH_PARAM")]),t._v("设置覆盖。")]),t._v(" "),a("p",[t._v("要根据请求内容动态更改搜索字段，可以对进行子类化"),a("code",[t._v("SearchFilter")]),t._v("并覆盖该"),a("code",[t._v("get_search_fields()")]),t._v("函数。例如，以下子类仅"),a("code",[t._v("title")]),t._v("在查询参数"),a("code",[t._v("title_only")]),t._v("在请求中时才搜索：")]),t._v(" "),a("div",{staticClass:"language-python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" rest_framework "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" filters\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("CustomSearchFilter")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("filters"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("SearchFilter"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("get_search_fields")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" view"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" request"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" request"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("query_params"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("get"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'title_only'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'title'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("super")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("CustomSearchFilter"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" self"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("get_search_fields"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("view"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" request"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("有关更多详细信息，请参见"),a("a",{attrs:{href:"https://docs.djangoproject.com/en/stable/ref/contrib/admin/#django.contrib.admin.ModelAdmin.search_fields",target:"_blank",rel:"noopener noreferrer"}},[t._v("Django文档"),a("OutboundLink")],1),t._v("。")]),t._v(" "),a("hr"),t._v(" "),a("h2",{attrs:{id:"订购过滤器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#订购过滤器"}},[t._v("#")]),t._v(" "),a("a",{attrs:{href:"https://www.django-rest-framework.org/api-guide/filtering/#orderingfilter",target:"_blank",rel:"noopener noreferrer"}},[t._v("订购过滤器"),a("OutboundLink")],1)]),t._v(" "),a("p",[t._v("本"),a("code",[t._v("OrderingFilter")]),t._v("类支持的结果简单的查询参数进行控制顺序。")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://www.django-rest-framework.org/img/ordering-filter.png",alt:"订购过滤器"}})]),t._v(" "),a("p",[t._v("默认情况下，查询参数名为"),a("code",[t._v("'ordering'")]),t._v("，但这可以被"),a("code",[t._v("ORDERING_PARAM")]),t._v("设置覆盖。")]),t._v(" "),a("p",[t._v("例如，按用户名订购用户：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("http://example.com/api/users?ordering=username\n")])])]),a("p",[t._v("客户端还可以通过在字段名称前添加“-”来指定相反的顺序，如下所示：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("http://example.com/api/users?ordering=-username\n")])])]),a("p",[t._v("也可以指定多个顺序：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("http://example.com/api/users?ordering=account,username\n")])])]),a("h3",{attrs:{id:"指定可以针对哪些字段进行排序"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#指定可以针对哪些字段进行排序"}},[t._v("#")]),t._v(" "),a("a",{attrs:{href:"https://www.django-rest-framework.org/api-guide/filtering/#specifying-which-fields-may-be-ordered-against",target:"_blank",rel:"noopener noreferrer"}},[t._v("指定可以针对哪些字段进行排序"),a("OutboundLink")],1)]),t._v(" "),a("p",[t._v("建议您明确指定API应在排序过滤器中允许的字段。您可以通过"),a("code",[t._v("ordering_fields")]),t._v("在视图上设置属性来做到这一点，如下所示：")]),t._v(" "),a("div",{staticClass:"language-python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("UserListView")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("generics"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ListAPIView"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    queryset "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" User"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("objects"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("all")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    serializer_class "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" UserSerializer\n    filter_backends "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("filters"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("OrderingFilter"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n    ordering_fields "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'username'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'email'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])])]),a("p",[t._v("这有助于防止意外的数据泄漏，例如允许用户针对密码哈希字段或其他敏感数据进行排序。")]),t._v(" "),a("p",[t._v("如果"),a("em",[t._v("未")]),a("code",[t._v("ordering_fields")]),t._v("在视图上指定属性，则过滤器类将默认为允许用户对由"),a("code",[t._v("serializer_class")]),t._v("属性指定的序列化器上的任何可读字段进行过滤。")]),t._v(" "),a("p",[t._v("如果您确信该视图使用的查询集不包含任何敏感数据，则还可以通过使用special值明确指定一个视图应允许对"),a("em",[t._v("任何")]),t._v("模型字段或查询集集合进行排序"),a("code",[t._v("'__all__'")]),t._v("。")]),t._v(" "),a("div",{staticClass:"language-python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("BookingsListView")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("generics"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ListAPIView"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    queryset "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Booking"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("objects"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("all")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    serializer_class "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" BookingSerializer\n    filter_backends "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("filters"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("OrderingFilter"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n    ordering_fields "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'__all__'")]),t._v("\n")])])]),a("h3",{attrs:{id:"指定默认顺序"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#指定默认顺序"}},[t._v("#")]),t._v(" "),a("a",{attrs:{href:"https://www.django-rest-framework.org/api-guide/filtering/#specifying-a-default-ordering",target:"_blank",rel:"noopener noreferrer"}},[t._v("指定默认顺序"),a("OutboundLink")],1)]),t._v(" "),a("p",[t._v("如果"),a("code",[t._v("ordering")]),t._v("在视图上设置了属性，它将用作默认顺序。")]),t._v(" "),a("p",[t._v("通常，您可以通过"),a("code",[t._v("order_by")]),t._v("在初始查询集上进行设置来控制此操作，但是使用"),a("code",[t._v("ordering")]),t._v("视图上的参数可以指定顺序，然后将其作为上下文自动传递到呈现的模板。如果使用列标题对结果进行排序，则可以自动以不同的方式呈现列标题。")]),t._v(" "),a("div",{staticClass:"language-python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("UserListView")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("generics"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ListAPIView"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    queryset "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" User"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("objects"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("all")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    serializer_class "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" UserSerializer\n    filter_backends "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("filters"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("OrderingFilter"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n    ordering_fields "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'username'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'email'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n    ordering "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'username'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])])]),a("p",[t._v("该"),a("code",[t._v("ordering")]),t._v("属性可以是字符串，也可以是字符串列表/元组。")]),t._v(" "),a("hr"),t._v(" "),a("h1",{attrs:{id:"自定义通用过滤"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#自定义通用过滤"}},[t._v("#")]),t._v(" "),a("a",{attrs:{href:"https://www.django-rest-framework.org/api-guide/filtering/#custom-generic-filtering",target:"_blank",rel:"noopener noreferrer"}},[t._v("自定义通用过滤"),a("OutboundLink")],1)]),t._v(" "),a("p",[t._v("您还可以提供自己的通用过滤后端，或编写供其他开发人员使用的可安装应用。")]),t._v(" "),a("p",[t._v("为此，请重写"),a("code",[t._v("BaseFilterBackend")]),t._v("，并重写"),a("code",[t._v(".filter_queryset(self, request, queryset, view)")]),t._v("方法。该方法应返回一个经过过滤的新查询集。")]),t._v(" "),a("p",[t._v("除了允许客户端执行搜索和过滤外，通用过滤器后端对于限制对任何给定请求或用户应可见的对象也很有用。")]),t._v(" "),a("h2",{attrs:{id:"例"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#例"}},[t._v("#")]),t._v(" "),a("a",{attrs:{href:"https://www.django-rest-framework.org/api-guide/filtering/#example",target:"_blank",rel:"noopener noreferrer"}},[t._v("例"),a("OutboundLink")],1)]),t._v(" "),a("p",[t._v("例如，您可能需要限制用户只能看到他们创建的对象。")]),t._v(" "),a("div",{staticClass:"language-python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("IsOwnerFilterBackend")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("filters"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("BaseFilterBackend"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token triple-quoted-string string"}},[t._v('"""\n    Filter that only allows users to see their own objects.\n    """')]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("filter_queryset")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" request"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" queryset"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" view"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" queryset"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("filter")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("owner"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("request"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("user"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("我们可以通过覆盖"),a("code",[t._v("get_queryset()")]),t._v("视图来实现相同的行为，但是使用过滤器后端可以使您更轻松地将此限制添加到多个视图，或者将其应用于整个API。")]),t._v(" "),a("h2",{attrs:{id:"定制界面"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#定制界面"}},[t._v("#")]),t._v(" "),a("a",{attrs:{href:"https://www.django-rest-framework.org/api-guide/filtering/#customizing-the-interface",target:"_blank",rel:"noopener noreferrer"}},[t._v("定制界面"),a("OutboundLink")],1)]),t._v(" "),a("p",[t._v("通用过滤器也可以在可浏览的API中提供接口。为此，您应该实现一个"),a("code",[t._v("to_html()")]),t._v("方法，该方法返回过滤器的呈现的HTML表示形式。此方法应具有以下签名：")]),t._v(" "),a("div",{staticClass:"language-python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[t._v("to_html"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" request"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" queryset"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" view"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("该方法应返回呈现的HTML字符串。")]),t._v(" "),a("h2",{attrs:{id:"分页和模式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#分页和模式"}},[t._v("#")]),t._v(" "),a("a",{attrs:{href:"https://www.django-rest-framework.org/api-guide/filtering/#pagination-schemas",target:"_blank",rel:"noopener noreferrer"}},[t._v("分页和模式"),a("OutboundLink")],1)]),t._v(" "),a("p",[t._v("您还可以通过实现一种"),a("code",[t._v("get_schema_fields()")]),t._v("方法，使过滤器控件可用于REST框架提供的模式自动生成。此方法应具有以下签名：")]),t._v(" "),a("div",{staticClass:"language-python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[t._v("get_schema_fields"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" view"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("该方法应返回"),a("code",[t._v("coreapi.Field")]),t._v("实例列表。")]),t._v(" "),a("h1",{attrs:{id:"第三方套餐"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#第三方套餐"}},[t._v("#")]),t._v(" "),a("a",{attrs:{href:"https://www.django-rest-framework.org/api-guide/filtering/#third-party-packages",target:"_blank",rel:"noopener noreferrer"}},[t._v("第三方套餐"),a("OutboundLink")],1)]),t._v(" "),a("p",[t._v("以下第三方软件包提供了其他过滤器实现。")]),t._v(" "),a("h2",{attrs:{id:"django-rest框架过滤器软件包"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#django-rest框架过滤器软件包"}},[t._v("#")]),t._v(" "),a("a",{attrs:{href:"https://www.django-rest-framework.org/api-guide/filtering/#django-rest-framework-filters-package",target:"_blank",rel:"noopener noreferrer"}},[t._v("Django REST框架过滤器软件包"),a("OutboundLink")],1)]),t._v(" "),a("p",[t._v("在"),a("a",{attrs:{href:"https://github.com/philipn/django-rest-framework-filters",target:"_blank",rel:"noopener noreferrer"}},[t._v("Django的休息框架过滤器封装"),a("OutboundLink")],1),t._v("与一起工作"),a("code",[t._v("DjangoFilterBackend")]),t._v("类，并允许您轻松地在关系创建过滤器，或在指定字段创建多个过滤器查找类型。")]),t._v(" "),a("h2",{attrs:{id:"django-rest框架全字搜索过滤器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#django-rest框架全字搜索过滤器"}},[t._v("#")]),t._v(" "),a("a",{attrs:{href:"https://www.django-rest-framework.org/api-guide/filtering/#django-rest-framework-full-word-search-filter",target:"_blank",rel:"noopener noreferrer"}},[t._v("Django REST框架全字搜索过滤器"),a("OutboundLink")],1)]),t._v(" "),a("p",[t._v("该"),a("a",{attrs:{href:"https://github.com/trollknurr/django-rest-framework-word-search-filter",target:"_blank",rel:"noopener noreferrer"}},[t._v("djangorestframework词过滤"),a("OutboundLink")],1),t._v("开发作为替代品"),a("code",[t._v("filters.SearchFilter")]),t._v("，这将搜索文本完整的单词，或精确匹配。")]),t._v(" "),a("h2",{attrs:{id:"django-url过滤器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#django-url过滤器"}},[t._v("#")]),t._v(" "),a("a",{attrs:{href:"https://www.django-rest-framework.org/api-guide/filtering/#django-url-filter",target:"_blank",rel:"noopener noreferrer"}},[t._v("Django URL过滤器"),a("OutboundLink")],1)]),t._v(" "),a("p",[a("a",{attrs:{href:"https://github.com/miki725/django-url-filter",target:"_blank",rel:"noopener noreferrer"}},[t._v("django-url-filter"),a("OutboundLink")],1),t._v("提供了一种通过人类友好的URL过滤数据的安全方法。从某种意义上说，它可以嵌套，除了它们称为过滤器集和过滤器外，它的工作方式与DRF序列化器和字段非常相似。这提供了过滤相关数据的简便方法。该库也是通用的，因此可以用来过滤其他数据源，而不仅仅是Django "),a("code",[t._v("QuerySet")]),t._v("。")]),t._v(" "),a("h2",{attrs:{id:"drf-url-filters"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#drf-url-filters"}},[t._v("#")]),t._v(" "),a("a",{attrs:{href:"https://www.django-rest-framework.org/api-guide/filtering/#drf-url-filters",target:"_blank",rel:"noopener noreferrer"}},[t._v("drf-url-filters"),a("OutboundLink")],1)]),t._v(" "),a("p",[a("a",{attrs:{href:"https://github.com/manjitkumar/drf-url-filters",target:"_blank",rel:"noopener noreferrer"}},[t._v("DRF-URL过滤"),a("OutboundLink")],1),t._v("是一个简单的Django应用程序对DRF应用滤镜"),a("code",[t._v("ModelViewSet")]),t._v("的"),a("code",[t._v("Queryset")]),t._v("一个清洁，简单和可配置的方式。它还支持对传入查询参数及其值的验证。一个漂亮的python包"),a("code",[t._v("Voluptuous")]),t._v("用于对传入的查询参数进行验证。关于性感的最好的部分是您可以根据查询参数要求定义自己的验证。")])])}),[],!1,null,null,null);s.default=r.exports}}]);