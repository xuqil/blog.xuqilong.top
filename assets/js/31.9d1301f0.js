(window.webpackJsonp=window.webpackJsonp||[]).push([[31],{411:function(e,r,a){"use strict";a.r(r);var t=a(11),n=Object(t.a)({},(function(){var e=this,r=e.$createElement,a=e._self._c||r;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h1",{attrs:{id:"版本控制"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#版本控制"}},[e._v("#")]),e._v(" "),a("a",{attrs:{href:"https://www.django-rest-framework.org/api-guide/versioning/#versioning",target:"_blank",rel:"noopener noreferrer"}},[e._v("版本控制"),a("OutboundLink")],1)]),e._v(" "),a("blockquote",[a("p",[e._v("对接口进行版本控制只是杀死已部署客户端的“礼貌”方式。")]),e._v(" "),a("p",[e._v("— "),a("a",{attrs:{href:"https://www.slideshare.net/evolve_conference/201308-fielding-evolve/31",target:"_blank",rel:"noopener noreferrer"}},[e._v("罗伊·菲尔丁"),a("OutboundLink")],1),e._v("（"),a("a",{attrs:{href:"https://www.slideshare.net/evolve_conference/201308-fielding-evolve/31",target:"_blank",rel:"noopener noreferrer"}},[e._v("Roy Fielding）"),a("OutboundLink")],1),e._v("。")])]),e._v(" "),a("p",[e._v("API版本控制使您可以更改不同客户端之间的行为。REST框架提供了许多不同的版本控制方案。")]),e._v(" "),a("p",[e._v("版本控制由传入的客户端请求确定，并且可以基于请求URL或基于请求标头。")]),e._v(" "),a("p",[e._v("存在许多有效的版本控制方法。"),a("a",{attrs:{href:"https://www.infoq.com/articles/roy-fielding-on-versioning",target:"_blank",rel:"noopener noreferrer"}},[e._v("非版本化的系统也可能适用"),a("OutboundLink")],1),e._v("，特别是如果您要为非常长期的系统进行工程设计时，有多个客户端不在您的控制范围内。")]),e._v(" "),a("h2",{attrs:{id:"rest框架的版本控制"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#rest框架的版本控制"}},[e._v("#")]),e._v(" "),a("a",{attrs:{href:"https://www.django-rest-framework.org/api-guide/versioning/#versioning-with-rest-framework",target:"_blank",rel:"noopener noreferrer"}},[e._v("REST框架的版本控制"),a("OutboundLink")],1)]),e._v(" "),a("p",[e._v("启用API版本控制后，该"),a("code",[e._v("request.version")]),e._v("属性将包含一个字符串，该字符串与传入客户端请求中请求的版本相对应。")]),e._v(" "),a("p",[e._v("默认情况下，版本控制未启用，并且"),a("code",[e._v("request.version")]),e._v("将始终返回"),a("code",[e._v("None")]),e._v("。")]),e._v(" "),a("h4",{attrs:{id:"根据版本的不同行为"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#根据版本的不同行为"}},[e._v("#")]),e._v(" "),a("a",{attrs:{href:"https://www.django-rest-framework.org/api-guide/versioning/#varying-behavior-based-on-the-version",target:"_blank",rel:"noopener noreferrer"}},[e._v("根据版本的不同行为"),a("OutboundLink")],1)]),e._v(" "),a("p",[e._v("如何改变API的行为由您决定，但是您通常希望的一个示例是在较新的版本中切换到另一种序列化样式。例如：")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("def get_serializer_class(self):\n    if self.request.version == 'v1':\n        return AccountSerializerVersion1\n    return AccountSerializer\n")])])]),a("h4",{attrs:{id:"反转版本api的url"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#反转版本api的url"}},[e._v("#")]),e._v(" "),a("a",{attrs:{href:"https://www.django-rest-framework.org/api-guide/versioning/#reversing-urls-for-versioned-apis",target:"_blank",rel:"noopener noreferrer"}},[e._v("反转版本API的URL"),a("OutboundLink")],1)]),e._v(" "),a("p",[a("code",[e._v("reverse")]),e._v("REST框架包含的功能与版本控制方案相关联。您需要确保将current "),a("code",[e._v("request")]),e._v("作为关键字参数包含进来，就像这样。")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("from rest_framework.reverse import reverse\n\nreverse('bookings-list', request=request)\n")])])]),a("p",[e._v("上面的函数将适用于请求版本的所有URL转换。例如：")]),e._v(" "),a("ul",[a("li",[e._v("如果"),a("code",[e._v("NamespaceVersioning")]),e._v("正在使用，并且API版本为“ v1”，则使用的URL查找将为"),a("code",[e._v("'v1:bookings-list'")]),e._v("，它可能会解析为"),a("code",[e._v("http://example.org/v1/bookings/")]),e._v("。")]),e._v(" "),a("li",[e._v("如果"),a("code",[e._v("QueryParameterVersioning")]),e._v("正在使用，并且API版本为"),a("code",[e._v("1.0")]),e._v("，则返回的URL可能类似于"),a("code",[e._v("http://example.org/bookings/?version=1.0")])])]),e._v(" "),a("h4",{attrs:{id:"版本化的api和超链接的序列化器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#版本化的api和超链接的序列化器"}},[e._v("#")]),e._v(" "),a("a",{attrs:{href:"https://www.django-rest-framework.org/api-guide/versioning/#versioned-apis-and-hyperlinked-serializers",target:"_blank",rel:"noopener noreferrer"}},[e._v("版本化的API和超链接的序列化器"),a("OutboundLink")],1)]),e._v(" "),a("p",[e._v("当使用超链接的序列化样式以及基于URL的版本控制方案时，请确保将请求作为上下文包含到序列化器中。")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("def get(self, request):\n    queryset = Booking.objects.all()\n    serializer = BookingsSerializer(queryset, many=True, context={'request': request})\n    return Response({'all_bookings': serializer.data})\n")])])]),a("p",[e._v("这样做将允许所有返回的URL包含适当的版本控制。")]),e._v(" "),a("h2",{attrs:{id:"配置版本控制方案"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#配置版本控制方案"}},[e._v("#")]),e._v(" "),a("a",{attrs:{href:"https://www.django-rest-framework.org/api-guide/versioning/#configuring-the-versioning-scheme",target:"_blank",rel:"noopener noreferrer"}},[e._v("配置版本控制方案"),a("OutboundLink")],1)]),e._v(" "),a("p",[e._v("版本"),a("code",[e._v("DEFAULT_VERSIONING_CLASS")]),e._v("设置方案由设置键定义。")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("REST_FRAMEWORK = {\n    'DEFAULT_VERSIONING_CLASS': 'rest_framework.versioning.NamespaceVersioning'\n}\n")])])]),a("p",[e._v("除非明确设置，该值"),a("code",[e._v("DEFAULT_VERSIONING_CLASS")]),e._v("将是"),a("code",[e._v("None")]),e._v("。在这种情况下，"),a("code",[e._v("request.version")]),e._v("属性将始终返回"),a("code",[e._v("None")]),e._v("。")]),e._v(" "),a("p",[e._v("您还可以在单个视图上设置版本控制方案。通常，您不需要这样做，因为在全局范围内使用单个版本控制方案会更有意义。如果确实需要这样做，请使用该"),a("code",[e._v("versioning_class")]),e._v("属性。")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("class ProfileList(APIView):\n    versioning_class = versioning.QueryParameterVersioning\n")])])]),a("h4",{attrs:{id:"其他版本控制设置"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#其他版本控制设置"}},[e._v("#")]),e._v(" "),a("a",{attrs:{href:"https://www.django-rest-framework.org/api-guide/versioning/#other-versioning-settings",target:"_blank",rel:"noopener noreferrer"}},[e._v("其他版本控制设置"),a("OutboundLink")],1)]),e._v(" "),a("p",[e._v("以下设置键还用于控制版本控制：")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("DEFAULT_VERSION")]),e._v("。"),a("code",[e._v("request.version")]),e._v("不存在版本信息时应使用的值。默认为"),a("code",[e._v("None")]),e._v("。")]),e._v(" "),a("li",[a("code",[e._v("ALLOWED_VERSIONS")]),e._v("。如果设置，则此值将限制版本控制方案可能返回的版本集，并且如果提供的版本不在此版本集中，则会引发错误。请注意，用于"),a("code",[e._v("DEFAULT_VERSION")]),e._v("设置的值始终被认为是"),a("code",[e._v("ALLOWED_VERSIONS")]),e._v("集合的一部分（除非它是"),a("code",[e._v("None")]),e._v("）。默认为"),a("code",[e._v("None")]),e._v("。")]),e._v(" "),a("li",[a("code",[e._v("VERSION_PARAM")]),e._v("。任何版本控制参数都应使用的字符串，例如媒体类型或URL查询参数。默认为"),a("code",[e._v("'version'")]),e._v("。")])]),e._v(" "),a("p",[e._v("您还可以设置你的版本类加上这三个值在每个视图或每个视图集基础上定义自己的版本控制方案和使用"),a("code",[e._v("default_version")]),e._v("，"),a("code",[e._v("allowed_versions")]),e._v("以及"),a("code",[e._v("version_param")]),e._v("类变量。例如，如果要使用"),a("code",[e._v("URLPathVersioning")]),e._v("：")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("from rest_framework.versioning import URLPathVersioning\nfrom rest_framework.views import APIView\n\nclass ExampleVersioning(URLPathVersioning):\n    default_version = ...\n    allowed_versions = ...\n    version_param = ...\n\nclass ExampleView(APIVIew):\n    versioning_class = ExampleVersioning\n")])])]),a("hr"),e._v(" "),a("h1",{attrs:{id:"api参考"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#api参考"}},[e._v("#")]),e._v(" "),a("a",{attrs:{href:"https://www.django-rest-framework.org/api-guide/versioning/#api-reference",target:"_blank",rel:"noopener noreferrer"}},[e._v("API参考"),a("OutboundLink")],1)]),e._v(" "),a("h2",{attrs:{id:"acceptheaderversioning"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#acceptheaderversioning"}},[e._v("#")]),e._v(" "),a("a",{attrs:{href:"https://www.django-rest-framework.org/api-guide/versioning/#acceptheaderversioning",target:"_blank",rel:"noopener noreferrer"}},[e._v("AcceptHeaderVersioning"),a("OutboundLink")],1)]),e._v(" "),a("p",[e._v("此方案要求客户端在"),a("code",[e._v("Accept")]),e._v("标头中指定版本作为媒体类型的一部分。该版本作为媒体类型参数包括在内，它是对主要媒体类型的补充。")]),e._v(" "),a("p",[e._v("这是一个使用accept标头版本控制样式的HTTP请求示例。")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("GET /bookings/ HTTP/1.1\nHost: example.com\nAccept: application/json; version=1.0\n")])])]),a("p",[e._v("在示例中，上面的request "),a("code",[e._v("request.version")]),e._v("属性将返回字符串"),a("code",[e._v("'1.0'")]),e._v("。")]),e._v(" "),a("p",[e._v("版本基础上接受头部被"),a("a",{attrs:{href:"http://blog.steveklabnik.com/posts/2011-07-03-nobody-understands-rest-or-http#i_want_my_api_to_be_versioned",target:"_blank",rel:"noopener noreferrer"}},[e._v("普遍认为"),a("OutboundLink")],1),e._v("是"),a("a",{attrs:{href:"https://github.com/interagent/http-api-design/blob/master/en/foundations/require-versioning-in-the-accepts-header.md",target:"_blank",rel:"noopener noreferrer"}},[e._v("最好的做法"),a("OutboundLink")],1),e._v("，但其他样式可能会根据您的客户的需求是合适的。")]),e._v(" "),a("h4",{attrs:{id:"对供应商媒体类型使用接受标头"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#对供应商媒体类型使用接受标头"}},[e._v("#")]),e._v(" "),a("a",{attrs:{href:"https://www.django-rest-framework.org/api-guide/versioning/#using-accept-headers-with-vendor-media-types",target:"_blank",rel:"noopener noreferrer"}},[e._v("对供应商媒体类型使用接受标头"),a("OutboundLink")],1)]),e._v(" "),a("p",[e._v("严格来说，"),a("code",[e._v("json")]),e._v("没有将媒体类型指定为"),a("a",{attrs:{href:"https://tools.ietf.org/html/rfc4627#section-6",target:"_blank",rel:"noopener noreferrer"}},[e._v("包含其他参数"),a("OutboundLink")],1),e._v("。如果您要构建指定明确的公共API，则可以考虑使用"),a("a",{attrs:{href:"https://en.wikipedia.org/wiki/Internet_media_type#Vendor_tree",target:"_blank",rel:"noopener noreferrer"}},[e._v("供应商媒体类型"),a("OutboundLink")],1),e._v("。为此，将渲染器配置为使用具有自定义媒体类型的基于JSON的渲染器：")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("class BookingsAPIRenderer(JSONRenderer):\n    media_type = 'application/vnd.megacorp.bookings+json'\n")])])]),a("p",[e._v("您的客户请求现在看起来像这样：")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("GET /bookings/ HTTP/1.1\nHost: example.com\nAccept: application/vnd.megacorp.bookings+json; version=1.0\n")])])]),a("h2",{attrs:{id:"urlpathversioning"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#urlpathversioning"}},[e._v("#")]),e._v(" "),a("a",{attrs:{href:"https://www.django-rest-framework.org/api-guide/versioning/#urlpathversioning",target:"_blank",rel:"noopener noreferrer"}},[e._v("URLPathVersioning"),a("OutboundLink")],1)]),e._v(" "),a("p",[e._v("此方案要求客户端将版本指定为URL路径的一部分。")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("GET /v1/bookings/ HTTP/1.1\nHost: example.com\nAccept: application/json\n")])])]),a("p",[e._v("您的URL conf必须包含一个与版本和"),a("code",[e._v("'version'")]),e._v("关键字参数匹配的模式，以便此信息可用于版本控制方案。")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("urlpatterns = [\n    re_path(\n        r'^(?P<version>(v1|v2))/bookings/$',\n        bookings_list,\n        name='bookings-list'\n    ),\n    re_path(\n        r'^(?P<version>(v1|v2))/bookings/(?P<pk>[0-9]+)/$',\n        bookings_detail,\n        name='bookings-detail'\n    )\n]\n")])])]),a("h2",{attrs:{id:"命名空间版本"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#命名空间版本"}},[e._v("#")]),e._v(" "),a("a",{attrs:{href:"https://www.django-rest-framework.org/api-guide/versioning/#namespaceversioning",target:"_blank",rel:"noopener noreferrer"}},[e._v("命名空间版本"),a("OutboundLink")],1)]),e._v(" "),a("p",[e._v("对于客户而言，此方案与相同"),a("code",[e._v("URLPathVersioning")]),e._v("。唯一的区别是它在Django应用程序中的配置方式，因为它使用URL名称间隔而不是URL关键字参数。")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("GET /v1/something/ HTTP/1.1\nHost: example.com\nAccept: application/json\n")])])]),a("p",[e._v("使用此方案，"),a("code",[e._v("request.version")]),e._v("将根据"),a("code",[e._v("namespace")]),e._v("与传入请求路径匹配的属性来确定属性。")]),e._v(" "),a("p",[e._v("在以下示例中，我们为一组视图提供了两个不同的可能的URL前缀，每个前缀都在不同的命名空间下：")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("# bookings/urls.py\nurlpatterns = [\n    re_path(r'^$', bookings_list, name='bookings-list'),\n    re_path(r'^(?P<pk>[0-9]+)/$', bookings_detail, name='bookings-detail')\n]\n\n# urls.py\nurlpatterns = [\n    re_path(r'^v1/bookings/', include('bookings.urls', namespace='v1')),\n    re_path(r'^v2/bookings/', include('bookings.urls', namespace='v2'))\n]\n")])])]),a("p",[e._v("如果只需要简单的版本控制方案"),a("code",[e._v("URLPathVersioning")]),e._v("，"),a("code",[e._v("NamespaceVersioning")]),e._v("则两者和都是合理的。该"),a("code",[e._v("URLPathVersioning")]),e._v("方法可能更适合于小型临时项目，"),a("code",[e._v("NamespaceVersioning")]),e._v("对于大型项目可能更易于管理。")]),e._v(" "),a("h2",{attrs:{id:"主机名版本"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#主机名版本"}},[e._v("#")]),e._v(" "),a("a",{attrs:{href:"https://www.django-rest-framework.org/api-guide/versioning/#hostnameversioning",target:"_blank",rel:"noopener noreferrer"}},[e._v("主机名版本"),a("OutboundLink")],1)]),e._v(" "),a("p",[e._v("主机名版本控制方案要求客户端在URL中指定请求的版本作为主机名的一部分。")]),e._v(" "),a("p",[e._v("例如，以下是对"),a("code",[e._v("http://v1.example.com/bookings/")]),e._v("URL 的HTTP请求：")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("GET /bookings/ HTTP/1.1\nHost: v1.example.com\nAccept: application/json\n")])])]),a("p",[e._v("默认情况下，此实现期望主机名与以下简单正则表达式匹配：")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("^([a-zA-Z0-9]+)\\.[a-zA-Z0-9]+\\.[a-zA-Z0-9]+$\n")])])]),a("p",[e._v("请注意，第一组括在方括号中，表明这是主机名的匹配部分。")]),e._v(" "),a("p",[a("code",[e._v("HostNameVersioning")]),e._v("在调试模式下使用该方案可能会很麻烦，因为您通常会访问原始IP地址，例如"),a("code",[e._v("127.0.0.1")]),e._v("。关于如何"),a("a",{attrs:{href:"https://reinteractive.net/posts/199-developing-and-testing-rails-applications-with-subdomains",target:"_blank",rel:"noopener noreferrer"}},[e._v("使用自定义子域访问本地主机的"),a("OutboundLink")],1),e._v("在线教程有很多，在这种情况下，您可能会有所帮助。")]),e._v(" "),a("p",[e._v("如果您有要求根据版本将传入的请求路由到其他服务器，则基于主机名的版本控制特别有用，因为您可以为不同的API版本配置不同的DNS记录。")]),e._v(" "),a("h2",{attrs:{id:"queryparameterversioning"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#queryparameterversioning"}},[e._v("#")]),e._v(" "),a("a",{attrs:{href:"https://www.django-rest-framework.org/api-guide/versioning/#queryparameterversioning",target:"_blank",rel:"noopener noreferrer"}},[e._v("QueryParameterVersioning"),a("OutboundLink")],1)]),e._v(" "),a("p",[e._v("此方案是一种简单的样式，其中包括版本作为URL中的查询参数。例如：")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("GET /something/?version=0.1 HTTP/1.1\nHost: example.com\nAccept: application/json\n")])])]),a("hr"),e._v(" "),a("h1",{attrs:{id:"自定义版本控制方案"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#自定义版本控制方案"}},[e._v("#")]),e._v(" "),a("a",{attrs:{href:"https://www.django-rest-framework.org/api-guide/versioning/#custom-versioning-schemes",target:"_blank",rel:"noopener noreferrer"}},[e._v("自定义版本控制方案"),a("OutboundLink")],1)]),e._v(" "),a("p",[e._v("要实现自定义版本控制方案，请子类化"),a("code",[e._v("BaseVersioning")]),e._v("并重写该"),a("code",[e._v(".determine_version")]),e._v("方法。")]),e._v(" "),a("h2",{attrs:{id:"例"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#例"}},[e._v("#")]),e._v(" "),a("a",{attrs:{href:"https://www.django-rest-framework.org/api-guide/versioning/#example",target:"_blank",rel:"noopener noreferrer"}},[e._v("例"),a("OutboundLink")],1)]),e._v(" "),a("p",[e._v("以下示例使用自定义"),a("code",[e._v("X-API-Version")]),e._v("标头来确定请求的版本。")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("class XAPIVersionScheme(versioning.BaseVersioning):\n    def determine_version(self, request, *args, **kwargs):\n        return request.META.get('HTTP_X_API_VERSION', None)\n")])])]),a("p",[e._v("如果您的版本控制方案基于请求URL，则您还需要更改确定版本URL的方式。为此，您应该覆盖"),a("code",[e._v(".reverse()")]),e._v("该类上的方法。有关示例，请参见源代码。")])])}),[],!1,null,null,null);r.default=n.exports}}]);